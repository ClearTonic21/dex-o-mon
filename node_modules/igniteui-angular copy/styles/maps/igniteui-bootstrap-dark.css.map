{"version":3,"sources":["../../components/_common/_igx-display-container.scss","../../components/_common/_igx-drag.scss","../../components/_common/_igx-vhelper.scss","../_core.scss","../../../../../../../../node_modules/igniteui-theming/sass/bem/_index.scss","../../../../../../../../node_modules/igniteui-theming/sass/themes/_mixins.scss","../../components/chip/_chip-component.scss","../../components/icon/_icon-component.scss","../../print/_index.scss","../../typography/_typography.scss","../../../../../../../../node_modules/igniteui-theming/sass/themes/charts/_category-chart-theme.scss","../../../../../../../../node_modules/igniteui-theming/sass/themes/charts/_data-chart-theme.scss","../../../../../../../../node_modules/igniteui-theming/sass/themes/charts/_financial-chart-theme.scss","../../../../../../../../node_modules/igniteui-theming/sass/themes/charts/_funnel-chart-theme.scss","../../../../../../../../node_modules/igniteui-theming/sass/themes/charts/_gauge-theme.scss","../../../../../../../../node_modules/igniteui-theming/sass/themes/charts/_graph-theme.scss","../../../../../../../../node_modules/igniteui-theming/sass/themes/charts/_pie-chart-theme.scss","../../../../../../../../node_modules/igniteui-theming/sass/themes/charts/_shape-chart-theme.scss","../../components/banner/_banner-theme.scss","../../../../../../../../node_modules/igniteui-theming/sass/typography/_mixins.scss","../../components/bottom-nav/_bottom-nav-theme.scss","../../components/button/_button-theme.scss","../../components/calendar/_calendar-theme.scss","../../components/card/_card-theme.scss","../../components/checkbox/_checkbox-theme.scss","../../components/chip/_chip-theme.scss","../../components/column-actions/_column-actions-theme.scss","../../components/dialog/_dialog-theme.scss","../../components/dock-manager/_dock-manager-theme.scss","../../components/drop-down/_drop-down-theme.scss","../../components/expansion-panel/_expansion-panel-theme.scss","../../components/grid/_excel-filtering-theme.scss","../../components/input/_input-group-theme.scss","../../components/list/_list-theme.scss","../../components/navbar/_navbar-theme.scss","../../components/navdrawer/_navdrawer-theme.scss","../../components/radio/_radio-theme.scss","../../components/slider/_slider-theme.scss","../../components/snackbar/_snackbar-theme.scss","../../components/switch/_switch-theme.scss","../../components/tabs/_tabs-theme.scss","../../components/time-picker/_time-picker-theme.scss","../../components/stepper/_stepper-theme.scss","../../components/toast/_toast-theme.scss","../../components/tooltip/_tooltip-theme.scss","../../components/tree/_tree-theme.scss","../generators/_base.scss","../../../../../../../../node_modules/igniteui-theming/sass/color/_mixins.scss","../../../../../../../../node_modules/igniteui-theming/sass/elevations/_mixins.scss","../../components/ripple/_ripple-theme.scss","../../components/avatar/_avatar-theme.scss","../../components/action-strip/_action-strip-theme.scss","../../components/badge/_badge-theme.scss","../../components/button-group/_button-group-theme.scss","../../../../../../../../node_modules/igniteui-theming/sass/animations/_mixins.scss","../../../../../../../../node_modules/igniteui-theming/sass/animations/entrances/_scale.scss","../../../../../../../../node_modules/igniteui-theming/sass/animations/exits/_scale.scss","../../components/carousel/_carousel-theme.scss","../../components/splitter/_splitter-theme.scss","../../../../../../../../node_modules/igniteui-theming/sass/animations/generic/_scale.scss","../../components/combo/_combo-theme.scss","../../components/select/_select-theme.scss","../../components/date-picker/_date-picker-theme.scss","../../components/date-range-picker/_date-range-picker-theme.scss","../../components/divider/_divider-theme.scss","../../components/rating/_rating-theme.scss","../../components/grid/_grid-theme.scss","../../components/grid-summary/_grid-summary-theme.scss","../../components/grid-toolbar/_grid-toolbar-theme.scss","../../components/grid/_pivot-data-selector-theme.scss","../../components/highlight/highlight-theme.scss","../../components/icon/_icon-theme.scss","../../../../../../../../node_modules/igniteui-theming/sass/animations/_easings.scss","../../components/overlay/_overlay-theme.scss","../../components/paginator/_paginator-theme.scss","../../../../../../../../node_modules/igniteui-theming/sass/animations/generic/_rotate.scss","../../components/progress/_progress-theme.scss","../../components/query-builder/_query-builder-theme.scss","../../components/scrollbar/scrollbar-theme.scss","../../../../../../../../node_modules/igniteui-theming/sass/animations/entrances/_fade.scss","../../components/watermark/_watermark-theme.scss"],"names":[],"mappings":"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","file":"../igniteui-bootstrap-dark.css","sourcesContent":["@use 'igniteui-theming/sass/bem' as *;\r\n\r\n%display-container {\r\n    display: inherit;\r\n    flex-flow: inherit;\r\n    position: relative;\r\n    width: 100%;\r\n    overflow: hidden;\r\n    flex-shrink: 0;\r\n}\r\n\r\n%display-container--inactive {\r\n    width: 100%;\r\n}\r\n\r\n@mixin component {\r\n    @include b(igx-display-container) {\r\n        @extend %display-container !optional;\r\n\r\n        @include m(inactive) {\r\n            @extend %display-container--inactive !optional;\r\n        }\r\n    }\r\n}\r\n","@use 'igniteui-theming/sass/bem' as *;\r\n\r\n%drag {\r\n    touch-action: none;\r\n}\r\n\r\n%drag--select-disabled {\r\n    user-select: none;\r\n}\r\n\r\n%drag-handle {\r\n    user-select: none;\r\n}\r\n\r\n@mixin component {\r\n    @include b(igx-drag) {\r\n        @extend %drag !optional;\r\n\r\n        @include e(handle) {\r\n            @extend %drag-handle !optional;\r\n        }\r\n\r\n        @include m(select-disabled) {\r\n            @extend %drag--select-disabled !optional;\r\n        }\r\n    }\r\n}\r\n","@use 'igniteui-theming/sass/bem' as *;\r\n\r\n/// @group themes\r\n/// @access private\r\n%vhelper-display {\r\n    display: block;\r\n    overflow: auto;\r\n    z-index: 10001;\r\n}\r\n\r\n%vhelper--vertical {\r\n    position: absolute;\r\n    top: 0;\r\n    inset-inline-end: 0;\r\n}\r\n\r\n%vhelper--horizontal {\r\n    width: 100%;\r\n}\r\n\r\n%vhelper-content--vertical {\r\n    width: 1px;\r\n}\r\n\r\n%vhelper-content--horizontal {\r\n    height: 1px;\r\n}\r\n\r\n@mixin component {\r\n    @include b(igx-vhelper) {\r\n        @include m(vertical) {\r\n            @extend %vhelper-display !optional;\r\n            @extend %vhelper--vertical !optional;\r\n\r\n            @include e(placeholder-content) {\r\n                @extend %vhelper-content--vertical !optional;\r\n            }\r\n        }\r\n\r\n        @include m(horizontal) {\r\n            @extend %vhelper-display !optional;\r\n            @extend %vhelper--horizontal !optional;\r\n\r\n            @include e(placeholder-content) {\r\n                @extend %vhelper-content--horizontal !optional;\r\n            }\r\n        }\r\n    }\r\n}\r\n","////\r\n/// @group themes\r\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\r\n////\r\n\r\n@use '../base';\r\n\r\n// Used to configure color accessibility for charts\r\n@use 'igniteui-theming/sass/color/functions' as color;\r\n\r\n// Common components\r\n@use '../components/_common/igx-control';\r\n@use '../components/_common/igx-display-container' as display-container;\r\n@use '../components/_common/igx-drag' as drag;\r\n@use '../components/_common/igx-vhelper' as vhelper;\r\n@use '../components/ripple/ripple-component' as ripple;\r\n\r\n// Other components\r\n@use '../components/action-strip/action-strip-component' as action-strip;\r\n@use '../components/avatar/avatar-component' as avatar;\r\n@use '../components/badge/badge-component' as badge;\r\n@use '../components/bottom-nav/bottom-nav-component' as bottom-nav;\r\n@use '../components/button/button-component' as button;\r\n@use '../components/divider/divider-component' as divider;\r\n@use '../components/button-group/button-group-component' as button-group;\r\n@use '../components/banner/banner-component' as banner;\r\n@use '../components/calendar/calendar-component' as calendar;\r\n@use '../components/card/card-component' as card;\r\n@use '../components/carousel/carousel-component' as carousel;\r\n@use '../components/checkbox/checkbox-component' as checkbox;\r\n@use '../components/chip/chip-component' as chip;\r\n@use '../components/column-actions/column-actions-component' as column-actions;\r\n@use '../components/combo/combo-component' as combo;\r\n@use '../components/select/select-component' as select;\r\n@use '../components/charts/category-chart-component' as category-chart;\r\n@use '../components/charts/data-chart-component' as data-chart;\r\n@use '../components/charts/doughnut-chart-component' as doughnut-chart;\r\n@use '../components/charts/financial-chart-component' as financial-chart;\r\n@use '../components/charts/funnel-chart-component' as funnel-chart;\r\n@use '../components/charts/gauge-component' as gauge;\r\n@use '../components/charts/geo-map-component' as geo-map;\r\n@use '../components/charts/graph-component' as graph;\r\n@use '../components/charts/pie-chart-component' as pie-chart;\r\n@use '../components/charts/shape-chart-component' as shape-chart;\r\n@use '../components/charts/sparkline-component' as sparkline;\r\n@use '../components/date-picker/date-picker-component' as date-picker;\r\n@use '../components/date-range-picker/date-range-picker-component' as date-range-picker;\r\n@use '../components/dialog/dialog-component' as dialog;\r\n@use '../components/dock-manager/dock-manager-component' as dock-manager;\r\n@use '../components/rating/rating-component' as rating;\r\n@use '../components/drop-down/drop-down-component' as drop-down;\r\n@use '../components/expansion-panel/expansion-panel-component' as expansion-panel;\r\n@use '../components/grid/grid-component' as grid;\r\n@use '../components/grid/pivot-data-selector-component' as pivot-data-selector;\r\n@use '../components/grid-summary/grid-summary-component' as grid-summary;\r\n@use '../components/grid-toolbar/grid-toolbar-component' as grid-toolbar;\r\n@use '../components/highlight/highlight-component' as highlight;\r\n@use '../components/icon/icon-component' as icon;\r\n@use '../components/input/input-group-component' as input-group;\r\n@use '../components/list/list-component' as list;\r\n@use '../components/navbar/navbar-component' as navbar;\r\n@use '../components/navdrawer/navdrawer-component' as navdrawer;\r\n@use '../components/overlay/overlay-component' as overlay;\r\n@use '../components/paginator/paginator-component' as paginator;\r\n@use '../components/progress/progress-component' as progress;\r\n@use '../components/radio/radio-component' as radio;\r\n@use '../components/query-builder/query-builder-component' as query-builder;\r\n@use '../components/scrollbar/scrollbar-component' as scrollbar;\r\n@use '../components/slider/slider-component' as slider;\r\n@use '../components/splitter/splitter-component' as splitter;\r\n@use '../components/snackbar/snackbar-component' as snackbar;\r\n@use '../components/switch/switch-component' as switch;\r\n@use '../components/stepper/stepper-component' as stepper;\r\n@use '../components/tabs/tabs-component' as tabs;\r\n@use '../components/toast/toast-component' as toast;\r\n@use '../components/tooltip/tooltip-component' as tooltip;\r\n@use '../components/time-picker/time-picker-component' as time-picker;\r\n@use '../components/tree/tree-component' as tree;\r\n@use '../components/watermark/watermark-component' as watermark;\r\n@use '../print';\r\n\r\n/// @param {boolean} $print-layout [true] - Activates the printing styles of the components.\r\n/// @param {boolean} $enhanced-accesibility [false] - Switches component colors and other properties to more accessible values.\r\n@mixin core(\r\n    $print-layout: true,\r\n    $enhanced-accessibility: false\r\n) {\r\n    @include color.configure-colors($enhanced-accessibility);\r\n\r\n    // Angular hack for binding to [hidden] property\r\n    // not working\r\n    [hidden] {\r\n        display: none !important;\r\n    }\r\n\r\n    // Common styles\r\n    @include vhelper.component();\r\n    @include display-container.component();\r\n    @include drag.component();\r\n\r\n    // Includes the base for each theme.\r\n    [class^='igx-'],\r\n    [class^='ig-'] {\r\n        &,\r\n        *,\r\n        *::before,\r\n        *::after {\r\n            box-sizing: border-box;\r\n        }\r\n    }\r\n\r\n    // Component styles\r\n    @include ripple.component();\r\n    @include action-strip.component();\r\n    @include avatar.component();\r\n    @include badge.component();\r\n    @include banner.component();\r\n    @include bottom-nav.component();\r\n    @include button.component();\r\n    @include button-group.component();\r\n    @include divider.component();\r\n    @include calendar.component();\r\n    @include card.component();\r\n    @include carousel.component();\r\n    @include checkbox.component();\r\n    @include chip.component();\r\n    @include column-actions.component();\r\n    @include combo.component();\r\n    @include select.component();\r\n    @include category-chart.component();\r\n    @include data-chart.component();\r\n    @include doughnut-chart.component();\r\n    @include financial-chart.component();\r\n    @include funnel-chart.component();\r\n    @include gauge.component();\r\n    @include geo-map.component();\r\n    @include graph.component();\r\n    @include pie-chart.component();\r\n    @include shape-chart.component();\r\n    @include sparkline.component();\r\n    @include date-picker.component();\r\n    @include date-range-picker.component();\r\n    @include dialog.component();\r\n    @include dock-manager.component();\r\n    @include rating.component();\r\n    @include drop-down.component();\r\n    @include expansion-panel.component();\r\n    @include grid.component();\r\n    @include grid-summary.component();\r\n    @include grid-toolbar.component();\r\n    @include pivot-data-selector.component();\r\n    @include highlight.component();\r\n    @include icon.component();\r\n    @include input-group.component();\r\n    @include list.component();\r\n    @include navbar.component();\r\n    @include navdrawer.component();\r\n    @include overlay.component();\r\n    @include paginator.component();\r\n    @include progress.component();\r\n    @include radio.component();\r\n    @include query-builder.component();\r\n    @include scrollbar.component();\r\n    @include slider.component();\r\n    @include splitter.component();\r\n    @include snackbar.component();\r\n    @include switch.component();\r\n    @include stepper.component();\r\n    @include tabs.component();\r\n    @include toast.component();\r\n    @include tooltip.component();\r\n    @include time-picker.component();\r\n    @include tree.component();\r\n    @include watermark.component();\r\n\r\n    // Build the component dependecy-tree\r\n    @include base.dependecy-tree(base.$components);\r\n\r\n    @if $print-layout == true {\r\n        @include print.layout();\r\n    }\r\n}\r\n\r\n","/* stylelint-disable max-line-length */\n@use 'sass:string';\n@use 'sass:meta';\n@use 'sass:list';\n@use 'sass:selector';\n\n////\n/// @group bem\n/// @author <a href=\"https://github.com/runningskull\" target=\"_blank\">Juan Patten</a>\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @package theming\n////\n\n/// @type String - The Element separator used. Default '__'.\n/// @access private\n$bem--sep-elem: if(meta.variable-exists(bem--sep-elem), $bem--sep-elem, '__');\n\n/// @type String - The Modifier separator used. Default '--'.\n/// @access private\n$bem--sep-mod: if(meta.variable-exists(bem--sep-mod), $bem--sep-mod, '--');\n\n/// @type String - The Modifier Value separator used. Default '-'.\n/// @access private\n$bem--sep-mod-val: if(meta.variable-exists(bem--sep-mod-val), $bem--sep-mod-val, '-');\n\n/// Converts a passed selector value into plain string.\n/// @access private\n/// @param {String} $s - The selector to be converted.\n@function bem--selector-to-string($s) {\n    @if not($s) {\n        @return '';\n    }\n\n    @return string.slice(meta.inspect($s), 2, -3);\n}\n\n/// Prepends a dot to the passed BEM selector.\n/// @access private\n/// @param {String} $x - The BEM selector to prepend a dot to.\n@function bem--with-dot($x) {\n    $first: string.slice($x, 0, 1);\n\n    @return if($first == '.', $x, string.insert($x, '.', -100));\n}\n\n/// Converts a key-value map into a modifier string.\n/// @access private\n@function bem--mod-str($m) {\n    @if meta.type-of($m) == 'map' {\n        $mm: list.nth($m, 1);\n\n        @return list.nth($mm, 1) + $bem--sep-mod-val + list.nth($mm, 2);\n    } @else {\n        @return $m;\n    }\n}\n\n/// Prefixes the block name to an element selector string,\n/// with the element separator string used as a divider.\n/// @access private\n/// @param {String} $b - The block name.\n/// @param {String} $e - The element name.\n@function bem--elem-str($b, $e) {\n    @return $b + $bem--sep-elem + $e;\n}\n\n/// Returns a block selector string affixed by the modifier selector,\n/// followed by the element selector string.\n/// @access private\n/// @param {String} $block - The block name.\n/// @param {String} $elem - The sub-element name.\n/// @param {String} $mod - The modifier name.\n@function bem--bem-str($block, $elem, $mod) {\n    $elem: if($elem, ' ' + $elem, '');\n\n    @return ($block + $bem--sep-mod + bem--mod-str($mod) + $elem);\n}\n\n/// Checks if the element separator string is part of the passed string.\n/// @access private\n/// @param {String} $x - The string to check.\n/// @returns {number|null} Will return the index of the occurance,\n/// or null if the element separator name is not part of the passed string.\n@function bem--contains-elem($x) {\n    // if you set the separators to common strings, this could fail\n    @return string.index($x, $bem--sep-elem);\n}\n\n/// Checks if the modifier separator string is part of the passed string.\n/// @access private\n/// @param {String} $x - The string to check.\n/// @returns {number|null} Will return the index of the occurance,\n/// or null if the modifier separator string is not part of the passed string.\n@function bem--contains-mod($x) {\n    // if you set the separators to common strings, this could fail\n    @return string.index($x, $bem--sep-mod);\n}\n\n/// Checks if the passed selector string contains a colon.\n/// @access private\n/// @param {String} $x - The string to check for colons.\n/// @returns {number|null} Will return the index of the occurance,\n/// or null if the string does not contain any colons.\n@function bem--contains-pseudo($x) {\n    @return string.index($x, ':');\n}\n\n/// Returns the BEM block-name that generated `$x`. Does not include leading \".\".\n/// @access private\n/// @param {String} $x - The block name.\n@function bem--extract-block($x) {\n    @if bem--contains-mod($x) {\n        @return string.slice($x, 1, string.index($x, $bem--sep-mod) - 1);\n    } @else if bem--contains-elem($x) {\n        @return string.slice($x, 1, string.index($x, $bem--sep-elem) - 1);\n    } @else if bem--contains-pseudo($x) {\n        @return string.slice($x, 1, string.index($x, ':') - 1);\n    }\n\n    @return $x;\n}\n\n/// Returns the first selector of a nested selector string.\n/// @access private\n@function bem--extract-first-selector($x) {\n    $eow: string.index($x, ' ') or -1;\n\n    @return string.slice($x, 1, $eow);\n}\n\n/// Generates a full BEM selector.\n/// @access private\n/// @param {String} $block - Required. A string block name.\n/// @param {String|List} $elem - Optional. A sub-element name. If `$mod` is not present, it is\n/// joined with $block. If $mod is present, it is nested under `$block--$mod`.\n/// @param {String|Map} $mod - Optional. A block modifier.\n/// @example scss Include a block\n///   @include bem-selector(block); // outputs .block\n/// @example scss Include a block and an element\n///   @include bem-selector(block, $e:elem); // outputs .block__elem\n/// @example scss Include block, element, and element modifier\n///   @include bem-selector(block, $e:(elem, $mod); // outputs .block__elem-emod\n/// @example scss Include block and block modifier\n///   @include bem-selector(block, $m:mod) // outputs .block--mod\n/// @example scss Include block and modifier value\n///   @include bem-selector(block, $m:(mod:val)); // outputs .block--mod-val\n/// @example scss Include block modifier followed by block sub-element\n///   @include bem-selector(block, $m:mod, $e:elem); // outputs .block--mod .block__elem\n@function bem-selector($block, $e: null, $elem: null, $m: null, $mod: null, $mods: null) {\n    $block: bem--with-dot($block);\n    $elem: $e or $elem;\n\n    // Return early if possible\n    $mods: $m or $mod or $mods;\n\n    @if not($elem or $mods) {\n        @return $block;\n    }\n\n    @if $elem {\n        // User passed an element-specific modifier\n        @if meta.type-of($elem) == list and list.nth($elem, 2) {\n            // For now we don't support multiple elem-mods at once\n            @if meta.type-of(list.nth($elem, 2)) == 'list' {\n                @error 'Only one element-modifier allowed.';\n            }\n\n            $elem: string.slice(bem-selector(list.nth($elem, 1), $m: list.nth($elem, 2)), 2);\n        }\n\n        $elem: bem--elem-str($block, $elem);\n    }\n\n    @if not $mods {\n        @return bem--with-dot($elem);\n    }\n\n    @if meta.type-of($mods) != 'list' {\n        $mods: ($mods);\n    }\n\n    $bemcls: '';\n\n    @for $i from 1 to list.length($mods) {\n        $bemcls: $bemcls + bem--bem-str($block, $elem, list.nth($mods, $i)) + ', ';\n    }\n\n    $bemcls: $bemcls + bem--bem-str($block, $elem, list.nth($mods, -1));\n\n    @return $bemcls;\n}\n\n/// Simply unrolls into a class-selector. The main purpose of using this mixin\n/// is to clearly denote the start of a BEM block.\n/// @access public scss\n/// @param {String} $block - The block name.\n/// @example\n///   @include bem-block(block) {\n///      background: green;\n///   }\n///   // Return\n///   .block { background: green; }\n@mixin bem-block($block) {\n    @at-root {\n        #{bem-selector($block)} {\n            @content;\n        }\n    }\n}\n\n/// Unrolls into a proper BEM element selector, depending on the context.\n/// Inside just a block, yields a root-level `.block__elem`.\n/// Inside a mod or pseudo-selector, yields a nested `.block--mod .block__elem`.\n/// If $mod is included, it is appended to the block selector. Multiple\n/// $mods are not supported.\n/// @access public\n/// @param {String} $elem - The sub-element name.\n/// @param {String} $m - The modifier name.\n/// @param {String} $mod - An alias of `$m`.\n/// @example scss\n///   @include bem-block(block) {\n///      @include bem-elem(element) {\n///        background: blue;\n///      }\n///   }\n///   // Return\n///   .block__element { background: blue; }\n@mixin bem-elem($elem, $m: null, $mod: null, $mods: null) {\n    $this: bem--selector-to-string(&);\n    $block: bem--extract-block($this);\n    $first: bem--extract-first-selector($this);\n    $nested: bem--contains-pseudo($this) or bem--contains-mod($this);\n    $mod: $m or $mod;\n    $mx: ();\n\n    @if $this == '' {\n        @error 'Detected an Element that is not inside a Block: #{$elem}';\n    }\n\n    @if bem--contains-elem($this) {\n        @error 'Detected a multi-level nested Element (#{$this} #{$elem})! Bem doesn\\'t support nested ' + 'elements because they do not have BEM nature (www.getbem.com/faq/#css-nested-elements). ' + 'If you must do it, use a hardcoded selector like &__subsubelem ';\n    }\n\n    @if $mods != null and meta.type-of($mods) == 'list' {\n        @each $i in $mods {\n            $mx: list.append($mx, #{bem-selector($block, $e: ($elem, $i))});\n        }\n    }\n\n    @if not($nested) {\n        // Normal case, no pseudo-selector present or mod, so no nesting.\n        // .block__elem { ... }\n        @at-root {\n            @if not($mods) {\n                #{bem-selector($block, $e: ($elem, $mod))} {\n                    @content;\n                }\n            } @else {\n                #{selector.append($mx...)} {\n                    @content;\n                }\n            }\n        }\n    } @else {\n        // pseudo-element or mod present, so we have nesting.\n        // .block:active .block__elem { ... }\n        // .block--mod .block__elem { ... }\n        @at-root {\n            $selector: $first + ' ' + bem-selector($block, $e: ($elem, $mod));\n\n            @if not($mods) {\n                #{$selector} {\n                    @content;\n                }\n            } @else {\n                #{$first} #{selector.append($mx...)} {\n                    @content;\n                }\n            }\n        }\n    }\n}\n\n/// Unrolls into a BEM block-modifier selector.\n/// This mixin does not generate element-modifiers, the bem-elem mixin instead.\n/// Nesting bem-mod inside a pseudo-selector is not supported, because what\n/// that should mean isn't clear.\n/// @access public\n/// @param {String} $mod - The modifier name.\n/// @example scss\n///   @include bem-block(block) {\n///      @include bem-mod(modifier) {\n///        background: red;\n///      }\n///   }\n///   // Return\n///   .block--modifier { background: red; }\n@mixin bem-mod($mod) {\n    $skip: false;\n    $this: bem--selector-to-string(&);\n\n    @if $this == '' {\n        @error 'Detected a Modifier that is not inside a Block: ' + $mod;\n    }\n\n    @if bem--contains-elem($this) {\n        @error 'Nesting a Modifier inside an Element (#{$this} #{$mod}) ' + 'is not supported. Instead, use bem-elem(myelem, elem-mod) syntax.';\n    }\n\n    @if bem--contains-pseudo($this) {\n        @error 'Nesting a Modifier inside a pseudo-selector is not supported: #{$this} #{$mod}';\n    }\n\n    @at-root {\n        #{bem-selector($this, $m: $mod)} {\n            @content;\n        }\n    }\n}\n\n/// Unrolls into a block--modifier.[block--modifier...] .block__el\n/// This mixin is useful when we want to apply classes to a block,\n/// or block element when two or more modifiers are applied in tandem\n/// @access public\n/// @param {List} $mods - A list of modifiers\n/// @example scss\n///   @include bem-block(block) {\n///      @include bem-mods(error, warn) {\n///        position: absolute;\n///      }\n///   }\n///   // Return\n///   .block--error,\n///   .block--warn {\n///       position: absolute;\n///    }\n///\n@mixin bem-mods($mods...) {\n    $this: bem--selector-to-string(&);\n    $mod-classes: ();\n\n    @each $mod in $mods {\n        @if $this == '' {\n            @error 'Detected a Modifier that is not inside a Block: ' + $mod;\n        }\n\n        @if bem--contains-elem($this) {\n            @error 'Nesting a Modifier inside an Element (#{$this} #{$mod}) ' + 'is not supported. Instead, use bem-elem(myelem, elem-mod) syntax.';\n        }\n\n        @if bem--contains-pseudo($this) {\n            @error 'Nesting a Modifier inside a pseudo-selector is not supported: #{$this} #{$mod}';\n        }\n\n        $mod-classes: list.append(\n            $mod-classes,\n            #{bem-selector(\n                    $block: $this,\n                    $m: $mod,\n                )}\n        );\n    }\n\n    @at-root {\n        #{selector.append($mod-classes...)} {\n            @content;\n        }\n    }\n}\n\n/// @alias bem-selector\n/// @see bem-selector\n@mixin bem($block, $e: null, $elem: null, $m: null, $mod: null, $mods: null) {\n    #{bem-selector($block, $e: $e, $elem: $elem, $m: $m, $mod: $mod, $mods: $mods)} {\n        @content;\n    }\n}\n\n/// @alias bem-block\n/// @see bem-block\n@mixin block($block) {\n    @include bem-block($block) {\n        @content;\n    }\n}\n\n/// @alias bem-elem\n/// @see bem-elem\n@mixin elem($elem, $m: null, $mod: null, $mods: null) {\n    @include bem-elem($elem, $m: $m, $mod: $mod, $mods: $mods) {\n        @content;\n    }\n}\n\n/// @alias bem-mod\n/// @see bem-mod\n@mixin mod($mod) {\n    @include bem-mod($mod) {\n        @content;\n    }\n}\n\n/// @alias bem-mods\n/// @see bem-mods\n@mixin mods($mods...) {\n    @include bem-mods($mods...) {\n        @content;\n    }\n}\n\n/// @alias bem-block\n/// @see bem-block\n@mixin b($block) {\n    @include bem-block($block) {\n        @content;\n    }\n}\n\n/// @alias bem-elem\n/// @see bem-elem\n@mixin e($elem, $m: null, $mod: null, $mods: null) {\n    @include bem-elem($elem, $m: $m, $mod: $mod, $mods: $mods) {\n        @content;\n    }\n}\n\n/// @alias bem-mod\n/// @see bem-mod\n@mixin m($mod) {\n    @include bem-mod($mod) {\n        @content;\n    }\n}\n\n/// @alias bem-mods\n/// @see bem-mods\n@mixin mx($mods...) {\n    @include bem-mods($mods...) {\n        @content;\n    }\n}\n","@use 'sass:map';\n@use 'sass:math';\n@use 'sass:meta';\n@use 'sass:string';\n@use 'sass:list';\n@use '../utils/meta' as *;\n@use '../typography/functions' as *;\n\n////\n/// @package theming\n////\n\n/// A list of ignored keywords to be excluded when generating CSS variables for a theme.\n/// @access private\n$ignored-keys: ('name', 'palette', 'variant', 'selector', 'type', '_meta');\n\n/// Parses a map of key value pairs from component themes to css variables.\n/// @access private\n/// @param {Map} $theme - The component theme to be used to generate css variables.\n/// @param {String} $name - The CSS variables name\n/// @param {Map} $ignored [$ignored-keys] - A list of ignored keywords to be excluded when generating CSS variables\n/// @example scss Convert theme colors to CSS variables.\n///   $theme: digest-schema((background: color(primary, 500), foreground: contrast-color(color, 500));\n///   :root {\n///     @include css-vars-from-theme($theme);\n///   }\n/// @require {mixin} css-vars\n@mixin css-vars-from-theme($theme, $name, $ignored: $ignored-keys) {\n    $themes: map.get($theme, 'themes');\n    $prefix: map.get($theme, 'prefix');\n\n    // This is here only because the button theme consists of 4 nested themes.\n    @if $themes and meta.type-of($themes) == 'map' {\n        @each $theme in $themes {\n            @include css-vars(list.nth($theme, 2));\n        }\n    }\n\n    @each $key, $value in map.remove($theme, $ignored...) {\n        $variable: if($prefix, #{$prefix}-#{$key}, #{$key});\n\n        @if meta.type-of($value) != 'map' and $key != 'prefix' {\n            --#{$variable}: var(--#{$name}-#{$key}, #{$value});\n        }\n    }\n}\n\n/// Add theme colors as CSS variables to a given scope.\n/// @access public\n/// @group themes\n/// @param {map} $theme - The component theme to be used.\n/// @param {map} $scope [null] - The CSS variables scope to be used. (optional)\n/// @requires {mixin} css-vars-from-theme\n/// @example scss Convert grid theme colors to css variables\n///   $my-grid-theme grid-theme(\n///     $header-background: red,\n///     $content-background: #222\n///   );\n///   .my-grid {\n///     @include css-vars($my-grid-theme);\n///   }\n@mixin css-vars($theme, $scope: null) {\n    $s: map.get($theme, 'selector');\n    $n: map.get($theme, 'name');\n    $name: if($scope, $scope, $s or $n);\n\n    @if not($n) or string.length($n) == 0 {\n        @error 'Theme should have a non-null or empty name property. Example: theme: (name: my-theme)';\n    }\n\n    @if is-root() {\n        #{$name} {\n            @include css-vars-from-theme($theme, $n);\n        }\n    } @else {\n        &,\n        #{$name} {\n            @include css-vars-from-theme($theme, $n);\n        }\n    }\n}\n\n/// Adds border-radius style with a value between an upper and a lower bound.\n/// @access private\n/// @param {Number} $radius - The preferred value.\n/// @param {Number} $min [rem(0)] - The minimum value.\n/// @param {Number} $max [$radius] - The maximum allowed value.\n/// @example scss\n///    @include border-radius(4px);\n@mixin border-radius($radius, $min: #{rem(0)}, $max: $radius) {\n    $factor: math.div($radius, $max);\n\n    border-radius: clamp(#{$min}, #{calc(var(--ig-radius-factor, #{$factor}) * #{$max})}, #{$max});\n}\n\n/// Truncates text to a specific number of lines.\n/// @access public\n/// @group utilities\n/// @param {number|string} $lines - The number of lines to show\n/// @param {Boolean} $inline - Sets whether an element displays inline-box or box\n/// @param {Boolean} $vertical - Sets whether an element lays out its contents horizontally or vertically\n/// @example scss Truncates text after the fourth line\n///    @include line-clamp(4, true, true);\n@mixin line-clamp($lines, $inline, $vertical) {\n    display: if($inline, -webkit-inline-box, -webkit-box);\n    -webkit-line-clamp: if($lines, $lines, initial);\n    -webkit-box-orient: if($vertical, vertical, initial);\n    overflow: hidden;\n}\n\n/// Applies text-overflow ellipsis to e text element.\n/// This won't work on display flex elements.\n/// @group utilities\n/// @access public\n/// @example scss\n///   .my-class {\n///     @include ellipsis();\n///   }\n@mixin ellipsis() {\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    overflow: hidden;\n}\n\n/// Hides the element from the DOM.\n/// @group utilities\n/// @access public\n/// @example scss - Sample usage\n///   input[type=\"checkbox\"] {\n///     @include hide-default();\n///   }\n@mixin hide-default {\n    position: absolute;\n    width: 1px;\n    height: 1px;\n    margin: -1px;\n    border: none;\n    clip: rect(0, 0, 0, 0);\n    outline: 0;\n    pointer-events: none;\n    overflow: hidden;\n    appearance: none;\n}\n\n/// Adds the required CSS properties so that the scope can react to size changes.\n/// @group themes\n/// @access public\n/// @example scss - Sample usage\n///   .my-component {\n///     @include sizable();\n///   }\n@mixin sizable() {\n    --is-large: clamp(0, (var(--component-size, 1) + 1) - var(--ig-size-large, 3), 1);\n    --is-medium: min(\n        clamp(0, (var(--component-size, 1) + 1) - var(--ig-size-medium, 2), 1),\n        clamp(0, var(--ig-size-large, 3) - var(--component-size, 1), 1)\n    );\n    --is-small: clamp(0, var(--ig-size-medium) - var(--component-size, 1), 1);\n}\n","@use '../../base' as *;\r\n@use 'sass:string';\r\n\r\n/// @access private\r\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\r\n@mixin component {\r\n    @include b(igx-chip-area) {\r\n        @extend %igx-chip-area !optional;\r\n    }\r\n\r\n    @include b(igx-chip) {\r\n        @include sizable();\r\n\r\n        --component-size: var(--ig-size, var(--ig-size-large));\r\n\r\n        $this: bem--selector-to-string(&);\r\n        @include register-component(\r\n            $name: string.slice($this, 2, -1),\r\n            $deps: (\r\n                igx-icon,\r\n            )\r\n        );\r\n\r\n        @extend %igx-chip !optional;\r\n\r\n        @include e(item) {\r\n            @extend %igx-chip__item !optional;\r\n        }\r\n\r\n        @include e(start) {\r\n            @extend %igx-chip__start !optional;\r\n        }\r\n\r\n        @include e(end) {\r\n            @extend %igx-chip__end !optional;\r\n        }\r\n\r\n        @include e(item, $m: 'selected') {\r\n            @extend %igx-chip__item--selected !optional;\r\n        }\r\n\r\n        @include m(primary) {\r\n            @extend %igx-chip--primary !optional;\r\n\r\n            @include e(item) {\r\n                @extend %igx-chip__item--primary !optional;\r\n            }\r\n        }\r\n\r\n        @include m(info) {\r\n            @extend %igx-chip--info !optional;\r\n\r\n            @include e(item) {\r\n                @extend %igx-chip__item--info !optional;\r\n            }\r\n        }\r\n\r\n        @include m(success) {\r\n            @extend %igx-chip--success !optional;\r\n\r\n            @include e(item) {\r\n                @extend %igx-chip__item--success !optional;\r\n            }\r\n        }\r\n\r\n        @include m(warning) {\r\n            @extend %igx-chip--warning !optional;\r\n\r\n            @include e(item) {\r\n                @extend %igx-chip__item--warning !optional;\r\n            }\r\n        }\r\n\r\n        @include m(danger) {\r\n            @extend %igx-chip--danger !optional;\r\n\r\n            @include e(item) {\r\n                @extend %igx-chip__item--danger !optional;\r\n            }\r\n        }\r\n\r\n        @include e(content) {\r\n            @extend %igx-chip__content !optional;\r\n        }\r\n\r\n        @include e(select) {\r\n            @extend %igx-chip__select !optional;\r\n        }\r\n\r\n        @include e(remove) {\r\n            @extend %igx-chip__remove !optional;\r\n        }\r\n\r\n        @include e(ghost) {\r\n            @include sizable();\r\n\r\n            --component-size: var(--ig-size, var(--ig-size-large));\r\n\r\n            @extend %igx-chip__ghost !optional;\r\n        }\r\n\r\n        @include e(ghost, $m: cosy) {\r\n            --component-size: var(--ig-size, var(--ig-size-medium));\r\n\r\n            @extend %igx-chip__ghost--cosy !optional;\r\n        }\r\n\r\n        @include e(ghost, $m: compact) {\r\n            --component-size: var(--ig-size, var(--ig-size-small));\r\n\r\n            @extend %igx-chip__ghost--compact !optional;\r\n        }\r\n\r\n        @include m(cosy) {\r\n            --component-size: var(--ig-size, var(--ig-size-medium));\r\n\r\n            @include e(item) {\r\n                @extend %igx-chip__item--cosy !optional;\r\n            }\r\n        }\r\n\r\n        @include m(compact) {\r\n            --component-size: var(--ig-size, var(--ig-size-small));\r\n\r\n            @include e(item) {\r\n                @extend %igx-chip__item--compact !optional;\r\n            }\r\n        }\r\n\r\n        @include m(disabled) {\r\n            @extend %igx-chip--disabled !optional;\r\n\r\n            @include e(item) {\r\n                @extend %igx-chip__item--disabled !optional;\r\n            }\r\n        }\r\n    }\r\n}\r\n","@use '../../base' as *;\r\n@use 'sass:string';\r\n\r\n/// @access private\r\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\r\n@mixin component {\r\n    @include b(igx-icon) {\r\n        $this: bem--selector-to-string(&);\r\n        @include register-component(\r\n            $name: string.slice($this, 2, -1),\r\n            $deps: ()\r\n        );\r\n\r\n        @extend %igx-icon-display !optional;\r\n\r\n        @include m(inactive) {\r\n            @extend %igx-icon--inactive !optional;\r\n        }\r\n\r\n        @include m(success) {\r\n            @extend %igx-icon--success !optional;\r\n        }\r\n\r\n        @include m(error) {\r\n            @extend %igx-icon--error !optional;\r\n        }\r\n    }\r\n\r\n    @include b(igx-svg-container) {\r\n        visibility: hidden;\r\n        width: 0;\r\n        height: 0;\r\n        font-size: 0;\r\n        overflow: hidden;\r\n    }\r\n}\r\n","/// @access private\r\n/// Defines printing styles for all components in the library.\r\n@mixin layout {\r\n    @media print {\r\n        html,\r\n        body,\r\n        app-root {\r\n            min-height: 100vh;\r\n            min-width: 100vw;\r\n            margin: 0;\r\n        }\r\n\r\n        app-root {\r\n            display: block;\r\n        }\r\n\r\n        * {\r\n            -webkit-print-color-adjust: exact;\r\n            // Fix shadows if you print to PDF using chrome START\r\n            -webkit-filter: opacity(1);\r\n            filter: opacity(1);\r\n            // Fix shadows if you print to PDF using chrome END\r\n            print-color-adjust: exact;\r\n            text-shadow: none !important;\r\n        }\r\n\r\n        a[href^='http']::after {\r\n            content: '[' attr(href) ']';\r\n            color: blue;\r\n        }\r\n\r\n        .igx-no-print {\r\n            display: none !important;\r\n        }\r\n\r\n        // Forcing Grayscale Printing\r\n        .igx-bw-print {\r\n            // CSS3 filter, at the moment Webkit only. Prefix it for future implementations\r\n            -webkit-filter: grayscale(100%);\r\n            filter: grayscale(100%); /* future-proof */\r\n        }\r\n\r\n        igx-circular-bar,\r\n        igx-linear-bar,\r\n        .igx-carousel__indicators,\r\n        .igx-carousel__arrow--prev,\r\n        .igx-carousel__arrow--next,\r\n        .igx-ripple,\r\n        .igx-grid__tbody-scrollbar,\r\n        igx-switch__ripple,\r\n        igx-virtual-helper {\r\n            display: none !important;\r\n        }\r\n\r\n        igx-grid {\r\n            .igx-grid-th__title,\r\n            .igx-grid__td-text {\r\n                white-space: unset !important;\r\n                text-overflow: initial !important;\r\n                overflow: visible !important;\r\n            }\r\n        }\r\n    }\r\n}\r\n","////\r\n/// @group typography\r\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\r\n////\r\n\r\n@use 'sass:map';\r\n@use 'sass:list';\r\n@use 'material';\r\n@use 'bootstrap';\r\n@use 'fluent';\r\n@use 'indigo';\r\n@use 'igniteui-theming/sass/utils/meta' as *;\r\n@use 'igniteui-theming/sass/typography' as theming;\r\n@use 'igniteui-theming/sass/typography/presets' as presets;\r\n@use 'igniteui-theming/sass/typography/charts' as *;\r\n\r\n@mixin _component-typography($type-scale, $exclude) {\r\n    font-family: var(--ig-font-family);\r\n\r\n    $variant: map.get(map.get($type-scale, '_meta'), 'variant');\r\n\r\n    @if not(list.index($exclude, 'charts')) {\r\n        @include charts-typography($type-scale);\r\n    }\r\n\r\n    @if ($variant == 'material' or $variant == null) {\r\n        @include material.typography();\r\n    }\r\n\r\n    @if ($variant == 'bootstrap') {\r\n        @include bootstrap.typography($type-scale);\r\n    }\r\n\r\n    @if ($variant == 'fluent') {\r\n        @include fluent.typography();\r\n    }\r\n\r\n    @if ($variant == 'indigo') {\r\n        @include indigo.typography();\r\n    }\r\n}\r\n\r\n/// Adds typography styles for h1-h6, paragraph and creates custom typography class selectors.\r\n/// The produces styles are based on the passed typeface and type scale.\r\n/// If omitted the $material-typeface and $material-type-scale will be used.\r\n/// @access public\r\n/// @param {String} $font-family [$material-typeface] - The font family to be used across all typographic elements.\r\n/// @param {Map} $type-scale [$material-type-scale] - A type scale map as produced by type-scale.\r\n/// @param {Map} $exclude [null] - A list of typography styles to be excluded.\r\n@mixin typography(\r\n    $font-family: presets.$material-typeface,\r\n    $type-scale: presets.$material-type-scale,\r\n    $exclude: null\r\n) {\r\n    $_scope: if(is-root() or is-host(), '.ig-typography', '&');\r\n\r\n    #{$_scope} {\r\n        @include _component-typography($type-scale, $exclude);\r\n    }\r\n\r\n    @if not(list.index($exclude, 'global')) {\r\n        @include theming.typography($font-family, $type-scale);\r\n    }\r\n}\r\n","/* stylelint-disable max-line-length */\n@use 'sass:map';\n@use '../mixins' as *;\n@use '../functions' as *;\n@use '../schemas/charts' as *;\n@use '../../utils' as *;\n@use '../../typography' as *;\n\n////\n/// @package theming\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/SisIvanova\" target=\"_blank\">Silvia Ivanova</a>\n////\n\n/// @param {Map} $schema [$light-material-schema] - The schema used as basis for styling the component.\n/// @param {Map} $target ['angular'] - The target platform to be used when scoping the theme variables.\n/// @param {List} $margin [null] - Sets the margin (top, right, bottom, left) of the chart content.\n/// @param {List} $brushes [series] - Defines the palette from which automatically assigned series brushes colors are selected.\n/// @param {List} $marker-brushes [series]- Defines the palette from which automatically assigned series marker brushes colors are selected.\n/// @param {List} $negative-brushes [series] - Defines the palette used for coloring negative items in a chart type with contextual coloring, such as Waterfall.\n/// @param {List} $outlines [series] - Defines the palette from which automatically assigned series outline colors are selected.\n/// @param {List} $marker-outlines [series] - Defines the palette from which automatically assigned series marker outline colors are selected.\n/// @param {List} $negative-outlines [series] - Defines the brushes used for drawing negative elements in a chart type with contextual coloring, such as Waterfall.\n/// @param {String} $title-alignment [null] - The horizontal alignment to use for the title.\n/// @param {List} $title-margin [null] - Sets the margin (top, right, bottom, left) of the chart title.\n/// @param {Color} $title-text-color [null] - Sets the color of the chart title.\n/// @param {String} $title-text-style [null] - Sets the CSS font property of the chart title.\n/// @param {List} $subtitle-margin [null] - Sets the margins (top, right, bottom, left) of the chart subtitle.\n/// @param {String} $subtitle-alignment [null] - The horizontal alignment to use for the subtitle.\n/// @param {Color} $subtitle-text-color [null] - Sets the color of the chart subtitle.\n/// @param {String} $subtitle-text-style [null] - Sets the CSS font property of the chart subtitle.\n/// @param {Number} $thickness [null] - Sets the thickness for all series in a chart.\n/// @param {List} $trend-line-brushes [series] - Defines the palette of brushes used for coloring trend lines in a chart.\n/// @param {Number} $trend-line-thickness [null] - Sets the thickness of the trend lines in a chart of type point, line, spline or bubble.\n/// @param {List} $x-axis-label-margin [null] - Sets the margin (top, right, bottom, left) of labels on the X-axis.\n/// @param {Color} $x-axis-label-text-color [null] - Sets the color of labels on the X-axis.\n/// @param {String} $x-axis-label-text-style [null] - Sets the CSS font property for labels on X-axis.\n/// @param {String} $x-axis-label-vertical-alignment [null] - Sets the vertical alignment of X-axis labels.\n/// @param {Color} $x-axis-major-stroke [null] - Sets the color to apply to major gridlines along the X-axis.\n/// @param {Number} $x-axis-major-stroke-thickness [null] - Sets the thickness to apply to major gridlines along the X-axis.\n/// @param {Color} $x-axis-minor-stroke [null] - Sets the color to apply to minor gridlines along the X-axis.\n/// @param {Number} $x-axis-minor-stroke-thickness [null] - Sets the thickness to apply to minor gridlines along the X-axis.\n/// @param {Color} $x-axis-strip [null] - Sets the color to apply to stripes along the X-axis.\n/// @param {Color} $x-axis-stroke [null] - Sets the color to apply to the X-axis line.\n/// @param {Number} $x-axis-stroke-thickness [null] - Sets the thickness to apply to the X-axis line.\n/// @param {Number} $x-axis-tick-length [null] - Sets the length of tickmarks along the X-axis.\n/// @param {Color} $x-axis-tick-stroke [null] - Sets the color to apply to tickmarks along the X-axis.\n/// @param {Number} $x-axis-tick-stroke-thickness [null] - Sets the thickness to apply to tickmarks along the X-axis.\n/// @param {String} $x-axis-title-alignment [null] - Sets the horizontal alignment of the X-axis title.\n/// @param {List} $x-axis-title-margin [null] - Sets the margin (top, right, bottom, left) of a title on the X-axis.\n/// @param {Color} $x-axis-title-text-color [null] - Sets the color of the title on the X-axis.\n/// @param {String} $x-axis-title-text-style [null] - Sets the CSS font property for the title on the X-axis.\n/// @param {List} $y-axis-label-margin [null] - Sets the margin (top, right, bottom, left) of labels on the Y-axis.\n/// @param {Color} $y-axis-label-text-color [null] - Sets the color of labels on the Y-axis.\n/// @param {String} $y-axis-label-text-style [null] - Sets the CSS font property for labels on Y-axis.\n/// @param {String} $y-axis-label-vertical-alignment [null] - Sets the vertical alignment of Y-axis labels.\n/// @param {Color} $y-axis-major-stroke [null] - Sets the color to apply to major gridlines along the y-axis.\n/// @param {Number} $y-axis-major-stroke-thickness [null] - Sets the thickness to apply to major gridlines along the Y-axis.\n/// @param {Color} $y-axis-minor-stroke [null] - Sets the color to apply to minor gridlines along the Y-axis.\n/// @param {Number} $y-axis-minor-stroke-thickness [null] - Sets the thickness to apply to minor gridlines along the Y-axis.\n/// @param {Color} $y-axis-strip [null] - Sets the color to apply to stripes along the Y-axis.\n/// @param {Color} $y-axis-stroke [null] - Sets the color to apply to the Y-axis line.\n/// @param {Number} $y-axis-stroke-thickness [null] - Sets the thickness to apply to the Y-axis line.\n/// @param {String} $y-axis-title-alignment [null] - Sets the horizontal alignment of the Y-axis title.\n/// @param {List} $y-axis-title-margin [null] - Sets the margin (top, right, bottom, left) of a title on the Y-axis.\n/// @param {Color} $y-axis-title-text-color [null] - Sets the color of a title on the Y-axis.\n/// @param {String} $y-axis-title-text-style [null] - Sets the CSS font property for the title on the Y-axis.\n/// @param {Number} $y-axis-tick-length [null] - Sets the length of tickmarks along the Y-axis.\n/// @param {Color} $y-axis-tick-stroke [null] - Sets the color to apply to tickmarks along the Y-axis.\n/// @param {Number} $y-axis-tick-stroke-thickness [null] - Sets the thickness to apply to tickmarks along the Y-axis.\n/// @requires $light-material-schema\n/// @requires extend\n///\n/// @example scss\n///   $custom-chart-theme: category-chart-theme($brushes: (red, green, blue));\n///   // Pass the theme to the css-vars mixin\n///   @include css-vars($custom-chart-theme);\n@function category-chart-theme(\n    $schema: $light-material-schema,\n    $target: 'angular',\n\n    $margin: null,\n    $brushes: null,\n    $marker-brushes: null,\n    $negative-brushes: null,\n    $outlines: null,\n    $marker-outlines: null,\n    $negative-outlines: null,\n    $title-margin: null,\n    $title-alignment: null,\n    $title-text-color: null,\n    $title-text-style: null,\n    $subtitle-margin: null,\n    $subtitle-alignment: null,\n    $subtitle-text-color: null,\n    $subtitle-text-style: null,\n    $thickness: null,\n    $trend-line-brushes: null,\n    $trend-line-thickness: null,\n    $x-axis-label-margin: null,\n    $x-axis-label-text-color: null,\n    $x-axis-label-text-style: null,\n    $x-axis-label-vertical-alignment: null,\n    $x-axis-major-stroke: null,\n    $x-axis-major-stroke-thickness: null,\n    $x-axis-minor-stroke: null,\n    $x-axis-minor-stroke-thickness: null,\n    $x-axis-strip: null,\n    $x-axis-stroke: null,\n    $x-axis-stroke-thickness: null,\n    $x-axis-tick-length: null,\n    $x-axis-tick-stroke: null,\n    $x-axis-tick-stroke-thickness: null,\n    $x-axis-title-alignment: null,\n    $x-axis-title-margin: null,\n    $x-axis-title-text-color: null,\n    $x-axis-title-text-style: null,\n    $y-axis-label-margin: null,\n    $y-axis-label-text-color: null,\n    $y-axis-label-text-style: null,\n    $y-axis-label-vertical-alignment: null,\n    $y-axis-major-stroke: null,\n    $y-axis-major-stroke-thickness: null,\n    $y-axis-minor-stroke: null,\n    $y-axis-minor-stroke-thickness: null,\n    $y-axis-strip: null,\n    $y-axis-stroke: null,\n    $y-axis-stroke-thickness: null,\n    $y-axis-title-alignment: null,\n    $y-axis-title-margin: null,\n    $y-axis-title-text-color: null,\n    $y-axis-title-text-style: null,\n    $y-axis-tick-length: null,\n    $y-axis-tick-stroke: null,\n    $y-axis-tick-stroke-thickness: null\n) {\n    $name: 'category-chart';\n    $selector: map.get(\n        (\n            'angular': 'igx-category-chart',\n            'webc': 'igc-category-chart',\n            'blazor': 'igb-category-chart',\n        ),\n        $target\n    );\n    $chart-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $chart-schema: map.get($schema, $name);\n    } @else {\n        $chart-schema: $schema;\n    }\n\n    $theme: digest-schema($chart-schema);\n    $margin-default: map.get($theme, 'margin');\n    $title-margin-default: map.get($theme, 'title-margin');\n    $subtitle-margin-default: map.get($theme, 'subtitle-margin');\n    $x-axis-label-margin-default: map.get($theme, 'x-axis-label-margin');\n    $x-axis-title-margin-default: map.get($theme, 'x-axis-title-margin');\n    $y-axis-label-margin-default: map.get($theme, 'y-axis-label-margin');\n    $y-axis-title-margin-default: map.get($theme, 'y-axis-title-margin');\n\n    @if not($margin) {\n        $margin: $margin-default;\n    } @else {\n        $margin: expand-shorthand(($margin));\n    }\n\n    @if not($title-margin) {\n        $title-margin: $title-margin-default;\n    } @else {\n        $title-margin: map-keys-prefix(expand-shorthand(($title-margin)), 'title');\n    }\n\n    @if not($subtitle-margin) {\n        $subtitle-margin: $subtitle-margin-default;\n    } @else {\n        $subtitle-margin: map-keys-prefix(expand-shorthand(($subtitle-margin)), 'subtitle');\n    }\n\n    @if not($x-axis-label-margin) {\n        $x-axis-label-margin: $x-axis-label-margin-default;\n    } @else {\n        $x-axis-label-margin: map-keys-prefix(expand-shorthand(($x-axis-label-margin)), 'x-axis-label');\n    }\n\n    @if not($x-axis-title-margin) {\n        $x-axis-title-margin: $x-axis-title-margin-default;\n    } @else {\n        $x-axis-title-margin: map-keys-prefix(expand-shorthand(($x-axis-title-margin)), 'x-axis-title');\n    }\n\n    @if not($y-axis-label-margin) {\n        $y-axis-label-margin: $y-axis-label-margin-default;\n    } @else {\n        $y-axis-label-margin: map-keys-prefix(expand-shorthand(($y-axis-label-margin)), 'y-axis-label');\n    }\n\n    @if not($y-axis-title-margin) {\n        $y-axis-title-margin: $y-axis-title-margin-default;\n    } @else {\n        $y-axis-title-margin: map-keys-prefix(expand-shorthand(($y-axis-title-margin)), 'y-axis-title');\n    }\n\n    @return extend(\n        $theme,\n        $margin,\n        $title-margin,\n        $subtitle-margin,\n        $x-axis-label-margin,\n        $x-axis-title-margin,\n        $y-axis-label-margin,\n        $y-axis-title-margin,\n        (\n            name: $name,\n            selector: $selector,\n            brushes: $brushes,\n            marker-brushes: $marker-brushes,\n            negative-brushes: $negative-brushes,\n            outlines: $outlines,\n            marker-outlines: $marker-outlines,\n            negative-outlines: $negative-outlines,\n            title-alignment: $title-alignment,\n            title-text-color: $title-text-color,\n            title-text-style: $title-text-style,\n            subtitle-alignment: $subtitle-alignment,\n            subtitle-text-color: $subtitle-text-color,\n            subtitle-text-style: $subtitle-text-style,\n            thickness: $thickness,\n            trend-line-brushes: $trend-line-brushes,\n            trend-line-thickness: $trend-line-thickness,\n            x-axis-label-text-color: $x-axis-label-text-color,\n            x-axis-label-text-style: $x-axis-label-text-style,\n            x-axis-label-vertical-alignment: $x-axis-label-vertical-alignment,\n            x-axis-major-stroke: $x-axis-major-stroke,\n            x-axis-major-stroke-thickness: $x-axis-major-stroke-thickness,\n            x-axis-minor-stroke: $x-axis-minor-stroke,\n            x-axis-minor-stroke-thickness: $x-axis-minor-stroke-thickness,\n            x-axis-strip: $x-axis-strip,\n            x-axis-stroke: $x-axis-stroke,\n            x-axis-stroke-thickness: $x-axis-stroke-thickness,\n            x-axis-tick-length: $x-axis-tick-length,\n            x-axis-tick-stroke: $x-axis-tick-stroke,\n            x-axis-tick-stroke-thickness: $x-axis-tick-stroke-thickness,\n            x-axis-title-alignment: $x-axis-title-alignment,\n            x-axis-title-text-color: $x-axis-title-text-color,\n            x-axis-title-text-style: $x-axis-title-text-style,\n            y-axis-label-text-color: $y-axis-label-text-color,\n            y-axis-label-text-style: $y-axis-label-text-style,\n            y-axis-label-vertical-alignment: $y-axis-label-vertical-alignment,\n            y-axis-major-stroke: $y-axis-major-stroke,\n            y-axis-major-stroke-thickness: $y-axis-major-stroke-thickness,\n            y-axis-minor-stroke: $y-axis-minor-stroke,\n            y-axis-minor-stroke-thickness: $y-axis-minor-stroke-thickness,\n            y-axis-strip: $y-axis-strip,\n            y-axis-stroke: $y-axis-stroke,\n            y-axis-stroke-thickness: $y-axis-stroke-thickness,\n            y-axis-title-alignment: $y-axis-title-alignment,\n            y-axis-title-text-color: $y-axis-title-text-color,\n            y-axis-title-text-style: $y-axis-title-text-style,\n            y-axis-tick-length: $y-axis-tick-length,\n            y-axis-tick-stroke: $y-axis-tick-stroke,\n            y-axis-tick-stroke-thickness: $y-axis-tick-stroke-thickness,\n        )\n    );\n}\n\n/// Adds typography styles for the category-chart component.\n/// Uses the 'h6', 'subtitle-1' and 'body-2'\n/// category from the typographic scale.\n/// @group typography\n/// @param {Map} $type-scale - A typographic scale as produced by type-scale.\n/// @param {Map} $categories [(\n/// 'title': 'h6',\n/// 'subtitle': 'subtitle-1,\n/// 'x-axis-label-text-style': 'body-2',\n/// 'y-axis-label-text-style': 'body-2',\n/// 'x-axis-title-text-style': 'body-2',\n/// 'y-axis-title-text-style': 'body-2',\n/// )] - The categories from the typographic scale used for type styles.\n/// @requires {mixin} type-style\n@mixin category-chart-typography(\n    $type-scale,\n    $categories: (\n        'title': 'h6',\n        'subtitle': 'subtitle-1',\n        'x-axis-label-text-style': 'body-2',\n        'x-axis-title-text-style': 'body-2',\n        'y-axis-label-text-style': 'body-2',\n        'y-axis-title-text-style': 'body-2'\n    ),\n    $target: 'angular'\n) {\n    $name: 'category-chart';\n    $selector: map.get(\n        (\n            'angular': 'igx-category-chart',\n            'webc': 'igc-category-chart',\n            'blazor': 'igb-category-chart',\n        ),\n        $target\n    );\n    $title: map.get($categories, 'title');\n    $subtitle: map.get($categories, 'subtitle');\n    $x-axis-label-text-style: map.get($categories, 'x-axis-label-text-style');\n    $x-axis-title-text-style: map.get($categories, 'x-axis-title-text-style');\n    $y-axis-label-text-style: map.get($categories, 'y-axis-label-text-style');\n    $y-axis-title-text-style: map.get($categories, 'y-axis-title-text-style');\n    $title-styles: type-scale-category($type-scale, $title);\n    $subtitle-styles: type-scale-category($type-scale, $subtitle);\n    $x-axis-label-styles: type-scale-category($type-scale, $x-axis-label-text-style);\n    $x-axis-title-styles: type-scale-category($type-scale, $x-axis-title-text-style);\n    $y-axis-label-styles: type-scale-category($type-scale, $y-axis-label-text-style);\n    $y-axis-title-styles: type-scale-category($type-scale, $y-axis-title-text-style);\n\n    #{$selector} {\n        @include font-var('title-text-style', $title-styles, $name);\n        @include font-var('subtitle-text-style', $subtitle-styles, $name);\n        @include font-var('x-axis-label-text-style', $x-axis-label-styles, $name);\n        @include font-var('x-axis-title-text-style', $x-axis-title-styles, $name);\n        @include font-var('y-axis-label-text-style', $y-axis-label-styles, $name);\n        @include font-var('y-axis-title-text-style', $y-axis-title-styles, $name);\n    }\n}\n","/* stylelint-disable max-line-length */\n@use 'sass:map';\n@use '../mixins' as *;\n@use '../functions' as *;\n@use '../schemas/charts' as *;\n@use '../../utils' as *;\n@use '../../typography' as *;\n\n////\n/// @package theming\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n////\n\n/// @param {Map} $schema [$light-material-schema] - The schema used as basis for styling the component.\n/// @param {Map} $target ['angular'] - The target platform to be used when scoping the theme variables.\n/// @param {List} $margin [null] - Sets the margin (top, right, bottom, left) of the chart content.\n/// @param {Color} $title-text-color [null] - Sets the color of the chart title.\n/// @param {List} $title-margin [null] - Sets the margin (top, right, bottom, left) of the chart title.\n/// @param {Color} $subtitle-text-color [null] - Sets the color of the chart subtitle.\n/// @param {List} $subtitle-margin [null] - Sets the margins (top, right, bottom, left) of the chart subtitle.\n/// @param {List} $brushes [null] - Defines the palette from which automatically assigned series colors are selected.\n/// @param {List} $marker-brushes [null] - Defines the palette from which automatically assigned marker brushes are selected.\n/// @param {List} $outlines [null] - Defines the palette from which automatically assigned series outline colors are selected.\n/// @param {List} $marker-outlines [null] - Defines the palette from which automatically assigned marker outlines are selected.\n/// @param {Color} $plot-area-background [null] - Sets the brush used as the background for the current Chart object's plot area.\n/// @param {String} $title-horizontal-alignment [null] - The horizontal alignment to use for the title. Valid options are 'left', 'center', and 'right';\n/// @param {String} $subtitle-horizontal-alignment [null] - The horizontal alignment to use for the subtitle. Valid options are 'left', 'center', and 'right';\n/// @requires $light-material-schema\n/// @requires extend\n///\n/// @example scss\n///   $my-chart-theme: data-chart-theme($brushes: (orange, blue, pink));\n///   // Pass the theme to the css-vars mixin\n///   @include css-vars($my-chart-theme);\n@function data-chart-theme(\n    $schema: $light-material-schema,\n    $target: 'angular',\n\n    $margin: null,\n    $title-text-color: null,\n    $title-margin: null,\n    $subtitle-text-color: null,\n    $subtitle-margin: null,\n    $brushes: null,\n    $outlines: null,\n    $marker-brushes: null,\n    $marker-outlines: null,\n    $plot-area-background: null,\n    $title-horizontal-alignment: null,\n    $subtitle-horizontal-alignment: null\n) {\n    $name: 'data-chart';\n    $selector: map.get(\n        (\n            'angular': 'igx-data-chart',\n            'webc': 'igc-data-chart',\n            'blazor': 'igb-data-chart',\n        ),\n        $target\n    );\n    $chart-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $chart-schema: map.get($schema, $name);\n    } @else {\n        $chart-schema: $schema;\n    }\n\n    $theme: digest-schema($chart-schema);\n    $margin-default: map.get($theme, 'margin');\n    $title-margin-default: map.get($theme, 'title-margin');\n    $subtitle-margin-default: map.get($theme, 'subtitle-margin');\n\n    @if not($margin) {\n        $margin: $margin-default;\n    } @else {\n        $margin: expand-shorthand(($margin));\n    }\n\n    @if not($title-margin) {\n        $title-margin: $title-margin-default;\n    } @else {\n        $title-margin: map-keys-prefix(expand-shorthand(($title-margin)), 'title');\n    }\n\n    @if not($subtitle-margin) {\n        $subtitle-margin: $subtitle-margin-default;\n    } @else {\n        $subtitle-margin: map-keys-prefix(expand-shorthand(($subtitle-margin)), 'subtitle');\n    }\n\n    @return extend(\n        $theme,\n        $margin,\n        $title-margin,\n        $subtitle-margin,\n        (\n            name: $name,\n            selector: $selector,\n            title-text-color: $title-text-color,\n            subtitle-text-color: null,\n            brushes: $brushes,\n            outlines: $outlines,\n            marker-brushes: $marker-brushes,\n            marker-outlines: $marker-outlines,\n            plot-area-background: $plot-area-background,\n            title-horizontal-alignment: $title-horizontal-alignment,\n            subtitle-horizontal-alignment: $subtitle-horizontal-alignment,\n        )\n    );\n}\n\n/// Adds typography styles for the data-chart component.\n/// Uses the 'h6' and 'subtitle-1'\n/// category from the typographic scale.\n/// @group typography\n/// @param {Map} $type-scale - A typographic scale as produced by type-scale.\n/// @param {Map} $categories [(title: 'h6', subtitle: 'subtitle-1')] - The categories from the typographic scale used for type styles.\n/// @requires {mixin} type-style\n@mixin data-chart-typography($type-scale, $categories: (title: 'h6', subtitle: 'subtitle-1'), $target: 'angular') {\n    $name: 'data-chart';\n    $title: map.get($categories, 'title');\n    $subtitle: map.get($categories, 'subtitle');\n    $title-styles: type-scale-category($type-scale, $title);\n    $subtitle-styles: type-scale-category($type-scale, $subtitle);\n    $selector: map.get(\n        (\n            'angular': 'igx-data-chart',\n            'webc': 'igc-data-chart',\n            'blazor': 'igb-data-chart',\n        ),\n        $target\n    );\n\n    #{$selector} {\n        @include font-var('title-text-style', $title-styles, $name);\n        @include font-var('subtitle-text-style', $subtitle-styles, $name);\n    }\n}\n","/* stylelint-disable max-line-length */\n@use 'sass:map';\n@use '../mixins' as *;\n@use '../functions' as *;\n@use '../schemas/charts' as *;\n@use '../../utils' as *;\n@use '../../typography' as *;\n\n////\n/// @package theming\n/// @group themes\n/// @access private\n/// @author <a href=\"https://github.com/didimmova\" target=\"_blank\">Dilyana Dimova</a>\n////\n\n/// @param {Map} $schema [$light-material-schema] - The schema used as basis for styling the component.\n/// @param {Map} $target ['angular'] - The target platform to be used when scoping the theme variables.\n/// @param {List} $margin [null] - Sets the margin (top, right, bottom, left) of the chart content.\n/// @param {String} $title-alignment [null] - The horizontal alignment to use for the title.\n/// @param {Color} $title-text-color [null] - Sets the color of the chart title.\n/// @param {List} $title-margin [null] - Sets the margin (top, right, bottom, left) of the chart title.\n/// @param {Color} $subtitle-text-color [null] - Sets the color of the chart subtitle.\n/// @param {List} $subtitle-margin [null] - Sets the margins (top, right, bottom, left) of the chart subtitle.\n/// @param {String} $subtitle-alignment [null] - Gets or sets horizontal alignment which determines the subtitle position, relative to the left and right edges of the control.\n/// @param {List} $brushes [null] - Defines the palette from which automatically assigned series brushes colors are selected.\n/// @param {List} $marker-brushes [null]- Defines the palette from which automatically assigned series marker brushes colors are selected.\n/// @param {List} $negative-brushes [null] - Defines the palette used for coloring negative items in a chart type with contextual coloring, such as Waterfall.\n/// @param {List} $outlines [null] - Defines the palette from which automatically assigned series outline colors are selected.\n/// @param {List} $marker-outlines [null] - Defines the palette from which automatically assigned series marker outline colors are selected.\n/// @param {List} $negative-outlines [null] - Defines the brushes used for drawing negative elements in a chart type with contextual coloring, such as Waterfall.\n/// @param {List} $indicator-brushes [null] - Defines the brushes used for financial indicators.\n/// @param {List} $indicator-negative-brushes [null] - Defines the brushes used for negative elements in financial indicators.\n/// @param {Number} $indicator-thickness [null]- Defines the palette from which automatically assigned series marker brushes colors are selected.\n/// @param {Color} $plot-area-background [null]- Gets or sets the brush used as the background for the current Chart object's plot area.\n/// @param {Number} $thickness [null] - Sets the thickness for all series in a chart.\n/// @param {Number} $toolbar-height [null] - Sets the height of the tooolbar.\n/// @param {List} $trend-line-brushes [null] - Defines the palette of brushes used for coloring trend lines in a chart.\n/// @param {Number} $trend-line-thickness [null] - Sets the thickness of the trend lines in a chart of type point, line, spline or bubble.\n/// @param {List} $volume-brushes [null]- Defines the brushes to use for filling volume series in the volume pane.\n/// @param {List} $volume-outlines [null] - Defines the brushes to use for outlining volume series in the volume pane.\n/// @param {Number} $volume-thickness [null]- Defines the outline thickness of volume series in the volume pane.\n/// @param {List} $x-axis-label-margin [null] - Sets the margin (top, right, bottom, left) of labels on the X-axis.\n/// @param {Color} $x-axis-label-text-color [null] - Sets the color of labels on the X-axis.\n/// @param {String} $x-axis-label-vertical-alignment [null] - Sets the vertical alignment of X-axis labels.\n/// @param {Color} $x-axis-major-stroke [null] - Sets the color to apply to major gridlines along the X-axis.\n/// @param {Number} $x-axis-major-stroke-thickness [null] - Sets the thickness to apply to major gridlines along the X-axis.\n/// @param {Color} $x-axis-minor-stroke [null] - Sets the color to apply to minor gridlines along the X-axis.\n/// @param {Number} $x-axis-minor-stroke-thickness [null] - Sets the thickness to apply to minor gridlines along the X-axis.\n/// @param {Color} $x-axis-strip [null] - Sets the color to apply to stripes along the X-axis.\n/// @param {Color} $x-axis-stroke [null] - Sets the color to apply to the X-axis line.\n/// @param {Number} $x-axis-stroke-thickness [null] - Sets the thickness to apply to the X-axis line.\n/// @param {Number} $x-axis-tick-length [null] - Sets the length of tickmarks along the X-axis.\n/// @param {Color} $x-axis-tick-stroke [null] - Sets the color to apply to tickmarks along the X-axis.\n/// @param {Number} $x-axis-tick-stroke-thickness [null] - Sets the thickness to apply to tickmarks along the X-axis.\n/// @param {String} $x-axis-title-alignment [null] - Sets the horizontal alignment of the X-axis title.\n/// @param {List} $x-axis-title-margin [null] - Sets the margin (top, right, bottom, left) of a title on the X-axis.\n/// @param {Color} $x-axis-title-text-color [null] - Sets the color of the title on the X-axis.\n/// @param {List} $y-axis-label-margin [null] - Sets the margin (top, right, bottom, left) of labels on the Y-axis.\n/// @param {Color} $y-axis-label-text-color [null] - Sets the color of labels on the Y-axis.\n/// @param {String} $y-axis-label-vertical-alignment [null] - Sets the vertical alignment of Y-axis labels.\n/// @param {Color} $y-axis-major-stroke [null] - Sets the color to apply to major gridlines along the y-axis.\n/// @param {Number} $y-axis-major-stroke-thickness [null] - Sets the thickness to apply to major gridlines along the Y-axis.\n/// @param {Color} $y-axis-minor-stroke [null] - Sets the color to apply to minor gridlines along the Y-axis.\n/// @param {Number} $y-axis-minor-stroke-thickness [null] - Sets the thickness to apply to minor gridlines along the Y-axis.\n/// @param {Color} $y-axis-strip [null] - Sets the color to apply to stripes along the Y-axis.\n/// @param {Color} $y-axis-stroke [null] - Sets the color to apply to the Y-axis line.\n/// @param {Number} $y-axis-stroke-thickness [null] - Sets the thickness to apply to the Y-axis line.\n/// @param {String} $y-axis-title-alignment [null] - Sets the horizontal alignment of the Y-axis title.\n/// @param {List} $y-axis-title-margin [null] - Sets the margin (top, right, bottom, left) of a title on the Y-axis.\n/// @param {Color} $y-axis-title-text-color [null] - Sets the color of a title on the Y-axis.\n/// @param {Number} $y-axis-tick-length [null] - Sets the length of tickmarks along the Y-axis.\n/// @param {Color} $y-axis-tick-stroke [null] - Sets the color to apply to tickmarks along the Y-axis.\n/// @param {Number} $y-axis-tick-stroke-thickness [null] - Sets the thickness to apply to tickmarks along the Y-axis.\n/// @param {String} $zoom-slider-x-axis-major-stroke [null] - Gets or sets stroke brush of major gridlines on x-axis of the zoom slider pane.\n/// @param {Number} $zoom-slider-x-axis-major-stroke-thickness [null] - Gets or sets thickness of major gridlines on x-axis of the zoom slider pane.\n/// @requires $light-material-schema\n/// @requires extend\n///\n/// @example scss\n///   $my-chart-theme: financial-chart-theme($title-alignment: left, $brushes: red, blue, yellow, pink);\n///   // Pass the theme to the css-vars mixin\n///   @include css-vars($my-chart-theme);\n@function financial-chart-theme(\n    $schema: $light-material-schema,\n    $target: 'angular',\n\n    $margin: null,\n    $title-alignment: null,\n    $title-text-color: null,\n    $title-margin: null,\n    $subtitle-text-color: null,\n    $subtitle-margin: null,\n    $subtitle-alignment: null,\n    $brushes: null,\n    $outlines: null,\n    $marker-brushes: null,\n    $marker-outlines: null,\n    $plot-area-background: null,\n    $indicator-brushes: null,\n    $indicator-negative-brushes: null,\n    $indicator-thickness: null,\n    $negative-brushes: null,\n    $negative-outlines: null,\n    $overlay-brushes: null,\n    $overlay-outlines: null,\n    $overlay-thickness: null,\n    $thickness: null,\n    $toolbar-height: null,\n    $trend-line-brushes: null,\n    $trend-line-thickness: null,\n    $volume-brushes: null,\n    $volume-outlines: null,\n    $volume-thickness: null,\n    $x-axis-label-margin: null,\n    $x-axis-label-text-color: null,\n    $x-axis-label-vertical-alignment: null,\n    $x-axis-major-stroke: null,\n    $x-axis-major-stroke-thickness: null,\n    $x-axis-minor-stroke: null,\n    $x-axis-minor-stroke-thickness: null,\n    $x-axis-strip: null,\n    $x-axis-stroke: null,\n    $x-axis-stroke-thickness: null,\n    $x-axis-title-alignment: null,\n    $x-axis-title-margin: null,\n    $x-axis-title-text-color: null,\n    $y-axis-label-margin: null,\n    $y-axis-label-text-color: null,\n    $y-axis-label-vertical-alignment: null,\n    $y-axis-major-stroke: null,\n    $y-axis-major-stroke-thickness: null,\n    $y-axis-minor-stroke: null,\n    $y-axis-minor-stroke-thickness: null,\n    $y-axis-strip: null,\n    $y-axis-stroke: null,\n    $y-axis-stroke-thickness: null,\n    $y-axis-title-alignment: null,\n    $y-axis-title-margin: null,\n    $y-axis-title-text-color: null,\n    $zoom-slider-x-axis-major-stroke: null,\n    $zoom-slider-x-axis-major-stroke-thickness: null\n) {\n    $name: 'financial-chart';\n    $selector: map.get(\n        (\n            'angular': 'igx-financial-chart',\n            'webc': 'igc-financial-chart',\n            'blazor': 'igb-financial-chart',\n        ),\n        $target\n    );\n    $chart-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $chart-schema: map.get($schema, $name);\n    } @else {\n        $chart-schema: $schema;\n    }\n\n    $theme: digest-schema($chart-schema);\n    $title-margin-default: map.get($theme, 'title-margin');\n    $subtitle-margin-default: map.get($theme, 'subtitle-margin');\n    $x-axis-label-margin-default: map.get($theme, 'x-axis-label-margin');\n    $x-axis-title-margin-default: map.get($theme, 'x-axis-title-margin');\n    $y-axis-label-margin-default: map.get($theme, 'y-axis-label-margin');\n    $y-axis-title-margin-default: map.get($theme, 'x-axis-title-margin');\n\n    @if not($title-margin) {\n        $title-margin: $title-margin-default;\n    } @else {\n        $title-margin: map-keys-prefix(expand-shorthand(($title-margin)), 'title');\n    }\n\n    @if not($subtitle-margin) {\n        $subtitle-margin: $subtitle-margin-default;\n    } @else {\n        $subtitle-margin: map-keys-prefix(expand-shorthand(($subtitle-margin)), 'subtitle');\n    }\n\n    @if not($x-axis-label-margin) {\n        $x-axis-label-margin: $x-axis-label-margin-default;\n    } @else {\n        $x-axis-label-margin: map-keys-prefix(expand-shorthand(($x-axis-label-margin)), 'x-axis-label');\n    }\n\n    @if not($x-axis-title-margin) {\n        $x-axis-title-margin: $x-axis-title-margin-default;\n    } @else {\n        $x-axis-title-margin: map-keys-prefix(expand-shorthand(($x-axis-title-margin)), 'x-axis-title');\n    }\n\n    @if not($y-axis-label-margin) {\n        $y-axis-label-margin: $y-axis-label-margin-default;\n    } @else {\n        $y-axis-label-margin: map-keys-prefix(expand-shorthand(($y-axis-label-margin)), 'y-axis-label');\n    }\n\n    @if not($y-axis-title-margin) {\n        $y-axis-title-margin: $y-axis-title-margin-default;\n    } @else {\n        $y-axis-title-margin: map-keys-prefix(expand-shorthand(($y-axis-title-margin)), 'y-axis-title');\n    }\n\n    @return extend(\n        $theme,\n        $margin,\n        $title-margin,\n        $subtitle-margin,\n        $x-axis-label-margin,\n        $x-axis-title-margin,\n        $y-axis-label-margin,\n        $y-axis-title-margin,\n        (\n            name: $name,\n            selector: $selector,\n            margin: $margin,\n            title-alignment: $title-alignment,\n            title-text-color: $title-text-color,\n            title-margin: $title-margin,\n            subtitle-text-color: $subtitle-text-color,\n            subtitle-margin: $subtitle-margin,\n            subtitle-alignment: $subtitle-alignment,\n            brushes: $brushes,\n            outlines: $outlines,\n            marker-brushes: $marker-brushes,\n            marker-outlines: $marker-outlines,\n            plot-area-background: $plot-area-background,\n            indicator-brushes: $indicator-brushes,\n            indicator-negative-brushes: $indicator-negative-brushes,\n            indicator-thickness: $indicator-thickness,\n            negative-brushes: $negative-brushes,\n            negative-outlines: $negative-outlines,\n            overlay-brushes: $overlay-brushes,\n            overlay-outlines: $overlay-outlines,\n            overlay-thickness: $overlay-thickness,\n            thickness: $thickness,\n            toolbar-height: $toolbar-height,\n            trend-line-brushes: $trend-line-brushes,\n            trend-line-thickness: $trend-line-thickness,\n            volume-brushes: $volume-brushes,\n            volume-outlines: $volume-outlines,\n            volume-thickness: $volume-thickness,\n            x-axis-label-margin: $x-axis-label-margin,\n            x-axis-label-text-color: $x-axis-label-text-color,\n            x-axis-label-vertical-alignment: $x-axis-label-vertical-alignment,\n            x-axis-major-stroke: $x-axis-major-stroke,\n            x-axis-major-stroke-thickness: $x-axis-major-stroke-thickness,\n            x-axis-minor-stroke: $x-axis-minor-stroke,\n            x-axis-minor-stroke-thickness: $x-axis-minor-stroke-thickness,\n            x-axis-strip: $x-axis-strip,\n            x-axis-stroke: $x-axis-stroke,\n            x-axis-stroke-thickness: $x-axis-stroke-thickness,\n            x-axis-title-alignment: $x-axis-title-alignment,\n            x-axis-title-margin: $x-axis-title-margin,\n            x-axis-title-text-color: $x-axis-title-text-color,\n            y-axis-label-margin: $y-axis-label-margin,\n            y-axis-label-text-color: $y-axis-label-text-color,\n            y-axis-label-vertical-alignment: $y-axis-label-vertical-alignment,\n            y-axis-major-stroke: $y-axis-major-stroke,\n            y-axis-major-stroke-thickness: $y-axis-major-stroke-thickness,\n            y-axis-minor-stroke: $y-axis-minor-stroke,\n            y-axis-minor-stroke-thickness: $y-axis-minor-stroke-thickness,\n            y-axis-strip: $y-axis-strip,\n            y-axis-stroke: $y-axis-stroke,\n            y-axis-stroke-thickness: $y-axis-stroke-thickness,\n            y-axis-title-alignment: $y-axis-title-alignment,\n            y-axis-title-margin: $y-axis-title-margin,\n            y-axis-title-text-color: $y-axis-title-text-color,\n            zoom-slider-x-axis-major-stroke: $zoom-slider-x-axis-major-stroke,\n            zoom-slider-x-axis-major-stroke-thicknes: $zoom-slider-x-axis-major-stroke-thickness,\n        )\n    );\n}\n\n/// Adds typography styles for the financial-chart component.\n/// Uses the 'h6', 'subtitle-1' and 'body-2'\n/// category from the typographic scale.\n/// @group typography\n/// @param {Map} $type-scale - A typographic scale as produced by type-scale.\n/// @param {Map} $categories [(\n/// 'title': 'h6',\n/// 'subtitle': 'subtitle-1,\n/// 'x-axis-label-text-style': 'body-2',\n/// 'y-axis-label-text-style': 'body-2',\n/// 'x-axis-title-text-style': 'body-2',\n/// 'y-axis-title-text-style': 'body-2',\n/// )] - The categories from the typographic scale used for type styles.\n/// @requires {mixin} type-style\n@mixin financial-chart-typography(\n    $type-scale,\n    $categories: (\n        'title': 'h6',\n        'subtitle': 'subtitle-1',\n        'x-axis-label-text-style': 'body-2',\n        'x-axis-title-text-style': 'body-2',\n        'y-axis-label-text-style': 'body-2',\n        'y-axis-title-text-style': 'body-2'\n    ),\n    $target: 'angular'\n) {\n    $name: 'financial-chart';\n    $selector: map.get(\n        (\n            'angular': 'igx-financial-chart',\n            'webc': 'igc-financial-chart',\n            'blazor': 'igb-financial-chart',\n        ),\n        $target\n    );\n    $title: map.get($categories, 'title');\n    $subtitle: map.get($categories, 'subtitle');\n    $x-axis-label-text-style: map.get($categories, 'x-axis-label-text-style');\n    $x-axis-title-text-style: map.get($categories, 'x-axis-title-text-style');\n    $y-axis-label-text-style: map.get($categories, 'y-axis-label-text-style');\n    $y-axis-title-text-style: map.get($categories, 'y-axis-title-text-style');\n    $title-styles: type-scale-category($type-scale, $title);\n    $subtitle-styles: type-scale-category($type-scale, $subtitle);\n    $x-axis-label-styles: type-scale-category($type-scale, $x-axis-label-text-style);\n    $x-axis-title-styles: type-scale-category($type-scale, $x-axis-title-text-style);\n    $y-axis-label-styles: type-scale-category($type-scale, $y-axis-label-text-style);\n    $y-axis-title-styles: type-scale-category($type-scale, $y-axis-title-text-style);\n\n    #{$selector} {\n        @include font-var('title-text-style', $title-styles, $name);\n        @include font-var('subtitle-text-style', $subtitle-styles, $name);\n        @include font-var('x-axis-label-text-style', $x-axis-label-styles, $name);\n        @include font-var('x-axis-title-text-style', $x-axis-title-styles, $name);\n        @include font-var('y-axis-label-text-style', $y-axis-label-styles, $name);\n        @include font-var('y-axis-title-text-style', $y-axis-title-styles, $name);\n    }\n}\n","/* stylelint-disable max-line-length */\n@use 'sass:map';\n@use '../mixins' as *;\n@use '../functions' as *;\n@use '../schemas/charts' as *;\n@use '../../utils' as *;\n@use '../../typography' as *;\n\n////\n/// @package theming\n/// @group themes\n/// @access private\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// @param {Map} $schema [$light-material-schema] - The schema used as basis for styling the component.\n/// @param {Map} $target ['angular'] - The target platform to be used when scoping the theme variables.\n///\n/// @param {List} $brushes [null] - Defines the palette from which automatically assigned series colors are nelected.\n/// @param {List} $outlines [null] - Defines the palette from which automatically assigned series outline colors are selected.\n/// @param {String} $outer-label-alignment [null] - Sets which side of the chart the outer labels should appear.\n/// @param {Color} $outer-label-text-color [null] - Sets the Color used for the outer labels.\n/// @param {Color} $outer-label-visibility [null] - Sets whether the outer labels are visible.\n/// @param {Number} $outline-thickness [null] - Sets the thickness of outline around slices.\n/// @param {Color} $text-color - [null] Sets the Color used for the inner labels.\n///\n/// @requires $light-material-schema\n/// @requires extend\n///\n/// @example scss\n///   $my-chart-theme: funnel-chart-theme($brushes: (orange, blue, pink));\n///   // Pass the theme to the css-vars mixin\n///   @include css-vars($my-chart-theme);\n@function funnel-chart-theme(\n    $schema: $light-material-schema,\n    $target: 'angular',\n\n    $brushes: null,\n    $outlines: null,\n    $outer-label-alignment: null,\n    $outer-label-text-color: null,\n    $outer-label-visibility: null,\n    $outline-thickness: null,\n    $text-color: null\n) {\n    $name: 'funnel-chart';\n    $selector: map.get(\n        (\n            'angular': 'igx-funnel-chart',\n            'webc': 'igc-funnel-chart',\n            'blazor': 'igb-funnel-chart',\n        ),\n        $target\n    );\n    $chart-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $chart-schema: map.get($schema, $name);\n    } @else {\n        $chart-schema: $schema;\n    }\n\n    $theme: digest-schema($chart-schema);\n\n    @return extend(\n        $theme,\n        (\n            name: $name,\n            selector: $selector,\n            brushes: $brushes,\n            outlines: $outlines,\n            outer-label-alignment: $outer-label-alignment,\n            outer-label-text-color: $outer-label-text-color,\n            outer-label-visibility: $outer-label-visibility,\n            outline-thickness: $outline-thickness,\n            text-color: $text-color,\n        )\n    );\n}\n\n@mixin funnel-chart-typography(\n    $type-scale,\n    $categories: (outer-label-text-style: 'h1', text-style: 'subtitle-1'),\n    $target: 'angular'\n) {\n    $name: 'funnel-chart';\n    $selector: map.get(\n        (\n            'angular': 'igx-funnel-chart',\n            'webc': 'igc-funnel-chart',\n            'blazor': 'igb-funnel-chart',\n        ),\n        $target\n    );\n    $outer-label-text-style: map.get($categories, 'outer-label-text-style');\n    $text-style: map.get($categories, 'text-style');\n    $outer-label: type-scale-category($type-scale, $outer-label-text-style);\n    $text: type-scale-category($type-scale, $text-style);\n\n    #{$selector} {\n        @include font-var('outer-label-text-style', $outer-label, $name);\n        @include font-var('text-style', $text, $name);\n    }\n}\n","/* stylelint-disable max-line-length */\n@use 'sass:map';\n@use '../mixins' as *;\n@use '../functions' as *;\n@use '../schemas/charts' as *;\n@use '../../utils' as *;\n@use '../../typography' as *;\n\n////\n/// @package theming\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/SisIvanova\" target=\"_blank\">Silvia Ivanova</a>\n////\n\n/// @param {Map} $schema [$light-material-schema] - The schema used as basis for styling the component.\n/// @param {Map} $target ['angular'] - The target platform to be used when scoping the theme variables.\n///\n/// @param {Color} $backing-brush [null] - Sets the color to use to fill the backing of the linear gauge.\n/// @param {Color} $backing-outline [null] - Sets the color to use for the outline of the backing.\n/// @param {Number} $backing-stroke-thickness [null] - Sets the stroke thickness of the backing outline.\n/// @param {Color} $font-brush [null] - Sets the color to use for the label font.\n/// @param {Number} $minor-tick-stroke-thickness [null] - Sets the stroke thickness to use when rendering minor ticks.\n/// @param {Number} $needle-breadth [null] - Sets the needle breadth.\n/// @param {Color} $needle-brush [null] - Sets the color to use for the needle element.\n/// @param {Number} $needle-inner-base-width [null] - Sets the width of the needle's inner base.\n/// @param {Number} $needle-inner-point-width [null] - Sets the width of the needle's inner point.\n/// @param {Number} $needle-outer-base-width [null] - Sets the width of the needle's outer base.\n/// @param {Number} $needle-outer-point-width [null] - Sets the width of the needle's outer point.\n/// @param {Color} $needle-outline [null] - Sets the color to use for the outline of needle element.\n/// @param {Number} $needle-stroke-thickness [null] - Sets the stroke thickness to use when rendering single actual value element.\n/// @param {List} $range-brushes [null] - Sets a collection of colors to be used as the palette for linear gauge ranges.\n/// @param {List} $range-outlines [null] - Sets a collection of colors to be used as the palette for linear gauge outlines.\n/// @param {Color} $scale-brush [null] - Sets the color to use to fill the scale of the linear gauge.\n/// @param {Color} $scale-outline [null] - Sets the color to use for the outline of the scale.\n/// @param {Number} $scale-stroke-thickness [null] - Sets the stroke thickness of the scale outline.\n/// @param {Color} $tick-brush [null] - Sets the color to use for the major tickmarks.\n/// @param {Number} $tick-stroke-thickness [null] - Sets the stroke thickness to use when rendering ticks.\n/// @requires $light-material-schema\n/// @requires extend\n///\n/// @example scss\n///   $custom-gauge-theme: linear-gauge-theme($brushes: (red, green, blue));\n///   // Pass the theme to the css-vars mixin\n///   @include css-vars($custom-gauge-theme);\n@function linear-gauge-theme($schema: $light-material-schema, $target: 'angular', $rest...) {\n    $name: 'linear-gauge';\n    $selector: map.get(\n        (\n            'angular': 'igx-linear-gauge',\n            'webc': 'igc-linear-gauge',\n            'blazor': 'igb-linear-gauge',\n        ),\n        $target\n    );\n    $chart-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $chart-schema: map.get($schema, $name);\n    } @else {\n        $chart-schema: $schema;\n    }\n\n    $theme: digest-schema($chart-schema);\n\n    @return extend(\n        $theme,\n        keywords($rest),\n        (\n            name: $name,\n            selector: $selector,\n        )\n    );\n}\n\n/// @param {Map} $schema [$light-material-schema] - The schema used as basis for styling the component.\n/// @param {Map} $target ['angular'] - The target platform to be used when scoping the theme variables.\n/// @param {Map} $width [null] - The width of the gauge in pixels, string (px) or percentage (%).\n/// @param {Map} $height [null] - The height of the gauge in pixels, string (px) or percentage (%).\n/// @param {Color} $backing-brush [null] - Sets the color to use to fill the backing of the linear gauge.\n/// @param {Color} $backing-outline [null] - Sets the color to use for the outline of the backing.\n/// @param {Number} $backing-stroke-thickness [null] - Sets the stroke thickness of the backing outline.\n/// @param {Color} $font-brush [null] - Sets the color to use for the label font.\n/// @param {Number} $minor-tick-stroke-thickness [null] - Sets the stroke thickness to use when rendering minor ticks.\n/// @param {Color} $needle-brush [null] - Sets the color to use for the needle element.\n/// @param {Color} $needle-outline [null] - Sets the color to use for the outline of needle element.\n/// @param {Number} $needle-stroke-thickness [null] - Sets the stroke thickness to use when rendering single actual value element.\n/// @param {List} $range-brushes [null] - Sets a collection of colors to be used as the palette for linear gauge ranges.\n/// @param {List} $range-outlines [null] - Sets a collection of colors to be used as the palette for linear gauge outlines.\n/// @param {Color} $scale-brush [null] - Sets the color to use to fill the scale of the linear gauge.\n/// @param {Color} $tick-brush [null] - Sets the color to use for the major tickmarks.\n/// @param {Number} $tick-stroke-thickness [null] - Sets the stroke thickness to use when rendering ticks.\n/// @param {Color} $needle-pivot-brush [null] - Sets the color of the needle pivot point.\n/// @param {Color} $needle-pivot-outline [null] - Sets the outline color of the needle pivot point.\n/// @requires $light-material-schema\n/// @requires extend\n///\n/// @example scss\n///   $custom-gauge-theme: radial-gauge-theme($brushes: (red, green, blue));\n///   // Pass the theme to the css-vars mixin\n///   @include css-vars($custom-gauge-theme);\n@function radial-gauge-theme($schema: $light-material-schema, $target: 'angular', $rest...) {\n    $name: 'radial-gauge';\n    $selector: map.get(\n        (\n            'angular': 'igx-radial-gauge',\n            'webc': 'igc-radial-gauge',\n            'blazor': 'igb-radial-gauge',\n        ),\n        $target\n    );\n    $chart-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $chart-schema: map.get($schema, $name);\n    } @else {\n        $chart-schema: $schema;\n    }\n\n    $theme: digest-schema($chart-schema);\n\n    @return extend(\n        $theme,\n        keywords($rest),\n        (\n            name: $name,\n            selector: $selector,\n        )\n    );\n}\n\n/// Adds typography styles for the linear-gauge component.\n/// @access private\n/// @group typography\n/// @requires {mixin} type-style\n@mixin gauge-typography($target: 'angular') {\n    $linear-selector: map.get(\n        (\n            'angular': 'igx-linear-gauge',\n            'webc': 'igc-linear-gauge',\n            'blazor': 'igb-linear-gauge',\n        ),\n        $target\n    );\n    $radial-selector: map.get(\n        (\n            'angular': 'igx-radial-gauge',\n            'webc': 'igc-radial-gauge',\n            'blazor': 'igb-radial-gauge',\n        ),\n        $target\n    );\n\n    #{$linear-selector} {\n        --linear-gauge-font: var(--ig-font-family, inherit);\n    }\n\n    #{$radial-selector} {\n        --radial-gauge-font: var(--ig-font-family, inherit);\n    }\n}\n","/* stylelint-disable max-line-length */\n@use 'sass:map';\n@use '../mixins' as *;\n@use '../functions' as *;\n@use '../schemas/charts' as *;\n@use '../../utils' as *;\n@use '../../typography' as *;\n\n////\n/// @package theming\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n////\n\n/// @param {Map} $schema [$light-material-schema] - The schema used as basis for styling the component.\n/// @param {Map} $target ['angular'] - The target platform to be used when scoping the theme variables.\n/// @param {Color} $backing-brush [null] - Sets the brush to use to fill the backing of the bullet graph.\n/// @param {Color} $backing-outline [null] - Sets the brush to use for the outline of the backing.\n/// @param {Number} $backing-stroke-thickness [null] - Sets the stroke thickness of the backing outline.\n/// @param {Color} $font-brush [null] - Sets the brush to use for the label font.\n/// @param {Color} $minor-tick-brush [null] - Sets the brush to use for the minor tickmarks.\n/// @param {Number} $minor-tick-thickness [null] - Stroke thickness to use when rendering minor ticks.\n/// @param {List} $range-brushes [null] - Sets a collection of brushes to be used as the palette for bullet graph ranges.\n/// @param {List} $range-outlines [null] - Sets a collection of brushes to be used as the palette for bullet graph outlines.\n/// @param {Color} $scale-background-brush [null] - Sets the background brush for the scale.\n/// @param {Color} $scale-background-outline [null] - Sets the background outline for the scale.\n/// @param {Number} $scale-background-thickness [null] - Sets the background outline thickness for the scale.\n/// @param {Number} $target-value-breadth [null] - Sets the breadth of the target value element.\n/// @param {Color} $target-value-brush [null] - Sets the brush to use when rendering the fill of the comparative marker.\n/// @param {Color} $target-value-outline [null] - Sets the brush to use when rendering the outline of the target value.\n/// @param {Number} $target-value-thickness [null] - Sets the stroke thickness of the outline of the target value bar.\n/// @param {Color} $tick-brush [null] - Sets the brush to use for the major tickmarks.\n/// @param {Number} $tick-stroke-thickness [null] - Sets the stroke thickness to use when rendering ticks.\n/// @param {Color} $value-brush [null] - Sets the brush to use for the actual value element.\n/// @param {Color} $value-outline [null] - Sets the brush to use for the outline of actual value element.\n/// @param {Number} $value-stroke-thickness [null] - Sets the stroke thickness to use when rendering single actual value element.\n/// @requires $light-material-schema\n/// @requires extend\n///\n/// @example scss\n///   $my-chart-theme: bullet-graph-theme($brushes: (orange, blue, pink));\n///   // Pass the theme to the css-vars mixin\n///   @include css-vars($my-chart-theme);\n@function bullet-graph-theme(\n    $schema: $light-material-schema,\n    $target: 'angular',\n\n    $backing-brush: null,\n    $backing-outline: null,\n    $backing-stroke-thickness: null,\n    $font-brush: null,\n    $minor-tick-brush: null,\n    $minor-tick-thickness: null,\n    $range-brushes: null,\n    $range-outlines: null,\n    $scale-background-brush: null,\n    $scale-background-outline: null,\n    $scale-background-thickness: null,\n    $target-value-breadth: null,\n    $target-value-brush: null,\n    $target-value-outline: null,\n    $target-value-thickness: null,\n    $tick-brush: null,\n    $tick-stroke-thickness: null,\n    $value-brush: null,\n    $value-outline: null,\n    $value-stroke-thickness: null\n) {\n    $name: 'bullet-graph';\n    $selector: map.get(\n        (\n            'angular': 'igx-bullet-graph',\n            'webc': 'igc-bullet-graph',\n            'blazor': 'igb-bullet-graph',\n        ),\n        $target\n    );\n    $chart-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $chart-schema: map.get($schema, $name);\n    } @else {\n        $chart-schema: $schema;\n    }\n\n    $theme: digest-schema($chart-schema);\n\n    @return extend(\n        $theme,\n        (\n            name: $name,\n            selector: $selector,\n            backing-brush: $backing-brush,\n            backing-outline: $backing-outline,\n            backing-stroke-thickness: $backing-stroke-thickness,\n            font-brush: $font-brush,\n            minor-tick-brush: $minor-tick-brush,\n            minor-tick-thickness: $minor-tick-thickness,\n            range-brushes: $range-brushes,\n            range-outlines: $range-outlines,\n            scale-background-brush: $scale-background-brush,\n            scale-background-outline: $scale-background-outline,\n            scale-background-thickness: $scale-background-thickness,\n            target-value-breadth: $target-value-breadth,\n            target-value-brush: $target-value-brush,\n            target-value-outline: $target-value-outline,\n            target-value-thickness: $target-value-thickness,\n            tick-brush: $tick-brush,\n            tick-stroke-thickness: $tick-stroke-thickness,\n            value-brush: $value-brush,\n            value-outline: $value-outline,\n            value-stroke-thickness: $value-stroke-thickness,\n        )\n    );\n}\n\n/// Adds typography styles for the graph component.\n/// @access private\n/// @group typography\n/// @requires {mixin} type-style\n@mixin graph-typography($target: 'angular') {\n    $selector: map.get(\n        (\n            'angular': 'igx-bullet-graph',\n            'webc': 'igc-bullet-graph',\n            'blazor': 'igb-bullet-graph',\n        ),\n        $target\n    );\n\n    #{$selector} {\n        --bullet-graph-font: var(--ig-font-family, inherit);\n    }\n}\n","/* stylelint-disable max-line-length */\n@use 'sass:map';\n@use '../mixins' as *;\n@use '../functions' as *;\n@use '../schemas/charts' as *;\n@use '../../utils' as *;\n@use '../../typography' as *;\n\n////\n/// @package theming\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n////\n\n/// @param {Map} $schema [$light-material-schema] - The schema used as basis for styling the component.\n/// @param {Map} $target ['angular'] - The target platform to be used when scoping the theme variables.\n/// @param {List} $brushes [series] - Defines the palette from which automatically assigned series colors are selected.\n/// @param {List} $outlines [series] - Defines the palette from which automatically assigned series outline colors are selected.\n/// @param {Number} $label-extent [null] - Sets the pixel amount by which the labels are offset from the edge of the slices.\n/// @param {Color} $label-inner-color [null] - Sets the color for labels rendered inside of the pie chart.\n/// @param {Color} $label-outer-color [null] - Sets the color for labels rendered outside of the pie chart.\n/// @param {String} $labels-position [null] - Sets the position of chart labels. Valid values are: 'none', 'center', 'insideEnd', 'outsideEnd', and 'bestFit'.\n/// @param {Number} $leader-line-margin [null] - Sets the margin between a label and the end of its leader line.\n/// @param {String} $leader-line-type [null] - Sets what type of leader lines will be used for the outside end labels. Valid values are: 'straight', 'spline', and 'arc'.\n/// @param {String} $leader-line-visibility [null] - Sets whether the leader lines are visible. Valid values are: 'visible' and 'collapsed'.\n/// @param {Number} $radius-factor [null] - Sets the scaling factor of the chart's radius. Value between 0 and 1.\n/// @requires $light-material-schema\n/// @requires extend\n///\n/// @example scss\n///   $my-chart-theme: pie-chart-theme($brushes: (red, orange, blue));\n///   // Pass the theme to the css-vars mixin\n///   @include css-vars($my-chart-theme);\n@function pie-chart-theme(\n    $schema: $light-material-schema,\n    $target: 'angular',\n\n    $brushes: null,\n    $outlines: null,\n    $label-extent: null,\n    $label-inner-color: null,\n    $label-outer-color: null,\n    $labels-position: null,\n    $leader-line-margin: null,\n    $leader-line-type: null,\n    $leader-line-visibility: null,\n    $radius-factor: null\n) {\n    $name: 'pie-chart';\n    $selector: map.get(\n        (\n            'angular': 'igx-pie-chart',\n            'webc': 'igc-pie-chart',\n            'blazor': 'igb-pie-chart',\n        ),\n        $target\n    );\n    $chart-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $chart-schema: map.get($schema, $name);\n    } @else {\n        $chart-schema: $schema;\n    }\n\n    $theme: digest-schema($chart-schema);\n\n    @return extend(\n        $theme,\n        (\n            name: $name,\n            selector: $selector,\n            brushes: $brushes,\n            outlines: $outlines,\n            label-extent: $label-extent,\n            label-inner-color: $label-inner-color,\n            label-outer-color: $label-outer-color,\n            labels-position: $labels-position,\n            leader-line-margin: $leader-line-margin,\n            leader-line-type: $leader-line-type,\n            leader-line-visibility: $leader-line-visibility,\n            radius-factor: $radius-factor,\n        )\n    );\n}\n\n/// Adds typography styles for the pie-chart component.\n/// Uses the 'body-2'\n/// category from the typographic scale.\n/// @group typography\n/// @param {Map} $type-scale - A typographic scale as produced by type-scale.\n/// @param {Map} $categories [(text: 'body-2')] - The categories from the typographic scale used for type styles.\n/// @requires {mixin} type-style\n@mixin pie-chart-typography($type-scale, $categories: (text: 'body-2'), $target: 'angular') {\n    $name: 'pie-chart';\n    $selector: map.get(\n        (\n            'angular': 'igx-pie-chart',\n            'webc': 'igc-pie-chart',\n            'blazor': 'igb-pie-chart',\n        ),\n        $target\n    );\n    $text: map.get($categories, 'text');\n    $text-styles: type-scale-category($type-scale, $text);\n\n    #{$selector} {\n        @include font-var('text-style', $text-styles, $name);\n    }\n}\n","/* stylelint-disable max-line-length */\n@use 'sass:map';\n@use '../mixins' as *;\n@use '../functions' as *;\n@use '../schemas/charts' as *;\n@use '../../utils' as *;\n@use '../../typography' as *;\n\n////\n/// @package theming\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n////\n\n/// @param {Map} $schema [$light-material-schema] - The schema used as basis for styling the component.\n/// @param {Map} $target ['angular'] - The target platform to be used when scoping the theme variables.\n/// @param {List} $margin [null] - Sets the margin (top, right, bottom, left) of the chart content.\n/// @param {Color} $title-alignment [null] - Sets horizontal alignment which determines the title position, relative to the left and right edges of the control.\n/// @param {Color} $title-text-color [null] - Sets the color of the chart title.\n/// @param {List} $title-margin [null] - Sets the margin (top, right, bottom, left) of the chart title.\n/// @param {String} $subtitle-alignment [null] - Sets horizontal alignment which determines the subtitle position, relative to the left and right edges of the control.\n/// @param {Color} $subtitle-text-color [null] - Sets the color of the chart subtitle.\n/// @param {List} $subtitle-margin [null] - Sets the margins (top, right, bottom, left) of the chart subtitle.\n/// @param {List} $brushes [null] - Defines the palette from which automatically assigned series colors are selected.\n/// @param {List} $marker-brushes [null] - Sets the palette of brushes used for rendering fill area of data point markers.\n/// @param {List} $outlines [null] - Sets the palette of brushes to use for outlines on the chart series.\n/// @param {List} $marker-outlines [null] - Sets the palette of brushes used for rendering outlines of data point markers.\n/// @param {Number} $thickness [null] - Sets the thickness for all series in this chart.\n/// @param {List} $trend-line-brushes [null] - Sets the palette of brushes to used for coloring trend lines in this chart.\n/// @param {Number} $trend-line-thickness [null] - Sets the thickness of the trend lines in this chart. This property applies only to these chart types: point, line, spline, and bubble.\n/// @param {List} $x-axis-label-margin [null] - Sets the margin of labels on the X-axis.\n/// @param {Color} $x-axis-label-text-color [null] - Sets color of labels on the X-axis.\n/// @param {String} $x-axis-label-vertical-alignment [null] - Sets Vertical alignment of X-axis labels.\n/// @param {Color} $x-axis-major-stroke [null] - Sets the color to apply to major gridlines along the X-axis.\n/// @param {Number} $x-axis-major-stroke-thickness [null] - Sets the thickness to apply to major gridlines along the X-axis.\n/// @param {Color} $x-axis-minor-stroke [null] - Sets the color to apply to minor gridlines along the X-axis.\n/// @param {Number} $x-axis-minor-stroke-thickness [null] - Sets the thickness to apply to minor gridlines along the X-axis.\n/// @param {Color} $x-axis-strip [null] - Sets the color to apply to stripes along the X-axis.\n/// @param {Color} $x-axis-stroke [null] - Sets the color to apply to the X-axis line.\n/// @param {Number} $x-axis-stroke-thickness [null] - Sets the thickness to apply to the X-axis line.\n/// @param {String} $x-axis-title-alignment [null] - Sets Horizontal alignment of the X-axis title.\n/// @param {Color} $x-axis-title-color [null] - Sets color of title on the X-axis.\n/// @param {List} $x-axis-title-margin [null] - Sets the margin around the title on the X-axis.\n/// @param {List} $y-axis-label-margin [null] - Sets the margin of labels on the Y-axis.\n/// @param {Color} $y-axis-label-text-color [null] - Sets color of labels on the Y-axis.\n/// @param {String} $y-axis-label-vertical-alignment [null] - Sets Vertical alignment of Y-axis labels.\n/// @param {Color} $y-axis-major-stroke [null] - Sets the color to apply to major gridlines along the Y-axis.\n/// @param {Number} $y-axis-major-stroke-thickness [null] - Sets the thickness to apply to major gridlines along the Y-axis.\n/// @param {Color} $y-axis-minor-stroke [null] - Sets the color to apply to minor gridlines along the Y-axis.\n/// @param {Number} $y-axis-minor-stroke-thickness [null] - Sets the thickness to apply to minor gridlines along the Y-axis.\n/// @param {Color} $y-axis-strip [null] - Sets the color to apply to stripes along the Y-axis.\n/// @param {Color} $y-axis-stroke [null] - Sets the color to apply to the Y-axis line.\n/// @param {Number} $y-axis-stroke-thickness [null] - Sets the thickness to apply to the Y-axis line.\n/// @param {String} $y-axis-title-alignment [null] - Sets Horizontal alignment of the Y-axis title.\n/// @param {Color} $y-axis-title-color [null] - Sets color of title on the Y-axis.\n/// @param {List} $y-axis-title-margin [null] - Sets the margin around the title on the Y-axis.\n/// @requires $light-material-schema\n/// @requires extend\n///\n/// @example scss\n///   $my-chart-theme: shape-chart-theme($brushes: (orange, blue, pink));\n///   // Pass the theme to the css-vars mixin\n///   @include css-vars($my-chart-theme);\n@function shape-chart-theme(\n    $schema: $light-material-schema,\n    $target: 'angular',\n\n    $margin: null,\n    $title-text-color: null,\n    $title-margin: null,\n    $subtitle-text-color: null,\n    $subtitle-margin: null,\n    $brushes: null,\n    $outlines: null,\n    $marker-brushes: null,\n    $marker-outlines: null,\n    $thickness: null,\n    $trend-line-brushes: null,\n    $trend-line-thickness: null,\n    $x-axis-label-margin: null,\n    $x-axis-label-text-color: null,\n    $x-axis-label-vertical-alignment: null,\n    $x-axis-major-stroke: null,\n    $x-axis-major-stroke-thickness: null,\n    $x-axis-minor-stroke: null,\n    $x-axis-minor-stroke-thickness: null,\n    $x-axis-strip: null,\n    $x-axis-stroke: null,\n    $x-axis-stroke-thickness: null,\n    $x-axis-title-alignment: null,\n    $x-axis-title-color: null,\n    $x-axis-title-margin: null,\n    $y-axis-label-margin: null,\n    $y-axis-label-text-color: null,\n    $y-axis-label-vertical-alignment: null,\n    $y-axis-major-stroke: null,\n    $y-axis-major-stroke-thickness: null,\n    $y-axis-minor-stroke: null,\n    $y-axis-minor-stroke-thickness: null,\n    $y-axis-strip: null,\n    $y-axis-stroke: null,\n    $y-axis-stroke-thickness: null,\n    $y-axis-title-alignment: null,\n    $y-axis-title-color: null,\n    $y-axis-title-margin: null\n) {\n    $name: 'shape-chart';\n    $selector: map.get(\n        (\n            'angular': 'igx-shape-chart',\n            'webc': 'igc-shape-chart',\n            'blazor': 'igb-shape-chart',\n        ),\n        $target\n    );\n    $chart-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $chart-schema: map.get($schema, $name);\n    } @else {\n        $chart-schema: $schema;\n    }\n\n    $theme: digest-schema($chart-schema);\n    $margin-default: map.get($theme, 'margin');\n    $title-margin-default: map.get($theme, 'title-margin');\n    $subtitle-margin-default: map.get($theme, 'subtitle-margin');\n    $x-axis-label-margin-default: map.get($theme, 'x-axis-label-margin');\n    $y-axis-label-margin-default: map.get($theme, 'y-axis-label-margin');\n    $x-axis-title-margin-default: map.get($theme, 'x-axis-title-margin');\n    $y-axis-title-margin-default: map.get($theme, 'y-axis-title-margin');\n\n    @if not($margin) {\n        $margin: $margin-default;\n    } @else {\n        $margin: expand-shorthand(($margin));\n    }\n\n    @if not($title-margin) {\n        $title-margin: $title-margin-default;\n    } @else {\n        $title-margin: map-keys-prefix(expand-shorthand(($title-margin)), 'title');\n    }\n\n    @if not($subtitle-margin) {\n        $subtitle-margin: $subtitle-margin-default;\n    } @else {\n        $subtitle-margin: map-keys-prefix(expand-shorthand(($subtitle-margin)), 'subtitle');\n    }\n\n    @if not($x-axis-label-margin) {\n        $x-axis-label-margin: $x-axis-label-margin-default;\n    } @else {\n        $x-axis-label-margin: map-keys-prefix(expand-shorthand(($x-axis-label-margin)), 'x-axis-label');\n    }\n\n    @if not($y-axis-label-margin) {\n        $y-axis-label-margin: $y-axis-label-margin-default;\n    } @else {\n        $y-axis-label-margin: map-keys-prefix(expand-shorthand(($y-axis-label-margin)), 'y-axis-label');\n    }\n\n    @if not($x-axis-title-margin) {\n        $x-axis-title-margin: $x-axis-title-margin-default;\n    } @else {\n        $x-axis-title-margin: map-keys-prefix(expand-shorthand(($x-axis-title-margin)), 'x-axis-title');\n    }\n\n    @if not($y-axis-title-margin) {\n        $y-axis-title-margin: $y-axis-title-margin-default;\n    } @else {\n        $y-axis-title-margin: map-keys-prefix(expand-shorthand(($y-axis-title-margin)), 'y-axis-title');\n    }\n\n    @return extend(\n        $theme,\n        $margin,\n        $title-margin,\n        $subtitle-margin,\n        $x-axis-label-margin,\n        $x-axis-title-margin,\n        $y-axis-label-margin,\n        $y-axis-title-margin,\n        (\n            name: $name,\n            selector: $selector,\n            title-text-color: $title-text-color,\n            subtitle-text-color: $subtitle-text-color,\n            brushes: $brushes,\n            outlines: $outlines,\n            thickness: $thickness,\n            trend-line-brushes: $trend-line-brushes,\n            trend-line-thickness: $trend-line-thickness,\n            x-axis-label-text-color: $x-axis-label-text-color,\n            x-axis-label-vertical-alignment: $x-axis-label-vertical-alignment,\n            x-axis-major-stroke: $x-axis-major-stroke,\n            x-axis-major-stroke-thickness: $x-axis-major-stroke-thickness,\n            x-axis-minor-stroke: $x-axis-minor-stroke,\n            x-axis-minor-stroke-thickness: $x-axis-minor-stroke-thickness,\n            x-axis-strip: $x-axis-strip,\n            x-axis-stroke: $x-axis-stroke,\n            x-axis-stroke-thickness: $x-axis-stroke-thickness,\n            x-axis-title-alignment: $x-axis-title-alignment,\n            x-axis-title-color: $x-axis-title-color,\n            y-axis-label-text-color: $y-axis-label-text-color,\n            y-axis-label-vertical-alignment: $y-axis-label-vertical-alignment,\n            y-axis-major-stroke: $y-axis-major-stroke,\n            y-axis-major-stroke-thickness: $y-axis-major-stroke-thickness,\n            y-axis-minor-stroke: $y-axis-minor-stroke,\n            y-axis-minor-stroke-thickness: $y-axis-minor-stroke-thickness,\n            y-axis-strip: $y-axis-strip,\n            y-axis-stroke: $y-axis-stroke,\n            y-axis-stroke-thickness: $y-axis-stroke-thickness,\n            y-axis-title-alignment: $y-axis-title-alignment,\n            y-axis-title-color: $y-axis-title-color,\n        )\n    );\n}\n\n/// Adds typography styles for the shape-chart component.\n/// Uses the 'h3', 'h4', 'h6', and 'subtitle-1'\n/// category from the typographic scale.\n/// @group typography\n/// @param {Map} $type-scale - A typographic scale as produced by igx-type-scale.\n/// @param {Map} $categories [(\n/// 'title': 'h6',\n/// 'subtitle': 'subtitle-1,\n/// 'x-axis-label-text-style': 'h4',\n/// 'y-axis-label-text-style': 'h4',\n/// 'x-axis-title-text-style': 'h3',\n/// 'y-axis-title-text-style': 'h3',\n/// )] - The categories from the typographic scale used for type styles.\n/// @requires {mixin} type-style\n@mixin shape-chart-typography(\n    $type-scale,\n    $categories: (\n        'title': 'h6',\n        'subtitle': 'subtitle-1',\n        'x-axis-label-text-style': 'h4',\n        'y-axis-label-text-style': 'h4',\n        'x-axis-title-text-style': 'h3',\n        'y-axis-title-text-style': 'h3'\n    ),\n    $target: 'angular'\n) {\n    $name: 'shape-chart';\n    $selector: map.get(\n        (\n            'angular': 'igx-shape-chart',\n            'webc': 'igc-shape-chart',\n            'blazor': 'igb-shape-chart',\n        ),\n        $target\n    );\n    $title: map.get($categories, 'title');\n    $subtitle: map.get($categories, 'subtitle');\n    $x-axis-title-text-style: map.get($categories, 'x-axis-title-text-style');\n    $x-axis-label-text-style: map.get($categories, 'x-axis-label-text-style');\n    $y-axis-title-text-style: map.get($categories, 'y-axis-title-text-style');\n    $y-axis-label-text-style: map.get($categories, 'y-axis-label-text-style');\n    $title-styles: type-scale-category($type-scale, $title);\n    $subtitle-styles: type-scale-category($type-scale, $subtitle);\n    $x-axis-title-styles: type-scale-category($type-scale, $x-axis-title-text-style);\n    $x-axis-label-styles: type-scale-category($type-scale, $x-axis-label-text-style);\n    $y-axis-title-styles: type-scale-category($type-scale, $y-axis-title-text-style);\n    $y-axis-label-styles: type-scale-category($type-scale, $y-axis-label-text-style);\n\n    #{$selector} {\n        @include font-var('title-text-style', $title-styles, $name);\n        @include font-var('subtitle-text-style', $subtitle-styles, $name);\n        @include font-var('x-axis-title-text-style', $x-axis-title-styles, $name);\n        @include font-var('x-axis-label-text-style', $x-axis-label-styles, $name);\n        @include font-var('y-axis-title-text-style', $y-axis-title-styles, $name);\n        @include font-var('y-axis-label-text-style', $y-axis-label-styles, $name);\n    }\n}\n","@use 'sass:map';\r\n@use '../../base' as *;\r\n@use '../../themes/schemas' as *;\r\n\r\n////\r\n/// @group themes\r\n/// @access public\r\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\r\n////\r\n\r\n/// If only background color is specified, text/icon color\r\n/// will be assigned automatically to a contrasting color.\r\n/// @param {Map} $schema [$light-material-schema] - The schema used as basis for styling the component.\r\n///\r\n/// @param {Color} $banner-background [null]- The background color used banner background.\r\n/// @param {Color} $banner-message-color [null]- The color used for banner label.\r\n/// @param {Color} $banner-border-color [null] - The border color used banner border.\r\n/// @param {Color} $banner-illustration-color [null] - The color used banner illustration.\r\n///\r\n/// @requires $light-material-schema\r\n///\r\n/// @example scss Change the background in banner\r\n///   $my-banner-theme: banner-theme($banner-background: #000);\r\n///   // Pass the theme to the css-vars() mixin\r\n///   @include css-vars($my-banner-theme);\r\n@function banner-theme(\r\n    $schema: $light-material-schema,\r\n    $banner-background: null,\r\n    $banner-message-color: null,\r\n    $banner-border-color: null,\r\n    $banner-illustration-color: null\r\n) {\r\n    $name: 'igx-banner';\r\n    $selector: 'igx-banner, .igx-banner, .igx-banner--cosy, .igx-banner--compact';\r\n    $banner-schema: ();\r\n\r\n    @if map.has-key($schema, 'banner') {\r\n        $banner-schema: map.get($schema, 'banner');\r\n    } @else {\r\n        $banner-schema: $schema;\r\n    }\r\n\r\n    $theme: digest-schema($banner-schema);\r\n    $meta: map.get($theme, '_meta');\r\n\r\n    @if not($banner-message-color) and $banner-background {\r\n        $banner-message-color: text-contrast($banner-background);\r\n    }\r\n\r\n    @return extend($theme, (\r\n        name: $name,\r\n        selector: $selector,\r\n        banner-background: $banner-background,\r\n        banner-message-color: $banner-message-color,\r\n        banner-border-color: $banner-border-color,\r\n        banner-illustration-color: $banner-illustration-color,\r\n        _meta: map.merge(if($meta, $meta, ()), (\r\n            variant: map.get($schema, '_meta', 'theme')\r\n        )),\r\n    ));\r\n}\r\n\r\n/// @param {Map} $theme - The theme used to style the component.\r\n@mixin banner($theme) {\r\n    @include css-vars($theme);\r\n    $variant: map.get($theme, '_meta', 'variant');\r\n\r\n    $padding: rem(8px);\r\n    $padding-inline-start: calc(#{$padding} * 2);\r\n\r\n    %igx-banner-host {\r\n        igx-expansion-panel-body {\r\n            padding: 0;\r\n        }\r\n    }\r\n\r\n    %igx-banner__actions,\r\n    %igx-banner__actions > igx-banner-actions,\r\n    %igx-banner__illustration,\r\n    %igx-banner__message {\r\n        display: flex;\r\n    }\r\n\r\n    %igx-banner__illustration,\r\n    %igx-banner__message {\r\n        align-items: center;\r\n    }\r\n\r\n    %igx-banner {\r\n        --component-size: var(--ig-size, var(--ig-size-large));\r\n\r\n        display: flex;\r\n        justify-content: flex-end;\r\n        flex-wrap: wrap;\r\n        gap: rem(8px);\r\n\r\n        padding-inline-start: pad-inline($padding-inline-start);\r\n        padding-inline-end: pad-inline($padding);\r\n        padding-block: pad-block($padding);\r\n        background: var-get($theme, 'banner-background');\r\n    }\r\n\r\n    %igx-banner--cosy {\r\n        --component-size: var(--ig-size, var(--ig-size-medium));\r\n    }\r\n\r\n    %igx-banner--compact {\r\n        --component-size: var(--ig-size, var(--ig-size-small));\r\n    }\r\n\r\n    %igx-banner__illustration {\r\n        justify-content: center;\r\n        width: rem(40px);\r\n        min-width: rem(40px);\r\n        height: rem(40px);\r\n        color: var-get($theme, 'banner-illustration-color');\r\n    }\r\n\r\n    %igx-banner__border-top {\r\n        border-block-start: rem(1px) solid var-get($theme, 'banner-border-color');\r\n        inset-block-start: rem(-1px);\r\n    }\r\n\r\n    %igx-banner__border-bottom {\r\n        border-block-end: rem(1px) solid var-get($theme, 'banner-border-color');\r\n        inset-block-start: 0;\r\n    }\r\n\r\n    %igx-banner__text {\r\n        color: var-get($theme, 'banner-message-color');\r\n        flex: 1 0 0%;\r\n\r\n        > * {\r\n            margin-block-start: 0 !important;\r\n        }\r\n    }\r\n\r\n\r\n    %igx-banner__message {\r\n        min-width: rem(150px);\r\n        flex: 1 0 0%;\r\n        gap: rem(16px);\r\n    }\r\n\r\n    %igx-banner__actions > igx-banner-actions {\r\n        flex-wrap: wrap;\r\n        justify-content: flex-end;\r\n        align-items: center;\r\n        align-self: flex-end;\r\n        gap: rem(8px);\r\n        min-height: rem(40px);\r\n    }\r\n}\r\n\r\n/// Adds typography styles for the igx-banner component.\r\n/// Uses the 'body-2' category from the typographic scale.\r\n/// @group typography\r\n/// @param {Map} $categories [(message: 'body-2')] - The categories from the typographic scale used for type styles.\r\n@mixin banner-typography($categories: (\r\n    message: 'body-2')\r\n) {\r\n    $message: map.get($categories, 'message');\r\n\r\n    %igx-banner__text {\r\n        @include type-style($message) {\r\n            margin-block-start: 0;\r\n            margin-block-end: 0;\r\n        }\r\n    }\r\n}\r\n","@use 'sass:map';\n@use 'sass:string';\n@use 'sass:list';\n@use '../utils/meta' as *;\n@use './types';\n@use '../themes/mixins' as *;\n\n////\n/// @package theming\n/// @group Typography\n////\n\n/// Includes all category related styles into the current style block.\n/// @param {String} $category - The type scale category.\n/// @param {String} $check [true] - Toggles category checks against ITypeScale.\n/// Set to false when using a custom type scale.\n/// @example scss Add the `h1` styles to custom CSS selector.\n///   .fancy-h1 {\n///      @include type-style('h1');\n///      color: mediumvioletred;\n///   }\n@mixin type-style($category, $check: true) {\n    $valid: if($check, list.index(types.$ITypeScale, $category), true);\n\n    @if $valid {\n        @each $key, $value in types.$ITypeStyle {\n            @if #{$key} == 'font-family' {\n                font-family: var(--ig-#{$category}-#{$key}, var(--ig-font-family));\n            } @else {\n                #{$key}: var(--ig-#{$category}-#{$key});\n            }\n        }\n        @content;\n    } @else {\n        @warn '#{$category} is not a valid type style';\n    }\n}\n\n/// Transforms a type style map into css font variables.\n/// @param {String} $name - The custom CSS variable name.\n/// @param {Map} $type-style - A type style map reference as produced by type-style.\n/// @example scss Assign the `h1` styles to custom CSS property using the CSS font shorthand syntax.\n///   $h1-style: type-scale-category($type-scale, 'h1');\n///   @include type-style-vars('h1', $h1-style);\n@mixin type-style-vars($name, $type-style) {\n    @each $key, $value in map.remove($type-style, '_meta') {\n        @if $key == 'font-family' and $value != inherit {\n            --ig-#{$name}-#{$key}: #{$value};\n        }\n\n        @if $key != 'font-family' {\n            --ig-#{$name}-#{$key}: #{$value};\n        }\n    }\n}\n\n/// Styles all native elements that match the IElementCategories map.\n/// @requires {mixin} type-style\n/// @requires $ITypeScale\n/// @requires $IElementCategories\n@mixin type-style-elements() {\n    @each $category in types.$ITypeScale {\n        // Get the native element that uses typographic styles directly\n        // as mapped in the $IElementCategories\n        $e: map.get(types.$IElementCategories, $category);\n\n        // Add native element typographic styles.\n        @if $e {\n            #{$e} {\n                @include type-style($category);\n            }\n        }\n    }\n}\n\n/// Creates CSS classes with style rules for all categories in the ITypeScale map.\n/// @requires {mixin} type-style\n/// @requires $ITypeScale\n@mixin type-style-classes() {\n    @each $category in types.$ITypeScale {\n        // Add class selector typographic styles.\n        & &__#{$category} {\n            @include type-style($category);\n        }\n    }\n}\n\n/// Transforms a type style map into a font style rule assigned to a css variable.\n/// @param {String} $name - The custom CSS variable name.\n/// @param {Map} $type-style - A type style map reference as produces by type-style.\n/// @param {String} $prefix [null] - Optional prefix.\n/// @example scss Assign the `h1` styles to custom CSS property using the CSS font shorthand syntax.\n///   $h1-style: type-scale-category($type-scale, 'h1');\n///   @include font-var('h1-font', $h1-style);\n@mixin font-var($name, $type-style, $prefix: null) {\n    $ff: var(--ig-font-family);\n    $fz: map.get($type-style, 'font-size');\n    $fw: map.get($type-style, 'font-weight');\n\n    // unused for now\n    $fs: map.get($type-style, 'font-style');\n    $lh: map.get($type-style, 'line-height');\n    $tt: map.get($type-style, 'text-transform');\n    $ls: map.get($type-style, 'letter-spacing');\n    $mt: map.get($type-style, 'margin-top');\n    $mb: map.get($type-style, 'margin-bottom');\n\n    @include css-vars-from-theme((#{$name}: #{$fw $fz $ff}), $prefix);\n}\n\n/// Adds typography styles for h1-h6, paragraph and creates custom typography class selectors.\n/// The produced styles are based on the passed typeface and type scale.\n/// @access public\n/// @param {String} $font-family - The font family to be used across all typographic elements.\n/// @param {Map} $type-scale - A type scale map as produced by the type-scale function.\n/// @requires {function} is-root\n/// @requires {mixin} type-style-vars\n/// @requires {mixin} type-style-classes\n/// @requires {mixin} type-style-elements\n/// @example scss\n///   @include typography('Roboto', $my-type-scale);\n@mixin typography($font-family, $type-scale) {\n    $root: is-root();\n    $host: is-host();\n    $scope: if($root, ':root', '&');\n\n    #{$scope} {\n        --ig-font-family: #{string.unquote($font-family)};\n\n        @each $name, $style in map.remove($type-scale, '_meta') {\n            @include type-style-vars($name, $style);\n        }\n    }\n\n    @if $root or $host {\n        .ig-typography {\n            @include type-style-elements();\n            @include type-style-classes();\n        }\n    }\n}\n","@use 'sass:map';\r\n@use 'sass:meta';\r\n@use '../../base' as *;\r\n@use '../../themes/schemas' as *;\r\n@use 'igniteui-theming/sass/animations/easings' as *;\r\n\r\n////\r\n/// @group themes\r\n/// @access public\r\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\r\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\r\n////\r\n\r\n/// If only background color is specified,\r\n/// the idle item color will be assigned automatically to a contrasting color.\r\n/// @param {Map} $schema [$light-material-schema] - The schema used as basis for styling the component.\r\n/// @param {Map} $elevations [null] - The elevations (shadows) map to be used.\r\n/// @param {Color} $background [null] - The background color used for the toast.\r\n/// @param {Color} $idle-item-color [null] - The text-color used for the idle color.\r\n/// @param {Color} $active-item-color [null] - The text-color used for the active color.\r\n/// @param {box-shadow} $shadow [null] - Sets a shadow to be used for the bar.\r\n///\r\n/// @requires $light-material-schema\r\n///\r\n/// @example scss Set a custom background color\r\n///   $my-bottom-nav-theme: bottom-nav-theme($background: black);\r\n///   // Pass the theme to the css-vars() mixin\r\n///   @include css-vars($my-bottom-nav-theme);\r\n@function bottom-nav-theme(\r\n    $schema: $light-material-schema,\r\n    $elevations: null,\r\n\r\n    $background: null,\r\n    $idle-item-color: null,\r\n    $active-item-color: null,\r\n    $shadow: null\r\n) {\r\n    $name: 'igx-bottom-nav';\r\n    $bottom-nav-schema: ();\r\n\r\n    @if map.has-key($schema, 'bottom-nav') {\r\n        $bottom-nav-schema: map.get($schema, 'bottom-nav');\r\n    } @else {\r\n        $bottom-nav-schema: $schema;\r\n    }\r\n\r\n    $theme: digest-schema($bottom-nav-schema);\r\n\r\n    @if not($idle-item-color) and $background {\r\n        @if meta.type-of($background) == 'color' {\r\n            $idle-item-color: rgba(text-contrast($background), .7);\r\n        }\r\n    }\r\n\r\n    @if not($shadow) {\r\n        $elevation: map.get($bottom-nav-schema, 'elevation');\r\n        $shadow: elevation($elevation);\r\n    }\r\n\r\n    @return extend($theme, (\r\n        name: $name,\r\n        background: $background,\r\n        idle-item-color: $idle-item-color,\r\n        active-item-color: $active-item-color,\r\n        shadow: $shadow\r\n    ));\r\n}\r\n\r\n/// @param {Map} $theme - The theme used to style the component.\r\n@mixin bottom-nav($theme) {\r\n    @include css-vars($theme);\r\n\r\n    $menu-height: rem(56px);\r\n    $item-min-width: rem(80px);\r\n    $item-max-width: rem(168px);\r\n    $item-padding: 0 rem(12px, 16px);\r\n\r\n    %igx-bottom-nav-panel {\r\n        display: block;\r\n\r\n        &:focus {\r\n            outline-style: none;\r\n        }\r\n\r\n        &:empty {\r\n            display: none;\r\n        }\r\n    }\r\n\r\n    %igx-bottom-nav-menu {\r\n        display: flex;\r\n        position: fixed;\r\n        justify-content: center;\r\n        align-items: center;\r\n        inset-inline-start: 0;\r\n        inset-inline-end: 0;\r\n        height: $menu-height;\r\n        background: var-get($theme, 'background');\r\n        overflow: hidden;\r\n        z-index: 8;\r\n    }\r\n\r\n    %igx-bottom-nav-menu--top {\r\n        inset-block-start: 0;\r\n        inset-block-end: inherit;\r\n        box-shadow: var-get($theme, 'shadow');\r\n    }\r\n\r\n    %igx-bottom-nav-menu--bottom {\r\n        inset-block-start: inherit;\r\n        inset-block-end: 0;\r\n        box-shadow: var-get($theme, 'shadow');\r\n    }\r\n\r\n    %igx-bottom-nav-menu-item {\r\n        display: flex;\r\n        position: relative;\r\n        flex-flow: column nowrap;\r\n        flex: 1;\r\n        align-items: center;\r\n        justify-content: center;\r\n        min-width: $item-min-width;\r\n        max-width: $item-max-width;\r\n        height: 100%;\r\n        color: var-get($theme, 'idle-item-color');\r\n        cursor: pointer;\r\n        user-select: none;\r\n        overflow: hidden;\r\n        padding: $item-padding;\r\n        -webkit-tap-highlight-color: transparent;\r\n        outline-style: none;\r\n    }\r\n\r\n    %igx-bottom-nav-menu-item--disabled {\r\n        opacity: .5;\r\n        cursor: default;\r\n        pointer-events: none;\r\n    }\r\n\r\n    %igx-bottom-nav-menu-item--selected {\r\n        color: var-get($theme, 'active-item-color');\r\n        transition: color .15s $in-out-quad, opacity .25s $in-out-quad;\r\n    }\r\n\r\n    %igx-tab-label {\r\n        @include ellipsis();\r\n        padding-block-start: rem(4px);\r\n        max-width: 100%;\r\n        text-align: center;\r\n        transform: translateZ(0);\r\n        transition: transform .15s $in-out-quad;\r\n        z-index: 1;\r\n    }\r\n\r\n    %igx-tab-icon {\r\n        display: flex;\r\n        position: relative;\r\n        justify-content: center;\r\n        height: rem(24px);\r\n        padding: 0 rem(8px);\r\n        transform: translateZ(0);\r\n        transition: transform .15s $in-out-quad;\r\n        z-index: 1;\r\n    }\r\n\r\n    %igx-tab-icon--selected {\r\n        transform: translateY(-2px);\r\n    }\r\n\r\n    %igx-tab-label--selected {\r\n        transform: translateY(-2px) scale(1.166667);\r\n    }\r\n}\r\n\r\n/// Adds typography styles for the igx-bottom-nav component.\r\n/// Uses the 'caption'\r\n/// category from the typographic scale.\r\n/// @group typography\r\n/// @param {Map} $categories [(label: 'caption')] - The categories from the typographic scale used for type styles.\r\n@mixin bottom-nav-typography($categories: (label: 'caption')) {\r\n    $label: map.get($categories, 'label');\r\n\r\n    %igx-tab-label {\r\n        @include type-style($label) {\r\n            margin: 0\r\n        }\r\n    }\r\n}\r\n","@use 'sass:map';\r\n@use 'sass:meta';\r\n@use 'sass:color';\r\n@use '../../base' as *;\r\n@use '../../themes/schemas' as *;\r\n\r\n////\r\n/// @group themes\r\n/// @access public\r\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\r\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\r\n////\r\n\r\n/// If only background color is specified, text/icon color\r\n/// will be assigned automatically to a contrasting color.\r\n/// Does ___not___ apply for disabled state colors.\r\n/// @param {Map} $schema [$light-material-schema] - The schema used as basis for styling the component.\r\n/// @param {Map} $elevations [$elevations] - The elevations (shadows) map to be used.\r\n/// @param {Color} $background [null] - The background color of the button.\r\n/// @param {Color} $foreground [null] - The text color of the button.\r\n/// @param {Color} $hover-background [null] - The hover background color of the button.\r\n/// @param {Color} $hover-foreground [null] - The hover text color of the button.\r\n/// @param {Color} $focus-background [null] - The focus background color of the button.\r\n/// @param {Color} $focus-foreground [null] - The focus text color of the button.\r\n/// @param {Color} $focus-visible-background [null] - The focus-visible background color of the button.\r\n/// @param {Color} $focus-visible-foreground [null] - The focus-visible text color of the button.\r\n/// @param {Color} $active-background [null] - The active background of the button.\r\n/// @param {Color} $active-foreground [null] - The active text color of the button.\r\n/// @param {List} $border-radius [null] - The border radius of the button.\r\n/// @param {Color} $border-color [null] - The border color of the button.\r\n/// @param {Color} $hover-border-color [null] - The hover border color of the button.\r\n/// @param {Color} $focus-border-color [null] - The focus border color of the button.\r\n/// @param {Color} $focus-visible-border-color [null] - The focus-visible border color of the button.\r\n/// @param {Color} $active-border-color [null] - The active border color of the button.\r\n/// @param {Color} $shadow-color [null] - The shadow color of the button.\r\n/// @param {Color} $resting-shadow [null] - The shadow of the button in its idle state.\r\n/// @param {Color} $hover-shadow [null] - The shadow of the button in its hover state.\r\n/// @param {Color} $focus-shadow [null] - The shadow of the button in its focus state.\r\n/// @param {Color} $active-shadow [null] - The shadow of the button in its focus state.\r\n/// @param {Color} $disabled-background [null] - The disabled background color of the button.\r\n/// @param {Color} $disabled-foreground [null] - The disabled text color of the button.\r\n/// @param {Color} $disabled-border-color [null] - The disabled border color of the button.\r\n///\r\n/// @requires $light-material-schema\r\n///\r\n/// @example scss Change the background and text colors in raised buttons\r\n///   $my-button-theme: button-theme(\r\n///     $foreground: white,\r\n///     $background: black\r\n///   );\r\n///   // Pass the theme to the css-vars() mixin\r\n///   @include css-vars($my-button-theme);\r\n@function button-theme(\r\n    $schema: $light-material-schema,\r\n    $elevations: null,\r\n\r\n    $background: null,\r\n    $foreground: null,\r\n\r\n    $hover-background: null,\r\n    $hover-foreground: null,\r\n\r\n    $focus-background: null,\r\n    $focus-foreground: null,\r\n\r\n    $focus-visible-background: null,\r\n    $focus-visible-foreground: null,\r\n\r\n    $active-background: null,\r\n    $active-foreground: null,\r\n\r\n    $border-radius: null,\r\n    $border-color: null,\r\n    $hover-border-color: null,\r\n    $focus-border-color: null,\r\n    $focus-visible-border-color: null,\r\n    $active-border-color: null,\r\n\r\n    $shadow-color: null,\r\n\r\n    $resting-shadow: null,\r\n    $hover-shadow: null,\r\n    $focus-shadow: null,\r\n    $active-shadow: null,\r\n\r\n    $disabled-background: null,\r\n    $disabled-foreground: null,\r\n    $disabled-border-color: null,\r\n) {\r\n    $name: 'igx-button';\r\n    $button-schema: ();\r\n\r\n    @if map.has-key($schema, 'button') {\r\n        $button-schema: map.get($schema, 'button');\r\n    } @else {\r\n        $button-schema: $schema;\r\n    }\r\n\r\n    $themes: ();\r\n    $variant: null;\r\n\r\n    @each $_name, $_schema in $button-schema {\r\n        $_resting-shadow: $resting-shadow;\r\n        $_hover-shadow: $hover-shadow;\r\n        $_focus-shadow: $focus-shadow;\r\n        $_active-shadow: $active-shadow;\r\n        $_border-radius: $border-radius;\r\n\r\n        @if not($variant) {\r\n            $variant: map.get($schema, '_meta', 'theme');\r\n        }\r\n\r\n        @if not($foreground) and $background {\r\n            $foreground: text-contrast($background);\r\n        }\r\n\r\n        @if not($hover-background) and $background {\r\n            @if meta.type-of($background) == 'color' {\r\n                $hover-background: color.scale($background, $lightness: 5%);\r\n            }\r\n        }\r\n\r\n        @if not($hover-foreground) and $hover-background {\r\n            @if meta.type-of($hover-background) == 'color' {\r\n                $hover-foreground: text-contrast($hover-background);\r\n            }\r\n        }\r\n\r\n        @if not($focus-background) and $background {\r\n            $focus-background: color.scale($background, $lightness: 5%);\r\n        }\r\n\r\n        @if not($focus-foreground) and $focus-background {\r\n            $focus-foreground: text-contrast($focus-background);\r\n        }\r\n\r\n        @if not($focus-visible-background) and $focus-background {\r\n            $focus-visible-background: $focus-background;\r\n        }\r\n\r\n        @if not($focus-visible-foreground) and $focus-foreground {\r\n            $focus-visible-foreground: $focus-foreground;\r\n        }\r\n\r\n        @if not($focus-visible-border-color) and $focus-border-color {\r\n            $focus-visible-border-color: $focus-border-color;\r\n        }\r\n\r\n        @if not($_resting-shadow) {\r\n            $resting-elevation: map.get($_schema, 'resting-elevation');\r\n            $_resting-shadow: elevation($resting-elevation);\r\n        }\r\n\r\n        @if not($_hover-shadow) {\r\n            $hover-elevation: map.get($_schema, 'hover-elevation');\r\n            $_hover-shadow: elevation($hover-elevation);\r\n        }\r\n\r\n        @if not($_focus-shadow) {\r\n            $focus-elevation: map.get($_schema, 'focus-elevation');\r\n            $_focus-shadow: elevation($focus-elevation);\r\n        }\r\n\r\n        @if not($_active-shadow) {\r\n            $active-elevation: map.get($_schema, 'active-elevation');\r\n            $_active-shadow: elevation($active-elevation);\r\n        }\r\n\r\n        @if not($_border-radius) {\r\n            $_border-radius: border-radius(map.get($_schema, 'border-radius')...);\r\n        }\r\n\r\n        $themes: map.merge($themes, (\r\n            $_name: extend( digest-schema($_schema), (\r\n                name: $name,\r\n                background: $background,\r\n                foreground: $foreground,\r\n\r\n                hover-background: $hover-background,\r\n                hover-foreground: $hover-foreground,\r\n\r\n                focus-background: $focus-background,\r\n                focus-foreground: $focus-foreground,\r\n\r\n                focus-visible-background: $focus-visible-background,\r\n                focus-visible-foreground: $focus-visible-foreground,\r\n\r\n                active-background: $active-background,\r\n                active-foreground: $active-foreground,\r\n\r\n                border-radius: $_border-radius,\r\n                border-color: $border-color,\r\n                hover-border-color: $hover-border-color,\r\n                focus-border-color: $focus-border-color,\r\n                focus-visible-border-color: $focus-visible-border-color,\r\n                active-border-color: $active-border-color,\r\n\r\n                shadow-color: $shadow-color,\r\n\r\n                resting-shadow: $_resting-shadow,\r\n                hover-shadow: $_hover-shadow,\r\n                focus-shadow: $_focus-shadow,\r\n                active-shadow: $_active-shadow,\r\n\r\n                disabled-background: $disabled-background,\r\n                disabled-foreground: $disabled-foreground,\r\n                disabled-border-color: $disabled-border-color,\r\n            ))\r\n        ));\r\n    }\r\n\r\n    @return (\r\n        name: $name,\r\n        variant: $variant,\r\n        themes: $themes,\r\n    );\r\n}\r\n\r\n/// @param {Map} $theme - The theme used to style the component.\r\n@mixin button($theme) {\r\n    $button-width: rem(88px);\r\n\r\n    $variant: map.get($theme, variant);\r\n\r\n    $flat-theme: map.get(map.get($theme, 'themes'), 'flat');\r\n    $outlined-theme: map.get(map.get($theme, 'themes'), 'outlined');\r\n    $raised-theme: map.get(map.get($theme, 'themes'), 'raised');\r\n    $fab-theme: map.get(map.get($theme, 'themes'), 'fab');\r\n    $icon-theme: map.get(map.get($theme, 'themes'), 'icon');\r\n\r\n    @include css-vars($flat-theme);\r\n    @include css-vars($outlined-theme);\r\n    @include css-vars($raised-theme);\r\n    @include css-vars($fab-theme);\r\n    @include css-vars($icon-theme);\r\n\r\n    $time: map.get((\r\n        material: .1s,\r\n        fluent: .1s,\r\n        bootstrap: .15s,\r\n        indigo-design: .15s\r\n    ), $variant);\r\n\r\n    $button-transition: color $time ease-in-out,\r\n        background-color $time ease-in-out,\r\n        border-color $time ease-in-out,\r\n        box-shadow $time ease-in-out;\r\n\r\n    $button-disabled-shadow: none;\r\n\r\n    $button-floating-width: rem(56px);\r\n    $button-floating-height: $button-floating-width;\r\n\r\n    $button-icon-width: map.get((\r\n        material: rem(36px, 16px),\r\n        fluent: rem(32px, 16px),\r\n        bootstrap: rem(36px, 16px),\r\n        indigo-design: rem(36px, 16px),\r\n    ), $variant);\r\n\r\n    $button-icon-height: $button-icon-width;\r\n\r\n    $button-padding-material-inline: (\r\n        comfortable: rem(16px, 16px),\r\n        cosy: rem(16px, 16px),\r\n        compact: rem(16px, 16px)\r\n    );\r\n\r\n    $button-padding-material-block: (\r\n        comfortable: rem(7px, 16px),\r\n        cosy: rem(4px, 16px),\r\n        compact: rem(1px, 16px)\r\n    );\r\n\r\n    $button-padding-fluent-inline: (\r\n        comfortable: rem(16px, 16px),\r\n        cosy: rem(16px, 16px),\r\n        compact: rem(16px, 16px)\r\n    );\r\n\r\n    $button-padding-fluent-block: (\r\n        comfortable: 0,\r\n        cosy: 0,\r\n        compact: 0\r\n    );\r\n\r\n    $button-padding-bootstrap-inline: (\r\n        comfortable: rem(12px, 16px),\r\n        cosy: rem(10px, 16px),\r\n        compact: rem(8px, 16px)\r\n    );\r\n\r\n    $button-padding-bootstrap-block: (\r\n        comfortable: rem(6px, 16px),\r\n        cosy: rem(4px, 16px),\r\n        compact: rem(2px, 16px)\r\n    );\r\n\r\n    $button-padding-indigo-inline: (\r\n        comfortable: rem(12px, 16px),\r\n        cosy: rem(12px, 16px),\r\n        compact: rem(8px, 16px)\r\n    );\r\n\r\n    $button-padding-indigo-block: (\r\n        comfortable: rem(3px, 16px),\r\n        cosy: rem(2px, 16px),\r\n        compact: rem(1px, 16px)\r\n    );\r\n\r\n    $outlined-button-padding-material-inline: (\r\n        comfortable: rem(14px, 16px),\r\n        cosy: rem(14px, 16px),\r\n        compact: rem(14px, 16px)\r\n    );\r\n\r\n    $outlined-button-padding-material-block: (\r\n        comfortable: rem(7px, 16px),\r\n        cosy: rem(4px, 16px),\r\n        compact: rem(1px, 16px)\r\n    );\r\n\r\n    $outlined-button-padding-indigo-inline: (\r\n        comfortable: rem(14px, 16px),\r\n        cosy: rem(10px, 16px),\r\n        compact: rem(6px, 16px)\r\n    );\r\n\r\n    $outlined-button-padding-indigo-block: (\r\n        comfortable: rem(6px, 16px),\r\n        cosy: rem(4px, 16px),\r\n        compact: rem(2px, 16px)\r\n    );\r\n\r\n    $icon-button-width-material: (\r\n        comfortable: rem(36px, 16px),\r\n        cosy: rem(30px, 16px),\r\n        compact: rem(24px, 16px),\r\n    );\r\n\r\n    $icon-button-width-fluent: (\r\n        comfortable: rem(38px, 16px),\r\n        cosy: rem(32px, 16px),\r\n        compact: rem(24px, 16px),\r\n    );\r\n\r\n    $icon-button-width-bootstrap: (\r\n        comfortable: rem(48px, 16px),\r\n        cosy: rem(38px, 16px),\r\n        compact: rem(31px, 16px),\r\n    );\r\n\r\n    $icon-button-width-indigo: (\r\n        comfortable: rem(36px, 16px),\r\n        cosy: rem(32px, 16px),\r\n        compact: rem(28px, 16px),\r\n    );\r\n\r\n    $button-padding-inline: map.get((\r\n        material: $button-padding-material-inline,\r\n        fluent: $button-padding-fluent-inline,\r\n        bootstrap: $button-padding-bootstrap-inline,\r\n        indigo-design: $button-padding-indigo-inline,\r\n    ), $variant);\r\n\r\n    $button-padding-block: map.get((\r\n        material: $button-padding-material-block,\r\n        fluent: $button-padding-fluent-block,\r\n        bootstrap: $button-padding-bootstrap-block,\r\n        indigo-design: $button-padding-indigo-block,\r\n    ), $variant);\r\n\r\n    $outlined-button-padding-inline: map.get((\r\n        material: $outlined-button-padding-material-inline,\r\n        fluent: $button-padding-fluent-inline,\r\n        bootstrap: $button-padding-bootstrap-inline,\r\n        indigo-design: $outlined-button-padding-indigo-inline\r\n    ), $variant);\r\n\r\n    $outlined-button-padding-block: map.get((\r\n        material: $outlined-button-padding-material-block,\r\n        fluent: $button-padding-fluent-block,\r\n        bootstrap: $button-padding-bootstrap-block,\r\n        indigo-design: $outlined-button-padding-indigo-block\r\n    ), $variant);\r\n\r\n    $icon-button-width: map.get((\r\n        material: $icon-button-width-material,\r\n        fluent: $icon-button-width-fluent,\r\n        bootstrap: $icon-button-width-bootstrap,\r\n        indigo-design: $icon-button-width-indigo\r\n    ), $variant);\r\n\r\n    $button--size-material: (\r\n        comfortable: rem(36px),\r\n        cosy: rem(30px),\r\n        compact: rem(24px)\r\n    );\r\n\r\n    $button--size-fluent: (\r\n        comfortable: rem(38px),\r\n        cosy: rem(32px),\r\n        compact: rem(24px)\r\n    );\r\n\r\n    $button--size-bootstrap: (\r\n        comfortable: rem(48px),\r\n        cosy: rem(38px),\r\n        compact: rem(31px)\r\n    );\r\n\r\n    $button--size-indigo: (\r\n        comfortable: rem(36px),\r\n        cosy: rem(32px),\r\n        compact: rem(28px)\r\n    );\r\n\r\n    $button-size: map.get((\r\n        material: $button--size-material,\r\n        fluent: $button--size-fluent,\r\n        bootstrap: $button--size-bootstrap,\r\n        indigo-design: $button--size-indigo,\r\n    ), $variant);\r\n\r\n    $button-floating-padding-block: (\r\n        comfortable: rem(8px),\r\n        cosy: rem(4px),\r\n        compact: 0\r\n    );\r\n\r\n    $button-floating-padding-inline: (\r\n        comfortable: rem(14px),\r\n        cosy: rem(10px),\r\n        compact: rem(6px)\r\n    );\r\n\r\n    $button-floating-size: (\r\n        comfortable: rem(48px),\r\n        cosy: rem(40px),\r\n        compact: rem(32px)\r\n    );\r\n\r\n    $button-floating-size-indigo: (\r\n        comfortable: rem(48px),\r\n        cosy: rem(42px),\r\n        compact: rem(36px)\r\n    );\r\n\r\n    $filtering-row-button-size: (\r\n        comfortable: rem(40px),\r\n        cosy: rem(30px),\r\n        compact: rem(21px)\r\n    );\r\n\r\n    $icon-in-button-margin: (\r\n        comfortable: rem(12px),\r\n        cosy: rem(8px),\r\n        compact: rem(4px)\r\n    );\r\n\r\n    $icon-sizes: map.get((\r\n        material: rem(18px),\r\n        fluent: rem(16px),\r\n        bootstrap: rem(18px),\r\n        indigo-design: rem(18px),\r\n    ), $variant);\r\n    $icon-in-button-size: $icon-sizes;\r\n\r\n    $raised-shadow: map.get((\r\n        material: var-get($raised-theme, 'resting-shadow'),\r\n        fluent: var-get($raised-theme, 'resting-shadow'),\r\n        bootstrap: none,\r\n        indigo-design: none\r\n    ), $variant);\r\n\r\n    $raised-shadow--hover: map.get((\r\n        material: var-get($raised-theme, 'hover-shadow'),\r\n        fluent: var-get($raised-theme, 'hover-shadow'),\r\n        bootstrap: none,\r\n        indigo-design: none\r\n    ), $variant);\r\n\r\n    $raised-shadow--focus: map.get((\r\n        material: var-get($raised-theme, 'focus-shadow'),\r\n        fluent: 0 0 0 rem(3px) var-get($raised-theme, 'shadow-color'),\r\n        bootstrap: 0 0 0 rem(3px) var-get($raised-theme, 'shadow-color'),\r\n        indigo-design: 0 0 0 rem(3px) var-get($raised-theme, 'shadow-color')\r\n    ), $variant);\r\n\r\n    $raised-shadow--active: map.get((\r\n        material: var-get($raised-theme, 'active-shadow'),\r\n        fluent: 0 0 0 rem(3px) var-get($raised-theme, 'shadow-color'),\r\n        bootstrap: 0 0 0 rem(3px) var-get($raised-theme, 'shadow-color'),\r\n        indigo-design: 0 0 0 rem(3px) var-get($raised-theme, 'shadow-color')\r\n    ), $variant);\r\n\r\n    $fab-shadow: map.get((\r\n        material: var-get($fab-theme, 'resting-shadow'),\r\n        fluent: var-get($fab-theme, 'resting-shadow'),\r\n        bootstrap: none,\r\n        indigo-design: none\r\n    ), $variant);\r\n\r\n    $fab-shadow--hover: map.get((\r\n        material: var-get($fab-theme, 'hover-shadow'),\r\n        fluent: var-get($fab-theme, 'hover-shadow'),\r\n        bootstrap: none,\r\n        indigo-design: none\r\n    ), $variant);\r\n\r\n    $fab-shadow--focus: map.get((\r\n        material: var-get($fab-theme, 'focus-shadow'),\r\n        fluent:  0 0 0 rem(3px) var-get($fab-theme, 'shadow-color'),\r\n        bootstrap: 0 0 0 rem(3px) var-get($fab-theme, 'shadow-color'),\r\n        indigo-design: 0 0 0 rem(3px) var-get($fab-theme, 'shadow-color')\r\n    ), $variant);\r\n\r\n    $fab-shadow--active: map.get((\r\n        material: var-get($fab-theme, 'active-shadow'),\r\n        fluent:  0 0 0 rem(3px) var-get($fab-theme, 'shadow-color'),\r\n        bootstrap: 0 0 0 rem(3px) var-get($fab-theme, 'shadow-color'),\r\n        indigo-design: 0 0 0 rem(3px) var-get($fab-theme, 'shadow-color')\r\n    ), $variant);\r\n\r\n    $icon-shadow: map.get((\r\n        material: var-get($icon-theme, 'focus-shadow'),\r\n        fluent: 0 0 0 rem(3px) var-get($icon-theme, 'shadow-color'),\r\n        bootstrap: 0 0 0 rem(3px) var-get($icon-theme, 'shadow-color'),\r\n        indigo-design: 0 0 0 rem(3px) var-get($icon-theme, 'shadow-color')\r\n    ), $variant);\r\n\r\n    %igx-button-display {\r\n        --component-size: var(--ig-size, var(--ig-size-large));\r\n        --size: #{sizable(#{map.get($button-size, 'compact')}, #{map.get($button-size, 'cosy')}, #{map.get($button-size, 'comfortable')})};\r\n\r\n        position: relative;\r\n        display: inline-flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        min-width: $button-width;\r\n        padding-inline: pad-inline(map.get($button-padding-inline, 'compact'), map.get($button-padding-inline, 'cosy'), map.get($button-padding-inline, 'comfortable'));\r\n        padding-block: pad-block(map.get($button-padding-block, 'compact'), map.get($button-padding-block, 'cosy'), map.get($button-padding-block, 'comfortable'));\r\n        min-height: var(--size);\r\n        border: rem(1px) solid var-get($flat-theme, 'border-color');\r\n        cursor: pointer;\r\n        user-select: none;\r\n        outline-style: none;\r\n        -webkit-tap-highlight-color: transparent;\r\n        overflow: hidden;\r\n        white-space: nowrap;\r\n        transition: $button-transition;\r\n\r\n        @if ($variant == 'bootstrap') {\r\n            // important is needed to override the typography margins\r\n            margin: rem(4px) !important;\r\n        }\r\n\r\n        igx-icon {\r\n            display: flex;\r\n            justify-content: center;\r\n            width: var(--igx-icon-size, #{$icon-in-button-size});\r\n            height: var(--igx-icon-size, #{$icon-in-button-size});\r\n            font-size: var(--igx-icon-size, #{$icon-in-button-size});\r\n        }\r\n\r\n        * + * {\r\n            margin-inline-start: pad-inline(map.get($icon-in-button-margin, 'compact'), map.get($icon-in-button-margin, 'cosy'), map.get($icon-in-button-margin, 'comfortable'));\r\n        }\r\n    }\r\n\r\n    %igx-button-display--cosy {\r\n        --component-size: var(--ig-size, var(--ig-size-medium));\r\n    }\r\n\r\n    %igx-button-display--compact {\r\n        --component-size: var(--ig-size, var(--ig-size-small));\r\n    }\r\n\r\n    igx-grid-filtering-row {\r\n        @if ($variant == 'bootstrap') {\r\n            --size: #{sizable(#{map.get($filtering-row-button-size, 'compact')}, #{map.get($filtering-row-button-size, 'cosy')}, #{map.get($filtering-row-button-size, 'comfortable')})};\r\n\r\n            %igx-button-display {\r\n                min-height: var(--size);\r\n                padding-block: 0;\r\n\r\n                > * {\r\n                    display: flex;\r\n                    align-items: center;\r\n                    height: rem(18px);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    %igx-button--flat {\r\n        background: var-get($flat-theme, 'background');\r\n        color: var-get($flat-theme, 'foreground');\r\n        border-radius: var-get($flat-theme, 'border-radius');\r\n\r\n        &:hover {\r\n            background: var-get($flat-theme, 'hover-background');\r\n            color: var-get($flat-theme, 'hover-foreground');\r\n            border-color: var-get($flat-theme, 'hover-border-color');\r\n        }\r\n\r\n        &:focus {\r\n            background: var-get($flat-theme, 'focus-background');\r\n            color: var-get($flat-theme, 'focus-foreground');\r\n            box-shadow: 0 0 0 rem(3px) var-get($flat-theme, 'shadow-color');\r\n            border-color: var-get($flat-theme, 'focus-border-color');\r\n        }\r\n\r\n        &:active {\r\n            background: var-get($flat-theme, 'active-background');\r\n            color: var-get($flat-theme, 'active-foreground');\r\n            box-shadow: 0 0 0 rem(3px) var-get($flat-theme, 'shadow-color');\r\n            border-color: var-get($flat-theme, 'active-border-color');\r\n        }\r\n\r\n        &:focus-visible {\r\n            background: var-get($flat-theme, 'focus-visible-background');\r\n            color: var-get($flat-theme, 'focus-visible-foreground');\r\n            border-color: var-get($flat-theme, 'focus-visible-border-color');\r\n        }\r\n\r\n        @if($variant == 'bootstrap') {\r\n            &:focus,\r\n            &:active,\r\n            &:focus-visible {\r\n                box-shadow: 0 0 0 rem(3px) var-get($outlined-theme, 'shadow-color');\r\n            }\r\n        }\r\n    }\r\n\r\n    %igx-button--outlined {\r\n        --size: #{sizable(map.get($button-size, 'compact'), map.get($button-size, 'cosy'), map.get($button-size, 'comfortable'))};\r\n        background: var-get($outlined-theme, 'background');\r\n        color: var-get($outlined-theme, 'foreground');\r\n        border-color: var-get($outlined-theme, 'border-color');\r\n        border-radius: var-get($outlined-theme, 'border-radius');\r\n        padding-block: pad-block(map.get($outlined-button-padding-block, 'compact'), map.get($outlined-button-padding-block, 'cosy'), map.get($outlined-button-padding-block, 'comfortable'));\r\n        padding-inline: pad-inline(map.get($outlined-button-padding-inline, 'compact'), map.get($outlined-button-padding-inline, 'cosy'), map.get($outlined-button-padding-inline, 'comfortable'));\r\n        min-height: var(--size);\r\n\r\n        @if $variant == 'indigo-design' {\r\n            border-width: rem(2px);\r\n        }\r\n\r\n        &:hover {\r\n            background: var-get($outlined-theme, 'hover-background');\r\n            color: var-get($outlined-theme, 'hover-foreground');\r\n            border-color: var-get($outlined-theme, 'hover-border-color');\r\n        }\r\n\r\n        &:focus {\r\n            background: var-get($outlined-theme, 'focus-background');\r\n            color: var-get($outlined-theme, 'focus-foreground');\r\n            border-color: var-get($outlined-theme, 'focus-border-color');\r\n\r\n            @if($variant == 'bootstrap') {\r\n                &:hover {\r\n                    background: var-get($outlined-theme, 'hover-background');\r\n                    color: var-get($outlined-theme, 'hover-foreground');\r\n                }\r\n                box-shadow: 0 0 0 rem(3px) var-get($outlined-theme, 'shadow-color');\r\n            } @else if($variant == 'indigo-design') {\r\n                box-shadow: 0 0 0 rem(3px) var-get($outlined-theme, 'shadow-color');\r\n            }\r\n        }\r\n\r\n        &:active {\r\n            background: var-get($outlined-theme, 'active-background');\r\n            color: var-get($outlined-theme, 'active-foreground');\r\n            border-color: var-get($outlined-theme, 'active-border-color');\r\n            box-shadow: 0 0 0 rem(3px) var-get($outlined-theme, 'shadow-color');\r\n        }\r\n\r\n        &:focus-visible {\r\n            background: var-get($outlined-theme, 'focus-visible-background');\r\n            color: var-get($outlined-theme, 'focus-visible-foreground');\r\n            border-color: var-get($outlined-theme, 'focus-visible-border-color');\r\n\r\n            &:hover {\r\n                background: var-get($outlined-theme, 'hover-background');\r\n                color: var-get($outlined-theme, 'hover-foreground');\r\n                border-color: var-get($outlined-theme, 'hover-border-color');\r\n            }\r\n\r\n            &:active {\r\n                background: var-get($outlined-theme, 'active-background');\r\n                color: var-get($outlined-theme, 'active-foreground');\r\n                border-color: var-get($outlined-theme, 'active-border-color');\r\n            }\r\n        }\r\n\r\n        @if($variant == 'fluent') {\r\n            &::after {\r\n                border-radius: inherit;\r\n            }\r\n\r\n            &:focus-visible {\r\n                &::after {\r\n                    $outline-btn-indent: rem(2px);\r\n                    content: '';\r\n                    position: absolute;\r\n                    top: $outline-btn-indent;\r\n                    inset-inline-start: $outline-btn-indent;\r\n                    pointer-events: none;\r\n                    width: calc(100% - (#{$outline-btn-indent} * 2));\r\n                    height: calc(100% - (#{$outline-btn-indent} * 2));\r\n                    box-shadow: 0 0 0 rem(1px) var-get($outlined-theme, 'focus-visible-foreground');\r\n                }\r\n\r\n                /* stylelint-disable */\r\n                &:hover {\r\n                    &::after {\r\n                        box-shadow: 0 0 0 rem(1px) var-get($outlined-theme, 'hover-foreground');\r\n                    }\r\n                }\r\n\r\n                &:active {\r\n                    &::after {\r\n                        box-shadow: 0 0 0 rem(1px) var-get($outlined-theme, 'active-foreground');\r\n                    }\r\n                }\r\n                /* stylelint-enable */\r\n            }\r\n        }\r\n\r\n        * + * {\r\n            margin-inline-start: pad-inline(map.get($icon-in-button-margin, 'compact'), map.get($icon-in-button-margin, 'cosy'), map.get($icon-in-button-margin, 'comfortable'));\r\n        }\r\n    }\r\n\r\n    %igx-button--raised {\r\n        color: var-get($raised-theme, 'foreground');\r\n        background: var-get($raised-theme, 'background');\r\n        box-shadow: $raised-shadow;\r\n        border-radius: var-get($raised-theme, 'border-radius');\r\n\r\n        &:hover {\r\n            color: var-get($raised-theme, 'hover-foreground');\r\n            background: var-get($raised-theme, 'hover-background');\r\n            border-color: var-get($raised-theme, 'hover-border-color');\r\n            box-shadow: $raised-shadow--hover;\r\n        }\r\n\r\n        &:focus {\r\n            color: var-get($raised-theme, 'focus-foreground');\r\n            background: var-get($raised-theme, 'focus-background');\r\n            border-color: var-get($raised-theme, 'focus-border-color');\r\n\r\n            @if $variant == 'material' or  $variant == 'fluent' {\r\n                box-shadow: 0 0 0 rem(3px) var-get($raised-theme, 'shadow-color'), $raised-shadow--focus;\r\n            } @else {\r\n                box-shadow: $raised-shadow--focus;\r\n            }\r\n        }\r\n\r\n        &:active {\r\n            color: var-get($raised-theme, 'active-foreground');\r\n            background: var-get($raised-theme, 'active-background');\r\n            border-color: var-get($raised-theme, 'active-border-color');\r\n\r\n            @if $variant == 'material' or  $variant == 'fluent' {\r\n                box-shadow: 0 0 0 rem(3px) var-get($raised-theme, 'shadow-color'), $raised-shadow--active;\r\n            } @else {\r\n                box-shadow: $raised-shadow--active;\r\n            }\r\n        }\r\n\r\n        &:focus-visible {\r\n            background: var-get($raised-theme, 'focus-visible-background');\r\n            color: var-get($raised-theme, 'focus-visible-foreground');\r\n            border-color: var-get($raised-theme, 'focus-visible-border-color');\r\n\r\n            &:hover {\r\n                color: var-get($raised-theme, 'hover-foreground');\r\n                background: var-get($raised-theme, 'hover-background');\r\n                border-color: var-get($raised-theme, 'hover-border-color');\r\n            }\r\n\r\n            &:active {\r\n                color: var-get($raised-theme, 'active-foreground');\r\n                background: var-get($raised-theme, 'active-background');\r\n                border-color: var-get($raised-theme, 'active-border-color');\r\n            }\r\n        }\r\n\r\n        @if($variant == 'fluent') {\r\n            &::after {\r\n                border-radius: inherit;\r\n            }\r\n\r\n            &:focus-visible {\r\n                &::after {\r\n                    $outline-btn-indent: rem(3px);\r\n                    content: '';\r\n                    position: absolute;\r\n                    top: $outline-btn-indent;\r\n                    inset-inline-start: $outline-btn-indent;\r\n                    pointer-events: none;\r\n                    width: calc(100% - (#{$outline-btn-indent} * 2));\r\n                    height: calc(100% - (#{$outline-btn-indent} * 2));\r\n                    box-shadow: 0 0 0 rem(1px) var-get($outlined-theme, 'focus-visible-foreground');\r\n                }\r\n\r\n                /* stylelint-disable */\r\n                &:hover {\r\n                    &::after {\r\n                        box-shadow: 0 0 0 rem(1px) var-get($outlined-theme, 'hover-foreground');\r\n                    }\r\n                }\r\n\r\n                &:active {\r\n                    &::after {\r\n                        box-shadow: 0 0 0 rem(1px) var-get($outlined-theme, 'active-foreground');\r\n                    }\r\n                }\r\n                /* stylelint-enable */\r\n            }\r\n        }\r\n    }\r\n\r\n    %igx-button--round {\r\n        display: inline-flex;\r\n        position: relative;\r\n        flex-direction: row;\r\n        justify-content: center;\r\n        align-items: center;\r\n        outline: none;\r\n        cursor: pointer;\r\n        transition: $button-transition;\r\n        user-select: none;\r\n        -webkit-tap-highlight-color: transparent;\r\n        overflow: hidden;\r\n        // hack to allow circular overflow in safari...\r\n        filter: blur(0);\r\n    }\r\n\r\n    %igx-button--fab {\r\n        @if $variant != 'indigo-design' {\r\n            --size: #{sizable(map.get($button-floating-size, 'compact'), map.get($button-floating-size, 'cosy'), map.get($button-floating-size, 'comfortable'))};\r\n        } @else {\r\n            --size: #{sizable(map.get($button-floating-size-indigo, 'compact'), map.get($button-floating-size-indigo, 'cosy'), map.get($button-floating-size-indigo, 'comfortable'))};\r\n        }\r\n\r\n        padding-block: pad-block(map.get($button-floating-padding-block, 'compact'), map.get($button-floating-padding-block, 'cosy'), map.get($button-floating-padding-block, 'comfortable'));\r\n        padding-inline: pad-inline(map.get($button-floating-padding-inline, 'compact'), map.get($button-floating-padding-inline, 'cosy'), map.get($button-floating-padding-inline, 'comfortable'));\r\n        min-width: var(--size);\r\n        min-height: var(--size);\r\n        line-height: unset;\r\n        white-space: nowrap;\r\n        color: var-get($fab-theme, 'foreground');\r\n        background: var-get($fab-theme, 'background');\r\n        border-color: var-get($flat-theme, 'border-color');\r\n        box-shadow: $fab-shadow;\r\n        border-radius: var-get($fab-theme, 'border-radius');\r\n\r\n        &:hover {\r\n            color: var-get($fab-theme, 'hover-foreground');\r\n            background: var-get($fab-theme, 'hover-background');\r\n            border-color: var-get($flat-theme, 'hover-border-color');\r\n            box-shadow: $fab-shadow;\r\n        }\r\n\r\n        &:focus {\r\n            color: var-get($fab-theme, 'focus-foreground');\r\n            background: var-get($fab-theme, 'focus-background');\r\n            border-color: var-get($flat-theme, 'focus-border-color');\r\n\r\n            @if $variant == 'material' or  $variant == 'fluent' {\r\n                box-shadow: 0 0 0 rem(3px) var-get($fab-theme, 'shadow-color'), $fab-shadow--focus;\r\n            } @else {\r\n                box-shadow: $raised-shadow--focus;\r\n            }\r\n        }\r\n\r\n        &:active {\r\n            color: var-get($fab-theme, 'active-foreground');\r\n            background: var-get($fab-theme, 'active-background');\r\n            border-color: var-get($flat-theme, 'active-border-color');\r\n\r\n            @if $variant == 'material' or  $variant == 'fluent' {\r\n                box-shadow: 0 0 0 rem(3px) var-get($fab-theme, 'shadow-color'), $fab-shadow--active;\r\n            } @else {\r\n                box-shadow: $raised-shadow--active;\r\n            }\r\n        }\r\n\r\n        &:focus-visible {\r\n            background: var-get($fab-theme, 'focus-visible-background');\r\n            color: var-get($fab-theme, 'focus-visible-foreground');\r\n            border-color: var-get($fab-theme, 'focus-visible-border-color');\r\n\r\n            &:hover {\r\n                color: var-get($fab-theme, 'hover-foreground');\r\n                background: var-get($fab-theme, 'hover-background');\r\n                border-color: var-get($fab-theme, 'hover-border-color');\r\n            }\r\n\r\n            &:active {\r\n                color: var-get($fab-theme, 'active-foreground');\r\n                background: var-get($fab-theme, 'active-background');\r\n                border-color: var-get($fab-theme, 'active-border-color');\r\n            }\r\n        }\r\n\r\n        @if($variant == 'fluent') {\r\n            &::after {\r\n                border-radius: inherit;\r\n            }\r\n\r\n            &:focus-visible {\r\n                &::after {\r\n                    $outline-btn-indent: rem(3px);\r\n                    content: '';\r\n                    position: absolute;\r\n                    top: $outline-btn-indent;\r\n                    inset-inline-start: $outline-btn-indent;\r\n                    pointer-events: none;\r\n                    border-radius: calc(#{var-get($fab-theme, 'border-radius')} - #{$outline-btn-indent});\r\n                    width: calc(100% - (#{$outline-btn-indent} * 2));\r\n                    height: calc(100% - (#{$outline-btn-indent} * 2));\r\n                    box-shadow: 0 0 0 rem(1px) var-get($outlined-theme, 'focus-visible-foreground');\r\n                }\r\n\r\n                /* stylelint-disable */\r\n                &:hover {\r\n                    &::after {\r\n                        box-shadow: 0 0 0 rem(1px) var-get($outlined-theme, 'hover-foreground');\r\n                    }\r\n                }\r\n\r\n                &:active {\r\n                    &::after {\r\n                        box-shadow: 0 0 0 rem(1px) var-get($outlined-theme, 'active-foreground');\r\n                    }\r\n                }\r\n                /* stylelint-enable */\r\n            }\r\n        }\r\n\r\n        * + * {\r\n            margin-inline-start: pad-inline(map.get($icon-in-button-margin, 'compact'), map.get($icon-in-button-margin, 'cosy'), map.get($icon-in-button-margin, 'comfortable'));\r\n        }\r\n    }\r\n\r\n    %igx-button--icon {\r\n        --size: #{sizable(map.get($icon-button-width, 'compact'), map.get($icon-button-width, 'cosy'), map.get($icon-button-width, 'comfortable'))};\r\n        width: var(--size);\r\n        height: var(--size);\r\n        min-width: unset;\r\n        min-height: unset;\r\n        font-size: rem(24px, 24px);\r\n        padding: 0;\r\n        color: var-get($icon-theme, 'foreground');\r\n        background: var-get($icon-theme, 'background');\r\n        border-radius: var-get($icon-theme, 'border-radius');\r\n        border-color: var-get($icon-theme, 'border-color');\r\n\r\n        @if $variant == 'indigo-design' {\r\n            border-width: rem(3px);\r\n        }\r\n\r\n        &:hover {\r\n            @if $variant != 'fluent' {\r\n                transition: $button-transition;\r\n            }\r\n\r\n            color: var-get($icon-theme, 'hover-foreground');\r\n            background: var-get($icon-theme, 'hover-background');\r\n            border-color: var-get($icon-theme, 'hover-border-color');\r\n        }\r\n\r\n        &:focus {\r\n            color: var-get($icon-theme, 'focus-foreground');\r\n            background: var-get($icon-theme, 'focus-background');\r\n            border-color: var-get($icon-theme, 'focus-border-color');\r\n\r\n            @if $variant == 'fluent' {\r\n                &:hover {\r\n                    color: var-get($icon-theme, 'hover-foreground');\r\n                    background: var-get($icon-theme, 'hover-background');\r\n                    border-color: var-get($icon-theme, 'hover-border-color');\r\n                }\r\n\r\n                &:active {\r\n                    color: var-get($icon-theme, 'active-foreground');\r\n                    background: var-get($icon-theme, 'active-background');\r\n                    border-color: var-get($icon-theme, 'active-border-color');\r\n                }\r\n            }\r\n        }\r\n\r\n        &:active {\r\n            color: var-get($icon-theme, 'active-foreground');\r\n            background: var-get($icon-theme, 'active-background');\r\n            border-color: var-get($flat-theme, 'active-border-color');\r\n        }\r\n\r\n        &:focus-visible {\r\n            color: var-get($icon-theme, 'focus-visible-foreground');\r\n            background: var-get($icon-theme, 'focus-visible-background');\r\n            border-color: var-get($icon-theme, 'focus-visible-border-color') ;\r\n\r\n            &:hover {\r\n                color: var-get($icon-theme, 'hover-foreground');\r\n                background: var-get($icon-theme, 'hover-background');\r\n                border-color: var-get($icon-theme, 'focus-visible-border-color');\r\n            }\r\n\r\n            &:active {\r\n                color: var-get($icon-theme, 'active-foreground');\r\n                background: var-get($icon-theme, 'active-background');\r\n                border-color: var-get($icon-theme, 'focus-visible-border-color');\r\n            }\r\n        }\r\n\r\n        &:focus,\r\n        &:active {\r\n            @if $variant == 'material' or  $variant == 'fluent' {\r\n                box-shadow: 0 0 0 rem(3px) var-get($icon-theme, 'shadow-color'), $icon-shadow;\r\n            } @else {\r\n                box-shadow: $icon-shadow;\r\n            }\r\n        }\r\n    }\r\n\r\n    %igx-button--disabled {\r\n        background: var-get($flat-theme, 'disabled-background');\r\n        color: var-get($flat-theme, 'disabled-foreground');\r\n        border-color: var-get($flat-theme, 'disabled-border-color');\r\n        pointer-events: none;\r\n        box-shadow: none;\r\n\r\n        &:focus {\r\n            box-shadow: none;\r\n        }\r\n    }\r\n}\r\n\r\n/// Adds typography styles for the igx-button component.\r\n/// Uses the 'button' category from the typographic scale.\r\n/// @group typography\r\n/// @param {String} $categories [(text: 'button')] - The category from the typographic scale used for type styles.\r\n@mixin button-typography($categories: (text: 'button')) {\r\n    $text: map.get($categories, 'text');\r\n\r\n    %igx-button-display {\r\n        @include type-style($text) {\r\n            text-align: center;\r\n        }\r\n    }\r\n\r\n    %igx-button--fab {\r\n        @include type-style($text) {\r\n            text-align: center;\r\n            margin: 0;\r\n        }\r\n    }\r\n}\r\n","@use 'sass:map';\r\n@use 'sass:meta';\r\n@use 'sass:math';\r\n@use '../../base' as *;\r\n@use '../../themes/schemas' as *;\r\n\r\n////\r\n/// @group themes\r\n/// @access public\r\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\r\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\r\n////\r\n\r\n/// If only header background color is specified, that color will be\r\n/// used as the leading color for all accented elements, such as:\r\n/// - current date color\r\n/// - selected date background\r\n/// - picker elements hover colors\r\n/// - year/month hover/selected colors\r\n/// If only background colors are specified, text/icon colors\r\n/// will be assigned automatically to a contrasting color.\r\n/// @param {Map} $schema [$light-material-schema] - The schema used as basis for styling the component.\r\n/// @param {Color} $content-background [null] - The main content background color.\r\n/// @param {Color} $content-text-color [null] - The main content text color.\r\n///\r\n/// @param {Color} $picker-background-color [null] - The igx-calendar-picker background color.\r\n/// @param {Color} $border-color [null] - The calendar border color.\r\n///\r\n/// @param {Color} $header-background [null] - The header background color.\r\n/// @param {Color} $header-text-color [null] - The header text color.\r\n///\r\n/// @param {Color} $picker-arrow-color [null] - The idle picker arrow color.\r\n/// @param {Color} $picker-arrow-hover-color [null] - The picker hover arrow color.\r\n///\r\n/// @param {Color} $picker-text-color [null]- The idle picker month/year color.\r\n/// @param {Color} $picker-text-hover-color [null]-  The hover picker month/year color.\r\n///\r\n/// @param {Color} $inactive-text-color [null] - The text color for previous and next month dates.\r\n/// @param {Color} $label-color [null] - The text color for weekday labels.\r\n/// @param {Color} $weekend-text-color [null] - The text color for weekend days.\r\n///\r\n/// @param {Color} $year-current-text-color [null] - The text color for the current/selected year.\r\n///\r\n/// @param {Color} $month-current-text-color [null]- The text color for the current/selected month.\r\n/// @param {Color} $month-hover-current-text-color [null]- The text color for the current/selected month on hover.\r\n/// @param {Color} $month-hover-text-color [null] - The month hover text color.\r\n/// @param {Color} $month-hover-background [null] - The month hover background color.\r\n///\r\n/// @param {Color} $year-hover-text-color [null] - The year hover text color.\r\n///\r\n/// @param {Color} $date-selected-background [null] - The background color for the selected date.\r\n/// @param {Color} $date-selected-hover-background [null] - The hover background color for the selected date.\r\n/// @param {Color} $date-selected-focus-background [null] - The focus background color for the selected date.\r\n/// @param {Color} $date-selected-text-color [null] - The text color for the selected date.\r\n/// @param {Color} $date-selected-hover-foreground [null] - The hover text color for the selected date.\r\n/// @param {Color} $date-selected-focus-foreground [null] - The focus text color for the selected date.\r\n///\r\n/// @param {Color} $date-hover-background [null] - The hover date background color.\r\n/// @param {Color} $date-focus-background [null] - The focus date background color.\r\n/// @param {Color} $date-current-text-color [null] - The text color for the current date.\r\n/// @param {Color} $date-current-bg-color [null] - The background color for the current date.\r\n/// @param {Color} $date-current-hover-background [null] - The hover background color for the current date.\r\n/// @param {Color} $date-current-focus-background [null] - The focus background color for the current date.\r\n/// @param {Color} $date-current-hover-foreground [null] - The hover text color for the current date.\r\n/// @param {Color} $date-current-focus-foreground [null] - The focus text color for the current date.\r\n/// @param {Color} $date-selected-current-background [null] - The background color for the selected/current date.\r\n/// @param {Color} $date-selected-current-hover-background [null] - The hover background color for the selected/current date.\r\n/// @param {Color} $date-selected-current-focus-background [null] - The focus background color for the selected/current date.\r\n/// @param {Color} $date-selected-current-foreground [null] - The text color for the selected/current date.\r\n/// @param {Color} $date-selected-current-hover-foreground [null] - The hover text color for the selected/current date.\r\n/// @param {Color} $date-selected-current-focus-foreground [null] - The focus text color for the selected/current date.\r\n///\r\n/// @param {Color} $date-special-background [null] - The background color used for special dates.\r\n/// @param {Color} $date-special-text-color [null] - The text color used for special dates.\r\n///\r\n/// @param {Color} $date-disabled-text-color [null] - The text color for disabled dates.\r\n/// @param {Color} $date-disabled-background [null] - The background color for disabled dates in a range.\r\n///\r\n/// @param {List} $border-radius [null] - The border radius used for the outline of the calendar.\r\n/// @param {List} $date-border-radius [null] - The border radius used for the outline outline of the date.\r\n/// @param {List} $month-border-radius [null] - The border radius used for the outline outline of the month.\r\n///\r\n/// @param {Color} $week-number-color [null] - The text color of the week number column.\r\n/// @param {Color} $week-number-background [null] - The background color of the week number column.\r\n///\r\n/// @requires $light-material-schema\r\n///\r\n/// @example scss Change the header and content background colors\r\n///   $my-calendar-theme: calendar-theme(\r\n///     $header-background: purple,\r\n///     $content-background: black\r\n///   );\r\n///   // Pass the theme to the css-vars() mixin\r\n///   @include css-vars($my-calendar-theme);\r\n@function calendar-theme(\r\n    $schema: $light-material-schema,\r\n\r\n    $content-background: null,\r\n    $content-text-color: null,\r\n\r\n    $border-radius: null,\r\n    $date-border-radius: null,\r\n    $month-border-radius: null,\r\n\r\n    $header-background: null,\r\n    $header-text-color: null,\r\n\r\n    $picker-arrow-color: null,\r\n    $picker-arrow-hover-color: null,\r\n\r\n    $picker-text-color: null,\r\n    $picker-text-hover-color: null,\r\n\r\n    $inactive-text-color: null,\r\n    $weekend-text-color: null,\r\n\r\n    $year-current-text-color: null,\r\n    $month-current-text-color: null,\r\n\r\n    $year-hover-text-color: null,\r\n    $month-hover-text-color: null,\r\n    $month-hover-current-text-color: null,\r\n    $month-hover-background: null,\r\n\r\n    $date-selected-background: null,\r\n    $date-selected-hover-background: null,\r\n    $date-selected-focus-background: null,\r\n    $date-selected-text-color: null,\r\n    $date-selected-hover-foreground: null,\r\n    $date-selected-focus-foreground: null,\r\n\r\n    $date-current-bg-color: null,\r\n    $date-current-text-color: null,\r\n    $date-current-hover-foreground: null,\r\n    $date-current-focus-foreground: null,\r\n    $date-current-hover-background: null,\r\n    $date-current-focus-background: null,\r\n    $date-selected-current-background: null,\r\n    $date-selected-current-foreground: null,\r\n    $date-selected-current-hover-background: null,\r\n    $date-selected-current-hover-foreground: null,\r\n    $date-selected-current-focus-background: null,\r\n    $date-selected-current-focus-foreground: null,\r\n\r\n    $date-hover-background: null,\r\n    $date-focus-background: null,\r\n\r\n    $date-special-background: null,\r\n    $date-special-text-color: null,\r\n\r\n    $date-disabled-text-color: null,\r\n    $date-disabled-background: null,\r\n    $border-color: null,\r\n    $border-width: null,\r\n    $picker-background-color: null,\r\n    $label-color: null,\r\n    $week-number-color: null,\r\n    $week-number-background: null,\r\n) {\r\n    $name: 'igx-calendar';\r\n    $selector: 'igx-calendar, igx-days-view, igx-months-view, igx-years-view';\r\n    $calendar-schema: ();\r\n\r\n    @if map.has-key($schema, 'calendar') {\r\n        $calendar-schema: map.get($schema, 'calendar');\r\n    } @else {\r\n        $calendar-schema: $schema;\r\n    }\r\n\r\n    $theme: digest-schema($calendar-schema);\r\n    $meta: map.get($theme, '_meta');\r\n    $variant: map.get($schema, '_meta', 'theme');\r\n    $not-bootstrap-theme: $variant != 'bootstrap';\r\n    $bootstrap-theme: $variant == 'bootstrap';\r\n\r\n    @if not($content-text-color) and $content-background {\r\n        @if meta.type-of($content-background) == 'color' {\r\n            $content-text-color: text-contrast($content-background);\r\n        }\r\n    }\r\n\r\n    @if not($weekend-text-color) and $content-background {\r\n        @if meta.type-of($content-background) == 'color' {\r\n            $weekend-text-color: rgba($content-text-color, .7);\r\n        }\r\n    }\r\n\r\n    @if not($inactive-text-color) and $content-background {\r\n        @if meta.type-of($content-background) == 'color' {\r\n            $inactive-text-color: rgba($content-text-color, .5);\r\n        }\r\n    }\r\n\r\n    @if not($label-color) and $content-background {\r\n        @if meta.type-of($content-background) == 'color' {\r\n            $label-color: rgba($content-text-color, .5);\r\n        }\r\n    }\r\n\r\n    @if not($picker-arrow-color) and $content-background {\r\n        $picker-arrow-color: $content-text-color;\r\n    }\r\n\r\n    @if not($picker-arrow-hover-color) and $header-background {\r\n        @if meta.type-of($header-background) == 'color' {\r\n            $picker-arrow-hover-color: $header-background;\r\n        }\r\n    }\r\n\r\n    @if not($picker-text-color) and $content-background {\r\n        $picker-text-color: $content-text-color;\r\n    }\r\n\r\n    @if not($date-selected-text-color) and $date-selected-background {\r\n        $date-selected-text-color: text-contrast($date-selected-background);\r\n    }\r\n\r\n    @if not($date-selected-hover-foreground) and $date-selected-hover-background {\r\n        $date-selected-hover-foreground: text-contrast($date-selected-hover-background);\r\n    }\r\n\r\n    @if not($date-selected-focus-foreground) and $date-selected-focus-background {\r\n        $date-selected-focus-foreground: text-contrast($date-selected-focus-background);\r\n    }\r\n\r\n    @if not($date-hover-background) and $content-background {\r\n        @if meta.type-of($content-background) == 'color' {\r\n            $date-hover-background: rgba(text-contrast($content-background), .12);\r\n        }\r\n    }\r\n\r\n    @if $not-bootstrap-theme {\r\n        @if not($picker-text-hover-color) and $header-background {\r\n            $picker-text-hover-color: $header-background;\r\n        }\r\n\r\n        @if not($header-text-color) and $header-background {\r\n            $header-text-color: text-contrast($header-background);\r\n        }\r\n\r\n        @if not($date-selected-background) and $header-background {\r\n            $date-selected-background: $header-background;\r\n        }\r\n\r\n        @if not($date-selected-current-background) and $date-selected-background {\r\n            $date-selected-current-background: $date-selected-background;\r\n        }\r\n\r\n        @if not($date-selected-current-hover-background) and $date-selected-hover-background {\r\n            $date-selected-current-hover-background: $date-selected-hover-background;\r\n        }\r\n\r\n        @if not($date-selected-current-focus-background) and $date-selected-focus-background {\r\n            $date-selected-current-focus-background: $date-selected-focus-background;\r\n        }\r\n\r\n        @if not($date-selected-text-color) and $header-background {\r\n            $date-selected-text-color: text-contrast($header-background);\r\n        }\r\n\r\n        @if not($date-current-text-color) and $header-background {\r\n            $date-current-text-color: $header-background;\r\n        }\r\n\r\n        @if not($date-current-hover-foreground) {\r\n            $date-current-hover-foreground: $date-current-text-color;\r\n        }\r\n\r\n        @if not($date-current-focus-foreground) {\r\n            $date-current-focus-foreground: $date-current-text-color;\r\n        }\r\n\r\n        @if not($year-hover-text-color) and $header-background {\r\n            $year-hover-text-color: $header-background;\r\n        }\r\n\r\n        @if not($year-current-text-color) and $header-background {\r\n            $year-current-text-color: $header-background;\r\n        }\r\n\r\n        @if not($month-current-text-color) and $header-background {\r\n            @if $header-background == 'color' {\r\n                $month-current-text-color: $header-background;\r\n            }\r\n        }\r\n    }\r\n\r\n    @if not($date-special-background) and $content-background {\r\n        @if meta.type-of($content-background) == 'color' {\r\n            $date-special-background: rgba(text-contrast($content-background), .04);\r\n        }\r\n    }\r\n\r\n    @if not($date-special-text-color) and $date-special-background {\r\n        $date-special-text-color: text-contrast($date-special-background);\r\n    }\r\n\r\n    @if not($month-hover-text-color) and $month-hover-background {\r\n        @if meta.type-of($month-hover-background) == 'color' {\r\n            $month-hover-text-color: text-contrast($month-hover-background);\r\n        }\r\n    }\r\n\r\n    @if not($month-hover-current-text-color) and $month-hover-background {\r\n        @if meta.type-of($month-hover-background) == 'color' {\r\n            $month-hover-current-text-color: text-contrast($month-hover-background);\r\n        }\r\n    }\r\n\r\n    @if not($date-disabled-text-color) and $date-disabled-background {\r\n        @if meta.type-of($date-disabled-background) == 'color' {\r\n            $date-disabled-color: rgba(text-contrast($date-disabled-background), .38);\r\n        }\r\n    }\r\n\r\n    @if not($week-number-color) and $week-number-background {\r\n        $week-number-color: text-contrast($week-number-background);\r\n    }\r\n\r\n    @if not($border-radius) {\r\n        $border-radius: border-radius(map.get($theme, 'border-radius')...);\r\n    }\r\n\r\n    @if not($month-border-radius) {\r\n        $month-border-radius: border-radius(map.get($theme, 'month-border-radius')...);\r\n    }\r\n\r\n    @if not($date-border-radius) {\r\n        $date-border-radius: border-radius(map.get($theme, 'date-border-radius')...);\r\n    }\r\n\r\n    @return extend($theme, (\r\n        name: $name,\r\n        selector: $selector,\r\n        content-background: $content-background,\r\n        content-text-color: $content-text-color,\r\n\r\n        header-background: $header-background,\r\n        header-text-color: $header-text-color,\r\n\r\n        border-radius: $border-radius,\r\n        date-border-radius: $date-border-radius,\r\n        month-border-radius: $month-border-radius,\r\n\r\n        border-color: $border-color,\r\n        picker-background-color: $picker-background-color,\r\n        border-width: $border-width,\r\n\r\n        picker-arrow-color: $picker-arrow-color,\r\n        picker-arrow-hover-color: $picker-arrow-hover-color,\r\n\r\n        picker-text-color: $picker-text-color,\r\n        picker-text-hover-color: $picker-text-hover-color,\r\n\r\n        weekend-text-color: $weekend-text-color,\r\n        inactive-text-color: $inactive-text-color,\r\n        label-color: $label-color,\r\n\r\n        year-current-text-color: $year-current-text-color,\r\n        month-current-text-color: $month-current-text-color,\r\n\r\n        year-hover-text-color: $year-hover-text-color,\r\n        month-hover-text-color: $month-hover-text-color,\r\n        month-hover-current-text-color: $month-hover-current-text-color,\r\n        month-hover-background: $month-hover-background,\r\n\r\n        date-selected-background: $date-selected-background,\r\n        date-selected-text-color: $date-selected-text-color,\r\n\r\n        date-selected-hover-background: $date-selected-hover-background,\r\n        date-selected-focus-background: $date-selected-focus-background,\r\n        date-selected-hover-foreground: $date-selected-hover-foreground,\r\n        date-selected-focus-foreground: $date-selected-focus-foreground,\r\n\r\n        date-current-bg-color: $date-current-bg-color,\r\n        date-current-text-color: $date-current-text-color,\r\n\r\n        date-current-hover-background: $date-current-hover-background,\r\n        date-current-focus-background: $date-current-focus-background,\r\n        date-current-hover-foreground: $date-current-hover-foreground,\r\n        date-current-focus-foreground: $date-current-focus-foreground,\r\n\r\n        date-selected-current-background: $date-selected-current-background,\r\n        date-selected-current-hover-background: $date-selected-current-hover-background,\r\n        date-selected-current-focus-background: $date-selected-current-focus-background,\r\n        date-selected-current-foreground: $date-selected-current-foreground,\r\n        date-selected-current-hover-foreground: $date-selected-current-hover-foreground,\r\n        date-selected-current-focus-foreground: $date-selected-current-focus-foreground,\r\n\r\n        date-hover-background: $date-hover-background,\r\n        date-focus-background: $date-focus-background,\r\n\r\n        date-special-text-color: $date-special-text-color,\r\n        date-special-background: $date-special-background,\r\n\r\n        date-disabled-text-color: $date-disabled-text-color,\r\n        date-disabled-background: $date-disabled-background,\r\n\r\n        week-number-color: $week-number-color,\r\n        week-number-background: $week-number-background,\r\n        _meta: map.merge(if($meta, $meta, ()), (\r\n            variant: map.get($schema, '_meta', 'theme')\r\n        )),\r\n    ));\r\n}\r\n\r\n/// @param {Map} $theme - The theme used to style the component.\r\n@mixin calendar($theme) {\r\n    @include css-vars($theme);\r\n\r\n    $cal-header-year-margin: 0;\r\n    $cal-header-date-margin: 0;\r\n    $cal-header-padding: rem(16px);\r\n\r\n    $variant: map.get($theme, '_meta', 'variant');\r\n    $bootstrap-theme: $variant == 'bootstrap';\r\n    $not-bootstrap-theme: $variant != 'bootstrap';\r\n\r\n    $cal-picker-padding: map.get((\r\n        material: rem(16px),\r\n        fluent: rem(16px),\r\n        bootstrap: rem(8px),\r\n        indigo-design: rem(16px),\r\n    ), $variant);\r\n\r\n    $cal-value-w: map.get((\r\n        material: rem(40px),\r\n        fluent: rem(40px),\r\n        bootstrap: rem(32px),\r\n        indigo-design: rem(40px),\r\n    ), $variant);\r\n\r\n    $border-width: map.get((\r\n        material: 0,\r\n        fluent: 0,\r\n        bootstrap: 1px,\r\n        indigo-design: 0\r\n    ), $variant);\r\n\r\n    $border-radius: map.get((\r\n        material: 4px,\r\n        fluent: 0,\r\n        bootstrap: 0,\r\n        indigo-design: 8px\r\n    ), $variant);\r\n\r\n    $cal-value-h: $cal-value-w;\r\n    $cal-value-br: math.div($cal-value-w, 2);\r\n    $cal-value-fw: 600;\r\n\r\n    $cal-value-month-margin: 0 rem(12px);\r\n    $cal-value-month-height: rem(91px);\r\n\r\n    $cal-row-padding: rem(8px);\r\n    $cal-row-margin: rem(2px) 0;\r\n\r\n    %cal-display {\r\n        display: flex;\r\n        flex-flow: column nowrap;\r\n        width: 100%;\r\n        min-width: rem(290px);\r\n        background: var-get($theme, 'content-background');\r\n        outline: none;\r\n        border-radius: var-get($theme, 'border-radius');\r\n        overflow: hidden;\r\n        border: $border-width solid var-get($theme, 'border-color');\r\n\r\n        %cal-display {\r\n\r\n            @if $bootstrap-theme {\r\n                border: none;\r\n                border-radius: 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    igx-calendar-container {\r\n        @if $bootstrap-theme {\r\n            %cal-display {\r\n                border: 0;\r\n                border-radius: 0;\r\n            }\r\n\r\n            margin-bottom: 0;\r\n\r\n            %cal-picker-display {\r\n                padding-bottom: 0;\r\n            }\r\n\r\n            %cal-row-display {\r\n                &:first-of-type {\r\n                    padding-top: 0;\r\n                    padding-bottom: math.div($cal-picker-padding, 2);\r\n                }\r\n            }\r\n\r\n            %cal-picker-arrow {\r\n                top: $cal-picker-padding;\r\n            }\r\n        }\r\n    }\r\n\r\n    igx-month-picker {\r\n        %cal-picker-display {\r\n            @if $bootstrap-theme {\r\n                border-bottom: rem(1px) solid var-get($theme, 'border-color');\r\n            }\r\n        }\r\n    }\r\n\r\n    %cal-display + %cal-display {\r\n        margin-inline-start: 1rem;\r\n\r\n        @if $bootstrap-theme {\r\n            margin: 0;\r\n        }\r\n    }\r\n\r\n    %cal-display--vertical {\r\n        flex-flow: row nowrap;\r\n\r\n        %cal-header-display {\r\n            min-width: rem(168px);\r\n        }\r\n    }\r\n\r\n    %cal-header-display {\r\n        background: var-get($theme, 'header-background');\r\n        color: var-get($theme, 'header-text-color');\r\n        padding: $cal-header-padding;\r\n\r\n        @if $bootstrap-theme {\r\n            display: none;\r\n        }\r\n    }\r\n\r\n    %cal-header-year {\r\n        margin: $cal-header-year-margin;\r\n        color: currentColor;\r\n        opacity: .8;\r\n\r\n        @if $variant == 'indigo-design' {\r\n            opacity: 1;\r\n        }\r\n    }\r\n\r\n    %cal-header-date {\r\n        display: flex;\r\n        margin: $cal-header-date-margin;\r\n\r\n        > span {\r\n            @include ellipsis();\r\n        }\r\n    }\r\n\r\n    %cal-header-date--vertical {\r\n        flex-flow: column nowrap;\r\n    }\r\n\r\n    %cal-picker-display {\r\n        display: flex;\r\n        height: rem(56px);\r\n        align-items: center;\r\n        padding-bottom: $cal-picker-padding;\r\n        background: var-get($theme, 'picker-background-color');\r\n\r\n        @if $bootstrap-theme {\r\n            height: auto;\r\n            padding-top: $cal-picker-padding;\r\n        }\r\n        position: relative;\r\n\r\n        div {\r\n            text-align: center;\r\n        }\r\n\r\n        &:focus {\r\n            outline: none;\r\n        }\r\n    }\r\n\r\n    %cal-picker-dates {\r\n        display: flex;\r\n        justify-content: center;\r\n    }\r\n\r\n    %cal-picker-arrow {\r\n        position: absolute;\r\n        display: inline-flex;\r\n        justify-content: center;\r\n        color: var-get($theme, 'picker-arrow-color');\r\n        user-select: none;\r\n        outline: none;\r\n        cursor: pointer;\r\n        height: calc(100% - #{$cal-picker-padding});\r\n        align-items: center;\r\n        top: 0;\r\n\r\n        @if $bootstrap-theme {\r\n            top: math.div($cal-picker-padding, 2);\r\n        }\r\n\r\n        &:focus,\r\n        &:hover {\r\n            color: var-get($theme, 'picker-arrow-hover-color');\r\n        }\r\n\r\n        [dir='rtl'] & {\r\n            transform: scaleX(-1);\r\n        }\r\n    }\r\n\r\n    %cal-picker-arrow__prev {\r\n        inset-inline-start: 0;\r\n    }\r\n\r\n    %cal-picker-arrow__next {\r\n        inset-inline-end: 0;\r\n    }\r\n\r\n    %cal-picker-date {\r\n        color: var-get($theme, 'picker-text-color');\r\n        text-align: center;\r\n        outline: none;\r\n        padding: 0 rem(2px);\r\n\r\n        &:hover,\r\n        &:focus {\r\n            color: var-get($theme, 'picker-text-hover-color');\r\n            cursor: pointer;\r\n        }\r\n    }\r\n\r\n    %cal-body-display {\r\n        flex: 1 1 auto;\r\n        @if $not-bootstrap-theme {\r\n            padding-top: $cal-picker-padding;\r\n        }\r\n        padding-bottom: $cal-picker-padding;\r\n\r\n        overflow: hidden;\r\n    }\r\n\r\n    igx-years-view,\r\n    igx-month-picker,\r\n    igx-months-view {\r\n        color: var-get($theme, 'content-text-color');\r\n\r\n        %cal-body-display {\r\n            @if $bootstrap-theme {\r\n                padding-bottom: 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    %cal-value {\r\n        position: relative;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        color: var-get($theme, 'content-text-color');\r\n        outline: none;\r\n\r\n        &:first-of-type {\r\n            padding-inline-start: $cal-row-padding;\r\n        }\r\n\r\n        &:last-of-type {\r\n            padding-inline-end: $cal-row-padding;\r\n        }\r\n\r\n        // 100 divided by the number of weekdays\r\n        min-width: 14.28%;\r\n\r\n        // Quantity Query selector\r\n        // 8 comes from the number of columns in the calendar\r\n        &:nth-last-child(8):first-child,\r\n        &:nth-last-child(8):first-child ~ * {\r\n            // 100 divided by the number of weekdays + weeks number column\r\n            min-width: 12.5% !important;\r\n        }\r\n    }\r\n\r\n    %cal-row-display {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        margin: $cal-row-margin;\r\n        padding: 0;\r\n\r\n        &:first-of-type {\r\n            @if $bootstrap-theme {\r\n                margin-top: 0;\r\n                background: var-get($theme, 'picker-background-color');\r\n                border-bottom: rem(1px) solid var-get($theme, 'border-color');\r\n                padding-bottom: $cal-picker-padding;\r\n                padding-top: $cal-picker-padding;\r\n            }\r\n\r\n            @if $not-bootstrap-theme{\r\n                margin-bottom: 0;\r\n            }\r\n        }\r\n\r\n        &:nth-child(2) {\r\n            @if $not-bootstrap-theme {\r\n                margin-top: 0;\r\n            }\r\n        }\r\n\r\n        &:last-of-type {\r\n            %cal-value-content--week-number {\r\n                border-bottom-left-radius: $border-radius;\r\n                border-bottom-right-radius: $border-radius;\r\n\r\n                &::before {\r\n                    display: none;\r\n                }\r\n            }\r\n\r\n            @if $bootstrap-theme {\r\n                margin-bottom: 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    %cal-row-display--wrap {\r\n        flex-wrap: wrap;\r\n\r\n        &:first-of-type {\r\n            @if $bootstrap-theme {\r\n                background: transparent;\r\n                margin-bottom: 0;\r\n                border-bottom: 0;\r\n                padding: 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    %cal-column-display {\r\n        display: flex;\r\n        flex-flow: column nowrap;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n    }\r\n\r\n    %cal-column-year {\r\n        padding: 0;\r\n        margin: 0;\r\n\r\n        %cal-value--year {\r\n            flex: 1 0 0;\r\n        }\r\n    }\r\n\r\n    %cal-value--focus,\r\n    %cal-value--hover {\r\n        @if $bootstrap-theme {\r\n            color: var-get($theme, 'date-selected-text-color');\r\n        }\r\n    }\r\n\r\n    %cal-value--hover {\r\n        %cal-value-content::after {\r\n            background: var-get($theme, 'date-hover-background');\r\n        }\r\n    }\r\n\r\n    %cal-value--focus {\r\n        %cal-value-content::after {\r\n            background: var-get($theme, 'date-focus-background');\r\n        }\r\n    }\r\n\r\n    %cal-value--selected--hover {\r\n        %cal-value-content{\r\n            color: var-get($theme, 'date-selected-hover-foreground');\r\n        }\r\n\r\n        %cal-value-content::after {\r\n            background: var-get($theme, 'date-selected-hover-background');\r\n        }\r\n    }\r\n\r\n    %cal-value--current {\r\n        %cal-value-content {\r\n            color: var-get($theme, 'date-current-text-color');\r\n            font-weight: $cal-value-fw ;\r\n            background: var-get($theme, 'date-current-bg-color');\r\n        }\r\n    }\r\n\r\n    %cal-value--current--hover {\r\n        %cal-value-content {\r\n            color: var-get($theme, 'date-current-hover-foreground');\r\n            background: var-get($theme, 'date-current-hover-background');\r\n\r\n            &::after {\r\n                background: var-get($theme, 'date-current-hover-background');\r\n            }\r\n        }\r\n    }\r\n\r\n    %cal-value--current--focus {\r\n        %cal-value-content {\r\n            color: var-get($theme, 'date-current-focus-foreground');\r\n            background: var-get($theme, 'date-current-focus-background');\r\n\r\n            &::after {\r\n                background: var-get($theme, 'date-current-focus-background');\r\n            }\r\n        }\r\n    }\r\n\r\n    %cal-value--selected--current {\r\n        %cal-value-content {\r\n            color: var-get($theme, 'date-selected-current-foreground');\r\n            background: var-get($theme, 'date-selected-current-background');\r\n\r\n            @if $variant == 'indigo-design' {\r\n                font-weight: 700;\r\n            }\r\n        }\r\n    }\r\n\r\n    %cal-value--selected--current--hover {\r\n        %cal-value-content {\r\n            color: var-get($theme, 'date-selected-current-hover-foreground');\r\n\r\n            &::after {\r\n                background: var-get($theme, 'date-selected-current-hover-background');\r\n            }\r\n        }\r\n    }\r\n\r\n    %cal-value--selected--current--focus {\r\n        %cal-value-content {\r\n            color: var-get($theme, 'date-selected-current-focus-foreground');\r\n\r\n            &::after {\r\n                background: var-get($theme, 'date-selected-current-focus-background');\r\n            }\r\n        }\r\n    }\r\n\r\n    %cal-value--selected--focus {\r\n        %cal-value-content {\r\n            color: var-get($theme, 'date-selected-focus-foreground');\r\n        }\r\n\r\n        %cal-value-content::after {\r\n            background: var-get($theme, 'date-selected-focus-background');\r\n        }\r\n    }\r\n\r\n    %cal-value-content {\r\n        position: relative;\r\n        display: inline-flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        width: $cal-value-w;\r\n        min-width: $cal-value-w;\r\n        height: $cal-value-h;\r\n        border-radius: var-get($theme, 'date-border-radius');\r\n        z-index: 0;\r\n        // transition: background .15s ease-out;\r\n\r\n        &::after {\r\n            position: absolute; content: '';\r\n            width: calc(100% - 4px);\r\n            height: calc(100% - 4px);\r\n            top: rem(2px);\r\n            inset-inline-start: rem(2px);\r\n            border-radius: inherit;\r\n            z-index: -1;\r\n        }\r\n    }\r\n\r\n    %cal-value--label {\r\n        @if $not-bootstrap-theme{\r\n            height: $cal-value-h;\r\n        }\r\n\r\n        color: var-get($theme, 'label-color');\r\n\r\n        &:hover,\r\n        &:focus {\r\n            color: var-get($theme, 'label-color');\r\n        }\r\n\r\n        border-radius: 0;\r\n\r\n        @if $bootstrap-theme {\r\n            font-style: italic;\r\n            cursor: default;\r\n        }\r\n    }\r\n\r\n    %cal-value--weekend {\r\n        color: var-get($theme, 'weekend-text-color');\r\n    }\r\n\r\n    %cal-value-date--week-number + %cal-value {\r\n        padding-inline-start: 0 !important;\r\n    }\r\n\r\n    %label--week-number,\r\n    %cal-value-content--week-number {\r\n        position: relative;\r\n        color: var-get($theme, 'week-number-color') !important;\r\n        border-radius: 0;\r\n        pointer-events: none;\r\n    }\r\n\r\n    %cal-value-date--week-number {\r\n        padding-inline-end: 0 !important;\r\n        cursor: default;\r\n\r\n        &:hover,\r\n        &:focus {\r\n            %cal-value-content--week-number {\r\n                color: var-get($theme, 'week-number-color') !important;\r\n            }\r\n        }\r\n    }\r\n\r\n    %cal-value-content--week-number {\r\n        position: relative;\r\n        background: var-get($theme, 'week-number-background') !important;\r\n        min-width: auto;\r\n\r\n        &::after {\r\n            display: none;\r\n        }\r\n\r\n        &::before {\r\n            content: '';\r\n            position: absolute;\r\n            width: 100%;\r\n            height: math.div($cal-row-padding, 2);\r\n            inset-inline-start: 0;\r\n            top: 100%;\r\n            background: var-get($theme, 'week-number-background') !important;\r\n        }\r\n    }\r\n\r\n    %label--week-number {\r\n        padding-inline-end: 0 !important;\r\n        text-align: center;\r\n\r\n        span {\r\n            width: $cal-value-w;\r\n            position: relative;\r\n            background: var-get($theme, 'week-number-background');\r\n\r\n            &::before,\r\n            &::after {\r\n                content: '';\r\n                position: absolute;\r\n                width: 100%;\r\n                background: var-get($theme, 'week-number-background');\r\n                inset-inline-start: 0;\r\n            }\r\n\r\n            &::after {\r\n                top: 100%;\r\n                height: if($not-bootstrap-theme, math.div($cal-row-padding, 2) + rem(2px), $cal-row-padding + rem(5px));\r\n            }\r\n\r\n            &::before {\r\n                bottom: 100%;\r\n                height: $cal-row-padding;\r\n                border-top-left-radius: $border-radius;\r\n                border-top-right-radius: $border-radius;\r\n            }\r\n        }\r\n    }\r\n\r\n    %label--week-number + %cal-value--label {\r\n        padding-inline-start: 0 !important;\r\n    }\r\n\r\n    %cal-value--year {\r\n        margin: 0;\r\n        min-width: 8ch;\r\n        line-height: rem(52px);\r\n\r\n        &:first-of-type {\r\n            padding-inline-start: 0;\r\n        }\r\n\r\n        &:last-of-type {\r\n            padding-inline-end: 0;\r\n        }\r\n    }\r\n\r\n    %cal-value--year-current {\r\n        color: var-get($theme, 'year-current-text-color');\r\n\r\n        @if $bootstrap-theme {\r\n            &:hover,\r\n            &:focus {\r\n                color: var-get($theme, 'year-hover-text-color');\r\n            }\r\n        }\r\n    }\r\n\r\n    %cal-value--year-hover {\r\n        color: var-get($theme, 'year-hover-text-color');\r\n    }\r\n\r\n    %cal-value--month-hover {\r\n        color: var-get($theme, 'month-hover-text-color');\r\n        outline-width: 0;\r\n\r\n        &::after {\r\n            background: var-get($theme, 'month-hover-background');\r\n        }\r\n    }\r\n\r\n    %cal-value--month {\r\n        position: relative;\r\n        display: flex;\r\n        margin: $cal-value-month-margin;\r\n        flex: 1 0 25%;\r\n        justify-content: center;\r\n        align-items: center;\r\n        height: $cal-value-month-height;\r\n        z-index: 1;\r\n\r\n        &::after {\r\n            position: absolute;\r\n            content: '';\r\n            top: 50%;\r\n            inset-inline-start: 0;\r\n            inset-inline-end: 0;\r\n            transform: translateY(-50%);\r\n            height: rem(48px);\r\n            background: transparent;\r\n            border-radius: var-get($theme, 'month-border-radius');\r\n            transition: background-color .15s ease-out;\r\n            z-index: -1;\r\n        }\r\n    }\r\n\r\n    %cal-value--month-current {\r\n        color: var-get($theme, 'month-current-text-color');\r\n    }\r\n\r\n    %cal-value--month-current-hover {\r\n        color: var-get($theme, 'month-hover-current-text-color');\r\n    }\r\n\r\n    %cal-value--inactive {\r\n        cursor: pointer;\r\n        color: var-get($theme, 'inactive-text-color');\r\n    }\r\n\r\n    %cal-value--inactive--single--hover {\r\n        @if $bootstrap-theme {\r\n            color: var-get($theme, 'date-selected-text-color');\r\n        } @else {\r\n            color: var-get($theme, 'inactive-text-color');\r\n        }\r\n    }\r\n\r\n    %cal-value--special {\r\n        %cal-value-content {\r\n            background: var-get($theme, 'date-special-background');\r\n            @if $not-bootstrap-theme {\r\n                color: var-get($theme, 'date-special-text-color');\r\n            }\r\n            font-weight: 900;\r\n        }\r\n    }\r\n\r\n    %cal-value--selected {\r\n        position: relative;\r\n        background: var-get($theme, 'date-selected-background');\r\n\r\n        %cal-value-content {\r\n            color: var-get($theme, 'date-selected-text-color');\r\n            background: var-get($theme, 'date-selected-background') ;\r\n        }\r\n    }\r\n\r\n    %cal-value--disabled {\r\n        pointer-events: none;\r\n        cursor: not-allowed;\r\n        color: var-get($theme, 'date-disabled-text-color');\r\n    }\r\n\r\n    %cal-value--single {\r\n        background: transparent;\r\n\r\n        &::before,\r\n        &::after {\r\n            background: transparent;\r\n        }\r\n\r\n        @if $bootstrap-theme {\r\n            &:hover,\r\n            &:focus {\r\n                color: var-get($theme, 'date-selected-text-color');\r\n            }\r\n        }\r\n    }\r\n\r\n    %cal-value--disabled-range {\r\n        background: var-get($theme, 'date-disabled-background') !important;\r\n\r\n        %cal-value-content {\r\n            color: var-get($theme, 'date-disabled-text-color');\r\n            background: transparent !important;\r\n        }\r\n    }\r\n\r\n    %cal-value--hidden%cal-value--disabled-range {\r\n        background: transparent !important;\r\n\r\n        &::after,\r\n        &::before {\r\n            background: transparent !important;\r\n        }\r\n    }\r\n\r\n    %cal-value--range%cal-value--inactive%cal-value--selected {\r\n        %cal-value-content {\r\n            color: var-get($theme, 'date-selected-text-color');\r\n        }\r\n\r\n        &:focus,\r\n        &:hover {\r\n            %cal-value-content {\r\n                color: var-get($theme, 'date-selected-text-color');\r\n            }\r\n        }\r\n    }\r\n\r\n    %cal-value--range%cal-value--inactive%cal-value--selected%cal-value--single {\r\n        %cal-value-content {\r\n            color: var-get($theme, 'date-selected-text-color');\r\n            background: var-get($theme, 'date-selected-background') !important;\r\n        }\r\n    }\r\n\r\n    %cal-value--first {\r\n        position: relative;\r\n        background: transparent;\r\n        z-index: 0;\r\n\r\n        &::after {\r\n            position: absolute;\r\n            content: '';\r\n            width: 50%;\r\n            top: 0;\r\n            inset-inline-start: 50%;\r\n            bottom: 0;\r\n            background: var-get($theme, 'date-selected-background');\r\n            z-index: -1;\r\n        }\r\n    }\r\n\r\n    %cal-value--last {\r\n        position: relative;\r\n        background: transparent;\r\n        z-index: 0;\r\n\r\n        &::before {\r\n            position: absolute;\r\n            content: '';\r\n            width: 50%;\r\n            top: 0;\r\n            inset-inline-end: 50%;\r\n            bottom: 0;\r\n            background: var-get($theme, 'date-selected-background');\r\n            z-index: -1;\r\n        }\r\n    }\r\n\r\n    %cal-value--hidden {\r\n        %cal-value-content {\r\n            visibility: hidden;\r\n        }\r\n    }\r\n\r\n    %calendar__aria-off-screen {\r\n        position: absolute!important;\r\n        border: none!important;\r\n        height: 1px!important;\r\n        width: 1px!important;\r\n        inset-inline-start: 0!important;\r\n        top: 0!important;\r\n        overflow: hidden!important;\r\n        padding: 0!important;\r\n        margin: 0 !important;\r\n        user-select: none;\r\n        pointer-events: none;\r\n\r\n        &:focus {\r\n            outline: none;\r\n        }\r\n    }\r\n}\r\n\r\n/// Adds typography styles for the igx-calendar component.\r\n/// Uses the 'h4', 'subtitle-1' and 'body-1'\r\n/// category from the typographic scale.\r\n/// @group typography\r\n/// @param {Map} $categories [(header-year: 'subtitle-1', header-date: 'h4', picker-date: 'subtitle-1', content: 'body-1')] - The categories from the typographic scale used for type styles.\r\n@mixin calendar-typography($categories: (\r\n    header-year: 'overline',\r\n    header-date: 'h4',\r\n    weekday-label: 'body-1',\r\n    picker-date: 'subtitle-1',\r\n    content: 'body-1')\r\n) {\r\n    $header-year: map.get($categories, 'header-year');\r\n    $header-date: map.get($categories, 'header-date');\r\n    $weekday-label: map.get($categories, 'weekday-label');\r\n    $picker-date: map.get($categories, 'picker-date');\r\n    $content: map.get($categories, 'content');\r\n\r\n    %cal-header-year {\r\n        @include type-style($header-year) {\r\n            margin: 0;\r\n        }\r\n    }\r\n\r\n    %cal-header-date {\r\n        @include type-style($header-date) {\r\n            margin: 0;\r\n        }\r\n    }\r\n\r\n    %cal-picker-date {\r\n        @include type-style($picker-date) {\r\n            margin: 0;\r\n        }\r\n    }\r\n\r\n    %cal-value-content {\r\n        @include type-style($content) {\r\n            margin: 0;\r\n        }\r\n    }\r\n\r\n    %cal-value--label {\r\n        @include type-style($weekday-label, false);\r\n        margin: 0;\r\n    }\r\n\r\n    %cal-value--year-current {\r\n        @include type-style($content) {\r\n            font-size: rem(24px);\r\n            line-height: rem(52px);\r\n            margin: 0;\r\n        }\r\n    }\r\n}\r\n","@use 'sass:map';\r\n@use 'sass:meta';\r\n@use '../../base' as *;\r\n@use '../../themes/schemas' as *;\r\n\r\n////\r\n/// @group themes\r\n/// @access public\r\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\r\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\r\n////\r\n\r\n///\r\n/// @param {Map} $schema [$light-material-schema] - The schema used as basis for styling the component.\r\n/// @param {Map} $elevations [$elevations] - The elevations (shadows) map to be used.\r\n/// @param {Color} $background [null] - The card background color.\r\n/// @param {Color} $outline-color [null] - The color of the outline for outlined type cards.\r\n/// @param {Color} $header-text-color [null] - The text color of the card title.\r\n/// @param {Color} $subtitle-text-color [null] - The text color of the card subtitle.\r\n/// @param {Color} $content-text-color [null] - The text color of the card content.\r\n/// @param {Color} $actions-text-color [null] - The text color of the card buttons.\r\n/// @param {box-shadow} $resting-shadow [null] - The shadow of the card in its resting state.\r\n/// @param {box-shadow} $hover-shadow [null] - The shadow of the card in its hover state.\r\n///\r\n/// @param {List} $border-radius [null] - The border radius used for card component.\r\n///\r\n/// @requires $light-material-schema\r\n///\r\n/// @example scss Change the background and content text colors in card\r\n///   $my-card-theme: card-theme($background: #fff);\r\n///   // Pass the theme to the css-vars() mixin\r\n///   @include css-vars($my-card-theme);\r\n@function card-theme(\r\n    $schema: $light-material-schema,\r\n    $elevations: null,\r\n\r\n    $border-radius: null,\r\n    $background: null,\r\n    $outline-color: null,\r\n    $header-text-color: null,\r\n    $subtitle-text-color: null,\r\n    $content-text-color: null,\r\n    $actions-text-color: null,\r\n    $resting-shadow: null,\r\n    $hover-shadow: null,\r\n) {\r\n    $name: 'igx-card';\r\n    $card-schema: ();\r\n\r\n    @if map.has-key($schema, 'card') {\r\n        $card-schema: map.get($schema, 'card');\r\n    } @else {\r\n        $card-schema: $schema;\r\n    }\r\n\r\n    $theme: digest-schema($card-schema);\r\n    $meta: map.get($theme, '_meta');\r\n\r\n    @if not($header-text-color) and $background {\r\n        $header-text-color: text-contrast($background);\r\n    }\r\n\r\n    @if not($actions-text-color) and $background {\r\n        @if meta.type-of($background) == 'color' {\r\n            $actions-text-color: rgba(text-contrast($background), .5);\r\n        }\r\n    }\r\n\r\n    @if not($content-text-color) and $background {\r\n        @if meta.type-of($background) == 'color' {\r\n            $content-text-color: rgba(text-contrast($background), .7);\r\n        }\r\n    }\r\n\r\n    @if not($subtitle-text-color) and $background {\r\n        @if meta.type-of($background) == 'color' {\r\n            $subtitle-text-color: rgba(text-contrast($background), .7);\r\n        }\r\n    }\r\n\r\n    @if not($resting-shadow) {\r\n        $resting-elevation: map.get($card-schema, 'resting-elevation');\r\n        $resting-shadow: elevation($resting-elevation);\r\n    }\r\n\r\n    @if not($hover-shadow) {\r\n        $hover-elevation: map.get($card-schema, 'hover-elevation');\r\n        $hover-shadow: elevation($hover-elevation);\r\n    }\r\n\r\n    @if not($border-radius) {\r\n        $border-radius: border-radius(map.get($theme, 'border-radius')...);\r\n    }\r\n\r\n    @return extend($theme, (\r\n        name: $name,\r\n        background: $background,\r\n        outline-color: $outline-color,\r\n        border-radius: $border-radius,\r\n        header-text-color: $header-text-color,\r\n        subtitle-text-color: $subtitle-text-color,\r\n        content-text-color: $content-text-color,\r\n        actions-text-color: $actions-text-color,\r\n        resting-shadow: $resting-shadow,\r\n        hover-shadow: $hover-shadow,\r\n        _meta: map.merge(if($meta, $meta, ()), (\r\n            variant: map.get($schema, '_meta', 'theme')\r\n        )),\r\n    ));\r\n}\r\n\r\n/// Card Component\r\n/// @param {Map} $theme - The theme used to style the component.\r\n@mixin card($theme) {\r\n    @include css-vars($theme);\r\n    $variant: map.get($theme, '_meta', 'variant');\r\n    $not-material-theme: $variant != 'material';\r\n\r\n    $card-heading-padding: rem(16px, 16px);\r\n    $card-content-padding: rem(14px);\r\n    $card-actions-padding: rem(8px);\r\n\r\n    $card-tgroup-margin: 0 em(16px);\r\n\r\n    $card-transitions: box-shadow .3s cubic-bezier(.25, .8, .25, 1);\r\n\r\n    %igx-card-display {\r\n        display: flex;\r\n        flex-direction: column;\r\n        box-shadow: var-get($theme, 'resting-shadow');\r\n        overflow: hidden;\r\n        border-radius: var-get($theme, 'border-radius');\r\n        background: var-get($theme, 'background');\r\n        transition: $card-transitions;\r\n        backface-visibility: hidden;\r\n\r\n        @if $not-material-theme {\r\n            border: rem(1px) solid var-get($theme, 'outline-color');\r\n        }\r\n\r\n        &:hover {\r\n            box-shadow: var-get($theme, 'hover-shadow');\r\n        }\r\n    }\r\n\r\n    %igx-card--outlined {\r\n        box-shadow: none;\r\n        border: rem(1px) solid var-get($theme, 'outline-color');\r\n\r\n        &:hover {\r\n            box-shadow: none;\r\n        }\r\n    }\r\n\r\n    %igx-card--horizontal {\r\n        flex-direction: row;\r\n    }\r\n\r\n    %igx-card-header {\r\n        display: flex;\r\n        flex-flow: row wrap;\r\n        align-content: flex-start;\r\n        width: 100%;\r\n        padding: $card-heading-padding;\r\n        color: var-get($theme, 'header-text-color');\r\n\r\n        &:empty {\r\n            display: block;\r\n            padding: 0;\r\n        }\r\n    }\r\n\r\n    %igx-card-header--vertical {\r\n        flex-flow: column nowrap;\r\n\r\n        %igx-card-header-titles {\r\n            text-align: center;\r\n        }\r\n\r\n        %igx-card-header-thumbnail {\r\n            display: flex;\r\n            justify-content: center;\r\n            align-self: unset;\r\n            margin-inline-end: 0;\r\n            margin-bottom: rem(16px);\r\n        }\r\n    }\r\n\r\n    %igx-card-header-thumbnail {\r\n        align-self: flex-start;\r\n        margin-inline-end: rem(16px);\r\n\r\n        &:empty {\r\n            display: none;\r\n        }\r\n    }\r\n\r\n    %igx-card-header-titles {\r\n        display: flex;\r\n        flex-flow: column nowrap;\r\n        overflow: hidden;\r\n        flex: 1 1 auto;\r\n        justify-content: center;\r\n\r\n        &:empty {\r\n            display: none;\r\n        }\r\n    }\r\n\r\n    %igx-card-header-subtitle {\r\n        color: var-get($theme, 'subtitle-text-color');\r\n    }\r\n\r\n    %igx-card-tgroup {\r\n        margin: $card-tgroup-margin;\r\n    }\r\n\r\n    %igx-card-content {\r\n        display: block;\r\n        width: 100%;\r\n        padding: $card-content-padding;\r\n        color: var-get($theme, 'content-text-color');\r\n        overflow: auto;\r\n    }\r\n\r\n    %igx-card-media {\r\n        display: block;\r\n        overflow: hidden;\r\n        line-height: 0;\r\n\r\n        > * {\r\n            width: 100%;\r\n            height: 100%;\r\n            object-fit: cover;\r\n        }\r\n    }\r\n\r\n    %igx-card-media--right {\r\n        width: auto;\r\n        margin-inline-start: auto;\r\n        order: 9999;\r\n    }\r\n\r\n    %igx-card-actions {\r\n        display: flex;\r\n        flex-flow: row wrap;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n        padding: $card-actions-padding;\r\n\r\n        &:first-child {\r\n            margin-block-end: auto;\r\n        }\r\n\r\n        &:last-child {\r\n            margin-block-start: auto;\r\n        }\r\n\r\n        [igxButton] ~ [igxButton] {\r\n            margin-inline-start: rem(8px);\r\n        }\r\n    }\r\n\r\n    %igx-card-actions--vertical {\r\n        flex-direction: column;\r\n\r\n        &:is(:first-child, :last-child) {\r\n            margin-block: initial;\r\n        }\r\n\r\n        [dir='rtl'] & {\r\n            order: -1;\r\n        }\r\n    }\r\n\r\n    %igx-card-actions__end {\r\n        display: flex;\r\n        align-items: center;\r\n        order: 1;\r\n        color: var-get($theme, 'actions-text-color');\r\n        margin-inline-start: auto;\r\n\r\n        &:empty {\r\n            display: none;\r\n        }\r\n    }\r\n\r\n    %igx-card-actions__start {\r\n        display: flex;\r\n        align-items: center;\r\n        order: 0;\r\n\r\n        &:empty {\r\n            display: none;\r\n        }\r\n    }\r\n\r\n    %igx-card-actions__start--justify,\r\n    %igx-card-actions__end--justify {\r\n        justify-content: space-around;\r\n        flex-grow: 1;\r\n\r\n        &:empty {\r\n            display: none;\r\n        }\r\n    }\r\n\r\n    %igx-card-actions__end--vertical,\r\n    %igx-card-actions__start--vertical {\r\n        flex-direction: column;\r\n\r\n        [igxButton] ~ [igxButton] {\r\n            margin-inline-start: 0;\r\n            margin-top: rem(8px);\r\n        }\r\n    }\r\n\r\n    %igx-card-actions__end--vertical {\r\n        margin-top: auto;\r\n        margin-inline-start: 0;\r\n    }\r\n\r\n    %igx-card-actions__end--reverse {\r\n        order: 0;\r\n        margin-inline-start: 0;\r\n    }\r\n\r\n    %igx-card-actions__start--reverse {\r\n        order: 1;\r\n        margin-inline-start: auto;\r\n    }\r\n\r\n    %igx-card-actions__end--vertical-reverse {\r\n        margin: 0;\r\n        margin-bottom: auto;\r\n    }\r\n\r\n    %igx-card-actions__start--vertical-reverse {\r\n        margin: 0;\r\n        margin-top: auto;\r\n    }\r\n\r\n    %igx-card-actions-bgroup {\r\n        display: flex;\r\n        flex-flow: row nowrap;\r\n\r\n        [igxButton] ~ [igxButton] {\r\n            margin-inline-start: rem(8px);\r\n        }\r\n    }\r\n\r\n    %igx-card-actions-igroup {\r\n        display: flex;\r\n        flex-flow: row nowrap;\r\n\r\n        %igx-button--icon {\r\n            color: var-get($theme, 'actions-text-color');\r\n        }\r\n    }\r\n\r\n    %igx-card-actions-igroup--start {\r\n        margin-inline-end: auto;\r\n    }\r\n\r\n    %igx-card-actions-igroup--end {\r\n        margin-inline-start: auto;\r\n    }\r\n}\r\n\r\n/// Adds typography styles for the igx-card component.\r\n/// Uses the 'h6', 'subtitle-2' and 'body-2'\r\n/// category from the typographic scale.\r\n/// @group typography\r\n/// @param {Map} $categories [(title: 'h6', title-small: 'subtitle-2', subtitle: 'subtitle-2', content: 'body-2')] - The categories from the typographic scale used for type styles.\r\n@mixin card-typography($categories: (\r\n    title: 'h6',\r\n    title-small: 'subtitle-2',\r\n    subtitle: 'subtitle-2',\r\n    content: 'body-2')\r\n) {\r\n    $title: map.get($categories, 'title');\r\n    $title-small: map.get($categories, 'title-small');\r\n    $subtitle: map.get($categories, 'subtitle');\r\n    $content: map.get($categories, 'content');\r\n\r\n    %igx-card-header-title {\r\n        @include type-style($title) {\r\n            margin: 0;\r\n        }\r\n    }\r\n\r\n    %igx-card-header-title--small {\r\n        @include type-style($title-small) {\r\n            margin: 0;\r\n        }\r\n    }\r\n\r\n    %igx-card-header-subtitle {\r\n        @include type-style($subtitle){\r\n            margin: 0;\r\n        }\r\n    }\r\n\r\n    %igx-card-content > * {\r\n        @include type-style($content) {\r\n            margin: 0;\r\n        }\r\n    }\r\n}\r\n","@use 'sass:map';\r\n@use 'sass:math';\r\n@use '../../base' as *;\r\n@use '../ripple/ripple-component' as *;\r\n@use '../ripple/ripple-theme' as *;\r\n@use 'igniteui-theming/sass/animations' as *;\r\n@use '../../themes/schemas' as *;\r\n\r\n////\r\n/// @group themes\r\n/// @access public\r\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\r\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\r\n////\r\n\r\n/// Checkbox Theme\r\n/// @param {Map} $schema [$light-material-schema] - The schema used as basis for styling the component.\r\n/// @param {Color} $label-color [null]- The text color used for the label text.\r\n/// @param {Color} $empty-color [null] - The unchecked border color.\r\n/// @param {Color} $fill-color [null] - The checked border and fill colors.\r\n/// @param {Color} $fill-color-hover [null] - The checked border and fill colors on hover.\r\n/// @param {Color} $tick-color [null] - The checked mark color.\r\n/// @param {Color} tick-color-hover [null] - The checked mark color on hover.\r\n/// @param {Color} $disabled-color [null] - The disabled border and fill colors.\r\n/// @param {Color} $disabled-indeterminate-color [null] - The disabled border and fill colors in indeterminate state.\r\n/// @param {Color} $disabled-color-label [null] - The disabled label color.\r\n/// @param {List} $border-radius [null] - The border radius used for checkbox component.\r\n/// @param {List} $border-radius-ripple [null] - The border radius used for checkbox ripple.\r\n/// @param {Color} $focus-outline-color [null] - The focus outlined color.\r\n/// @param {Color} $error-color [null] - The border and fill colors in invalid state.\r\n/// @param {Color} $error-color-hover [null] - The border and fill colors in invalid state on hover.\r\n/// Set to light when the surrounding area is dark.\r\n///\r\n/// @requires $light-material-schema\r\n///\r\n/// @example scss Change the checked fill color\r\n///   $my-checkbox-theme: igx-checkbox-theme($fill-color: magenta);\r\n///   // Pass the theme to the css-vars mixin\r\n///   @include css-vars($my-checkbox-theme);\r\n@function checkbox-theme(\r\n    $schema: $light-material-schema,\r\n\r\n    $border-radius: null,\r\n    $label-color: null,\r\n    $empty-color: null,\r\n    $fill-color: null,\r\n    $fill-color-hover: null,\r\n    $tick-color: null,\r\n    $tick-color-hover: null,\r\n    $disabled-color: null,\r\n    $disabled-indeterminate-color: null,\r\n    $disabled-color-label: null,\r\n    $border-radius-ripple: null,\r\n    $focus-outline-color: null,\r\n    $error-color: null,\r\n    $error-color-hover: null,\r\n) {\r\n    $name: 'igx-checkbox';\r\n    $checkbox-schema: ();\r\n\r\n    @if map.has-key($schema, 'checkbox') {\r\n        $checkbox-schema: map.get($schema, 'checkbox');\r\n    } @else {\r\n        $checkbox-schema: $schema;\r\n    }\r\n\r\n    $theme: digest-schema($checkbox-schema);\r\n    $meta: map.get($theme, '_meta');\r\n\r\n    @if not($border-radius) {\r\n        $border-radius: border-radius(map.get($theme, 'border-radius')...);\r\n    }\r\n\r\n    @if not($border-radius-ripple) {\r\n        $border-radius-ripple: border-radius(map.get($theme, 'border-radius-ripple')...);\r\n    }\r\n\r\n    @return extend($theme, (\r\n        name: $name,\r\n        label-color: $label-color,\r\n        empty-color: $empty-color,\r\n        fill-color: $fill-color,\r\n        fill-color-hover: $fill-color-hover,\r\n        tick-color: $tick-color,\r\n        tick-color-hover: $tick-color-hover,\r\n        disabled-color: $disabled-color,\r\n        disabled-indeterminate-color: $disabled-indeterminate-color,\r\n        disabled-color-label: $disabled-color-label,\r\n        border-radius: $border-radius,\r\n        border-radius-ripple: $border-radius-ripple,\r\n        focus-outline-color: $focus-outline-color,\r\n        error-color: $error-color,\r\n        error-color-hover: $error-color-hover,\r\n        _meta: map.merge(if($meta, $meta, ()), (\r\n            variant: map.get($schema, '_meta', 'theme'),\r\n            theme-variant: map.get($schema, '_meta', 'variant')\r\n        )),\r\n    ));\r\n}\r\n\r\n/// @param {Map} $theme - The theme used to style the component.\r\n/// @requires {mixin} ripple\r\n/// @requires ripple-theme\r\n@mixin checkbox($theme) {\r\n    @include css-vars($theme);\r\n    $theme-variant: map.get($theme, '_meta', 'theme-variant');\r\n    $variant: map.get($theme, '_meta', 'variant');\r\n    $material-theme: $variant == 'material';\r\n    $bootstrap-theme: $variant == 'bootstrap';\r\n\r\n    @include scale-in-out($start-scale: .9);\r\n\r\n    // If updating the WIDTH of the checkbox here, please update it in the grid theme as well.\r\n    // It is under the name of $cbx-size\r\n    $size: rem(20px);\r\n    $size-bs: rem(16px);\r\n    $checkbox-radius: math.div($size, 2);\r\n\r\n    $size: map.get((\r\n        material: $size,\r\n        fluent: $size,\r\n        bootstrap: $size-bs,\r\n        indigo-design: $size,\r\n    ), $variant);\r\n\r\n    $border-width: map.get((\r\n        material: rem(2px),\r\n        fluent: rem(1px),\r\n        bootstrap: rem(1px),\r\n        indigo-design: rem(2px),\r\n    ), $variant);\r\n\r\n    $ripple-display: map.get((\r\n        material: block,\r\n        fluent: none,\r\n        bootstrap: none,\r\n        indigo-design: none,\r\n    ), $variant);\r\n\r\n    $label-margin: rem(8px);\r\n\r\n    $mark-stroke: map.get((\r\n        material: 3,\r\n        fluent: 1,\r\n        bootstrap: 3,\r\n        indigo-design: 3,\r\n    ), $variant);\r\n\r\n    $mark-offset: map.get((\r\n        material: 0,\r\n        fluent: -1px,\r\n        bootstrap: 0,\r\n        indigo-design: 0,\r\n    ), $variant);\r\n\r\n    $mark-length: 24;\r\n    $mark-x-factor: math.div($mark-stroke, $mark-length);\r\n\r\n    $ripple-size: rem(40px);\r\n    $ripple-radius: math.div($ripple-size, 2);\r\n\r\n    $ripple-theme: ripple-theme(\r\n        $schema: $light-material-schema,\r\n        $color: var-get($theme, 'fill-color')\r\n    );\r\n\r\n    @include scale-in-center();\r\n\r\n    %cbx-display {\r\n        position: relative;\r\n        display: inline-flex;\r\n        flex-flow: row nowrap;\r\n        align-items: center;\r\n        outline-style: none;\r\n    }\r\n\r\n    %cbx-display--disabled {\r\n        user-select: none;\r\n        pointer-events: none;\r\n        cursor: initial;\r\n    }\r\n\r\n    %cbx-input {\r\n        @include hide-default();\r\n    }\r\n\r\n    %cbx-composite-wrapper {\r\n        align-items: center;\r\n        justify-content: center;\r\n        display: flex;\r\n        position: relative;\r\n        width: $size;\r\n        height: $size;\r\n    }\r\n\r\n    %cbx-composite {\r\n        position: relative;\r\n        display: inline-block;\r\n        cursor: pointer;\r\n        width: $size;\r\n        height: $size;\r\n        min-width: $size;\r\n        border-width: $border-width;\r\n        border-style: solid;\r\n        border-color: var-get($theme, 'empty-color');\r\n        border-radius: var-get($theme, 'border-radius');\r\n        -webkit-tap-highlight-color: transparent;\r\n        transition: border-color .2s $ease-out-quad;\r\n        overflow: hidden;\r\n\r\n        &::after {\r\n            position: absolute;\r\n            content: '';\r\n            inset: 0;\r\n            transition: background .2s $ease-out-quad;\r\n        }\r\n    }\r\n\r\n    %cbx-composite--x {\r\n        border-color: var-get($theme, 'fill-color');\r\n\r\n        &::after {\r\n            background: var-get($theme, 'fill-color');\r\n        }\r\n    }\r\n\r\n    %cbx-composite--invalid {\r\n        border-color: var-get($theme, 'error-color');\r\n    }\r\n\r\n    %cbx-composite--invalid--fluent {\r\n        @if $variant == 'fluent' {\r\n            border-color: var-get($theme, 'error-color-hover');\r\n        }\r\n    }\r\n\r\n    %cbx-composite--x--invalid {\r\n        border-color: var-get($theme, 'error-color');\r\n\r\n        &::after {\r\n            background: var-get($theme, 'error-color');\r\n        }\r\n    }\r\n\r\n    %cbx-composite--x--fluent {\r\n        @if $variant == 'fluent' {\r\n            border-color: var-get($theme, 'fill-color-hover');\r\n\r\n            &::after {\r\n                background: var-get($theme, 'fill-color-hover');\r\n            }\r\n        }\r\n    }\r\n\r\n    %cbx-composite--x--invalid--fluent {\r\n        @if $variant == 'fluent' {\r\n            border-color: var-get($theme, 'error-color-hover');\r\n\r\n            &::after {\r\n                background: var-get($theme, 'error-color-hover');\r\n            }\r\n        }\r\n    }\r\n\r\n    %cbx-composite--disabled {\r\n        border-color: var-get($theme, 'disabled-color');\r\n        background: transparent;\r\n\r\n        @if $bootstrap-theme {\r\n            border-color: var-get($theme, 'disabled-color-label');\r\n        }\r\n    }\r\n\r\n    %cbx-composite--x--disabled {\r\n        background: var-get($theme, 'disabled-color');\r\n\r\n        &::after {\r\n            background: var-get($theme, 'disabled-color');\r\n        }\r\n\r\n        @if $bootstrap-theme {\r\n            border-color: var-get($theme, 'disabled-color');\r\n        }\r\n    }\r\n\r\n    %cbx-composite-mark {\r\n        position: absolute;\r\n        inset: 0;\r\n        stroke: var-get($theme, 'tick-color');\r\n        stroke-linecap: square;\r\n        stroke-width: $mark-stroke;\r\n        stroke-dasharray: $mark-length;\r\n        stroke-dashoffset: $mark-length;\r\n        fill: none;\r\n        opacity: 0;\r\n        z-index: 1;\r\n        transition: opacity .1s $ease-out-quad;\r\n    }\r\n\r\n    %igx-checkbox--indeterminate {\r\n        %cbx-composite-mark {\r\n            top: $mark-offset;\r\n            inset-inline-start: $mark-offset;\r\n        }\r\n\r\n        @if $variant == 'material' {\r\n            %cbx-composite--x--disabled {\r\n                border: var-get($theme, 'disabled-indeterminate-color');\r\n\r\n                &::after {\r\n                    background: var-get($theme, 'disabled-indeterminate-color');\r\n                }\r\n            }\r\n        }\r\n\r\n        @if $variant == 'fluent' {\r\n            %cbx-composite-mark {\r\n                stroke: transparent;\r\n            }\r\n\r\n            %cbx-composite {\r\n                background: transparent;\r\n\r\n                &::after {\r\n                    background: transparent;\r\n                }\r\n\r\n                &::before {\r\n                    content: '';\r\n                    position: absolute;\r\n                    top: calc($size / 2 - rem(6px));\r\n                    inset-inline-start: calc($size / 2 - rem(6px));\r\n                    width: rem(10px);\r\n                    height: rem(10px);\r\n                    border-radius: border-radius(rem(2px));\r\n                    border: rem(5px) solid var-get($theme, 'fill-color');\r\n                    z-index: 1;\r\n                }\r\n            }\r\n\r\n            &:hover {\r\n                %cbx-composite {\r\n                    border-color: var-get($theme, 'fill-color-hover');\r\n\r\n                    &::before {\r\n                        border-color: var-get($theme, 'fill-color-hover');\r\n                    }\r\n                }\r\n            }\r\n\r\n            %cbx-composite--x--disabled {\r\n                background: transparent;\r\n\r\n                &::after {\r\n                    background: transparent;\r\n                }\r\n\r\n                &::before {\r\n                    border-color: var-get($theme, 'disabled-color');\r\n                    background: var-get($theme, 'disabled-color');\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    %igx-checkbox--indeterminate--invalid {\r\n        %cbx-composite--x {\r\n            &::after {\r\n                background: var-get($theme, 'error-color');\r\n            }\r\n        }\r\n\r\n        @if $variant == 'fluent' {\r\n            %cbx-composite {\r\n                border-color: var-get($theme, 'error-color');\r\n\r\n                &::before {\r\n                    border-color: var-get($theme, 'error-color');\r\n                }\r\n            }\r\n\r\n            %cbx-composite--x {\r\n                &::after {\r\n                    background: transparent;\r\n                }\r\n            }\r\n\r\n            &:hover {\r\n                %cbx-composite {\r\n                    border-color: var-get($theme, 'error-color-hover');\r\n\r\n                    &::before {\r\n                        border-color: var-get($theme, 'error-color-hover');\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    %cbx-composite-mark--x {\r\n        stroke-dashoffset: 0;\r\n        opacity: 1;\r\n        transition: all .2s $ease-out-quad, opacity .2s $ease-out-quad;\r\n    }\r\n\r\n    %cbx-composite-mark--in {\r\n        stroke-dashoffset: 41; /* length of path - adjacent line length */\r\n        opacity: 1;\r\n        transform: rotate(45deg) translateX(-#{$mark-x-factor}em);\r\n    }\r\n\r\n    %cbx-composite-mark--fluent {\r\n        @if $variant == 'fluent' {\r\n            @extend %cbx-composite-mark;\r\n            @extend %cbx-composite-mark--x;\r\n            stroke: var-get($theme, 'tick-color-hover');\r\n        }\r\n    }\r\n\r\n    %cbx-composite-mark--x--fluent {\r\n        @if $variant == 'fluent' {\r\n            stroke: var-get($theme, 'tick-color');\r\n        }\r\n    }\r\n\r\n    %cbx-composite-mark--invalid--fluent {\r\n        @if $variant == 'fluent' {\r\n            stroke: var-get($theme, 'error-color');\r\n        }\r\n    }\r\n\r\n    %cbx-composite-mark--in--fluent {\r\n        @if $variant == 'fluent' {\r\n            stroke: transparent;\r\n        }\r\n    }\r\n\r\n    %cbx-label {\r\n        display: inline-block;\r\n        color: var-get($theme, 'label-color');\r\n        cursor: pointer;\r\n        user-select: none;\r\n        word-wrap: break-all;\r\n\r\n        &:empty {\r\n            margin: 0;\r\n        }\r\n    }\r\n\r\n    %cbx-label-pos--before,\r\n    %cbx-label-pos--after {\r\n        &:empty {\r\n            margin: 0;\r\n        }\r\n    }\r\n\r\n    %cbx-label-pos--after {\r\n        margin-inline-start: $label-margin;\r\n    }\r\n\r\n    %cbx-label-pos--before {\r\n        margin-inline-end: $label-margin;\r\n        order: -1;\r\n    }\r\n\r\n    %cbx-label--invalid {\r\n        color: var-get($theme, 'error-color');\r\n    }\r\n\r\n    %cbx-label--disabled {\r\n        color: var-get($theme, 'disabled-color-label');\r\n    }\r\n\r\n    %cbx-ripple {\r\n        @include ripple($ripple-theme);\r\n        @include css-vars($ripple-theme);\r\n        display: $ripple-display;\r\n        position: absolute;\r\n        top: calc(50% - #{$ripple-radius});\r\n        width: $ripple-size;\r\n        height: $ripple-size;\r\n        border-radius: var-get($theme, 'border-radius-ripple');\r\n        overflow: hidden;\r\n        pointer-events: none;\r\n        filter: opacity(1);\r\n    }\r\n\r\n    %cbx-ripple--hover {\r\n        background: var-get($theme, 'empty-color');\r\n        transition: background .2s $ease-out-quad;\r\n        opacity: .06;\r\n\r\n        @if $theme-variant == 'dark' {\r\n            opacity: .12;\r\n        }\r\n    }\r\n\r\n    %cbx-ripple--hover-checked {\r\n        background: var-get($theme, 'fill-color');\r\n    }\r\n\r\n    %cbx-ripple--hover-invalid {\r\n        background: var-get($theme, 'error-color');\r\n    }\r\n\r\n    %igx-checkbox--focused {\r\n        @if $variant == 'fluent' {\r\n            position: relative;\r\n            $focus-outline-offset-top: rem(2px);\r\n            $focus-outline-offset-left: rem(2px);\r\n\r\n            &::after {\r\n                content: '';\r\n                position: absolute;\r\n                top: -$focus-outline-offset-top;\r\n                inset-inline-start: -$focus-outline-offset-left;\r\n                box-shadow: 0 0 0 rem(1px) var-get($theme, 'focus-outline-color');\r\n                width: calc(100% + (#{$focus-outline-offset-left} * 2));\r\n                height: calc(100% + (#{$focus-outline-offset-top} * 2));\r\n            }\r\n        }\r\n\r\n        @if $variant == 'bootstrap' {\r\n            %cbx-composite {\r\n                border-radius: var-get($theme, 'border-radius');\r\n                box-shadow: 0 0 0 rem(2px) var-get($theme, 'focus-outline-color');\r\n            }\r\n        }\r\n\r\n        @if $variant == 'indigo-design' {\r\n            %cbx-composite {\r\n                border-radius: var-get($theme, 'border-radius');\r\n                box-shadow: 0 0 0 rem(3px) var-get($theme, 'focus-outline-color');\r\n            }\r\n        }\r\n    }\r\n\r\n    %igx-checkbox--focused-checked {\r\n        @if $variant == 'indigo-design' {\r\n            %cbx-composite {\r\n                border-radius: var-get($theme, 'border-radius');\r\n                box-shadow: 0 0 0 rem(3px) var-get($theme, 'focus-outline-color-focused');\r\n            }\r\n        }\r\n    }\r\n\r\n    %igx-checkbox--focused-invalid {\r\n        @if $variant == 'bootstrap' {\r\n            %cbx-composite {\r\n                box-shadow: 0 0 0 rem(2px) var-get($theme, 'error-color-hover');\r\n            }\r\n        }\r\n\r\n        @if $variant == 'indigo-design' {\r\n            %cbx-composite {\r\n                box-shadow: 0 0 0 rem(3px) var-get($theme, 'error-color-hover');\r\n            }\r\n        }\r\n    }\r\n\r\n    %cbx-ripple--focused {\r\n        background: var-get($theme, 'empty-color');\r\n        transition: background .2s $ease-out-quad;\r\n        opacity: .12;\r\n\r\n        @if $theme-variant == 'dark' {\r\n            opacity: .24;\r\n        }\r\n    }\r\n\r\n    %cbx-ripple--focused-checked {\r\n        background: var-get($theme, 'fill-color');\r\n    }\r\n\r\n    %cbx-ripple--focused-invalid {\r\n        background: var-get($theme, 'error-color');\r\n    }\r\n\r\n    %cbx-ripple--pressed {\r\n        opacity: .12;\r\n\r\n        @if $theme-variant == 'dark' {\r\n            opacity: .24;\r\n        }\r\n    }\r\n\r\n    %cbx-display--plain {\r\n        %cbx-composite,\r\n        %cbx-composite::after,\r\n        %cbx-composite-mark,\r\n        %cbx-composite-mark--x {\r\n            transition: none;\r\n        }\r\n    }\r\n}\r\n\r\n/// Adds typography styles for the igx-checkbox component.\r\n/// Uses the 'subtitle-1' category from the typographic scale.\r\n/// @group typography\r\n/// @param {Map} $categories [(label: 'subtitle-1')] - The categories from the typographic scale used for type styles.\r\n@mixin checkbox-typography(\r\n    $categories: (label: 'subtitle-1')\r\n) {\r\n    $label: map.get($categories, 'label');\r\n\r\n    %cbx-label {\r\n        @include type-style($label) {\r\n            margin-top: 0;\r\n            margin-bottom: 0;\r\n        }\r\n    }\r\n}\r\n","@use 'sass:map';\r\n@use 'sass:meta';\r\n@use 'sass:color';\r\n@use '../../base' as *;\r\n@use '../../themes/schemas' as *;\r\n@use 'igniteui-theming/sass/animations/easings' as *;\r\n\r\n////\r\n/// @group themes\r\n/// @access public\r\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\r\n////\r\n\r\n/// Chip Theme\r\n/// @param {Map} $schema [$light-material-schema] - The schema used as basis for styling the component.\r\n/// @param {Map} $elevations [null] - The elevations (shadows) map to be used.\r\n/// @param {List} $border-radius [null] - The chip border-radius.\r\n///\r\n/// @param {Color} $text-color [null] - The chip text color.\r\n/// @param {Color} $background [null] - The chip background color.\r\n/// @param {Color} $border-color [null] - The chip border color.\r\n///\r\n/// @param {Color} $disabled-text-color [null] - The disabled chip text color.\r\n/// @param {Color} $disabled-background [null] - The disabled chip background color.\r\n/// @param {Color} $disabled-border-color [null] - The disabled chip border color.\r\n///\r\n/// @param {Color} $ghost-background [null] - The chip ghost background color.\r\n/// @param {box-shadow} $ghost-shadow [null] - The chip ghost shadow.\r\n///\r\n/// @param {Color} $hover-text-color [null] - The chip text hover color.\r\n/// @param {Color} $hover-background [null] - The chip hover background color.\r\n/// @param {Color} $hover-border-color [null] - The chip hover border color.\r\n///\r\n/// @param {Color} $focus-text-color [null] - The chip text focus color.\r\n/// @param {Color} $focus-background [null] - The chip focus background color.\r\n/// @param {color} $focus-border-color [null] - The chip focus border color.\r\n///\r\n/// @param {color} $selected-text-color [null] - The selected chip text color.\r\n/// @param {color} $selected-background [null] - The selected chip background color.\r\n/// @param {color} $selected-border-color [null] The selected chip border color.\r\n///\r\n/// @param {color} $hover-selected-text-color [null] - The selected chip hover text color.\r\n/// @param {color} $hover-selected-background [null] - The selected chip hover background color.\r\n/// @param {color} $hover-selected-border-color [null] - The selected chip hover border color.\r\n///\r\n/// @param {color} $focus-selected-text-color [null] - The selected chip text focus color.\r\n/// @param {color} $focus-selected-background [null] - The selected chip focus background color.\r\n/// @param {color} $focus-selected-border-color [null] - The selected chip focus border color.\r\n///\r\n/// @param {color} $remove-icon-color [null] - The remove icon color for the chip.\r\n/// @param {color} $remove-icon-color-focus [null] - The remove icon color on focus for the chip.\r\n///\r\n/// @requires $light-material-schema\r\n///\r\n/// @example scss Change the background color\r\n///   $my-chip-theme: igx-chip-theme($background: black);\r\n///   // Pass the theme to the css-vars mixin\r\n///   @include css-vars($my-chip-theme);\r\n@function chip-theme(\r\n    $schema: $light-material-schema,\r\n    $elevations: null,\r\n    $border-radius: null,\r\n\r\n    $text-color: null,\r\n    $background: null,\r\n    $border-color: null,\r\n    $ghost-background: null,\r\n\r\n    $disabled-text-color: null,\r\n    $disabled-background: null,\r\n    $disabled-border-color: null,\r\n\r\n    $hover-text-color: null,\r\n    $hover-background: null,\r\n    $hover-border-color: null,\r\n\r\n    $focus-text-color: null,\r\n    $focus-background: null,\r\n    $focus-border-color: null,\r\n    $focus-outline-color: null,\r\n\r\n    $selected-text-color: null,\r\n    $selected-background: null,\r\n    $selected-border-color: null,\r\n\r\n    $hover-selected-text-color: null,\r\n    $hover-selected-background: null,\r\n    $hover-selected-border-color: null,\r\n\r\n    $focus-selected-text-color: null,\r\n    $focus-selected-background: null,\r\n    $focus-selected-border-color: null,\r\n    $focus-selected-outline-color: null,\r\n\r\n    $ghost-shadow: null,\r\n    $remove-icon-color: null,\r\n    $remove-icon-color-focus: null,\r\n) {\r\n    $name: 'igx-chip';\r\n    $selector: 'igx-chip, .igx-chip__ghost, .igx-chip__ghost--compact, .igx-chip__ghost--cosy';\r\n    $chip-schema: ();\r\n\r\n    @if map.has-key($schema, 'chip') {\r\n        $chip-schema: map.get($schema, 'chip');\r\n    } @else {\r\n        $chip-schema: $schema;\r\n    }\r\n\r\n    $theme: digest-schema($chip-schema);\r\n    $meta: map.get($theme, '_meta');\r\n\r\n    @if not($text-color) and $background {\r\n        $text-color: text-contrast($background);\r\n    }\r\n\r\n    @if not($hover-background) and $background {\r\n        $luminance: luminance($background);\r\n\r\n        @if meta.type-of($luminance) == 'color' and $luminance + .05 < .5 {\r\n            $hover-background: color.scale($background, $lightness: 14%);\r\n        } @else {\r\n            $hover-background: color.scale($background, $lightness: -4%);\r\n        }\r\n    }\r\n\r\n    @if not($hover-text-color) and $hover-background {\r\n        $hover-text-color: text-contrast(to-opaque($hover-background));\r\n    }\r\n\r\n    @if not($focus-background) and $background {\r\n        $luminance: luminance($background);\r\n\r\n        @if meta.type-of($luminance) == 'color' and $luminance + .05 < .5 {\r\n            $focus-background: color.scale($background, $lightness: 22%);\r\n        } @else {\r\n            $focus-background: color.scale($background, $lightness: -8%);\r\n        }\r\n    }\r\n\r\n    @if not($focus-text-color) and $focus-background {\r\n        $focus-text-color: text-contrast(to-opaque($focus-background));\r\n    }\r\n\r\n    @if not($selected-background) and $background {\r\n        $luminance: luminance($background);\r\n\r\n        @if meta.type-of($luminance) == 'color' and $luminance + .05 < .5 {\r\n            $selected-background: color.scale($background, $lightness: 22%);\r\n        } @else {\r\n            $selected-background: color.scale($background, $lightness: -8%);\r\n        }\r\n    }\r\n\r\n    @if not($selected-text-color) and $selected-background {\r\n        $selected-text-color: text-contrast(to-opaque($selected-background));\r\n    }\r\n\r\n    @if not($hover-selected-background) and $hover-background {\r\n        $hover-selected-background: $hover-background;\r\n    }\r\n\r\n    @if not($hover-selected-text-color) and $hover-selected-background {\r\n        $hover-selected-text-color: text-contrast(to-opaque($hover-selected-background));\r\n    }\r\n\r\n    @if not($focus-selected-background) and $selected-background {\r\n        $luminance: luminance($selected-background);\r\n\r\n        @if meta.type-of($luminance) == 'color' and $luminance + .05 < .5 {\r\n            $focus-selected-background: color.scale($background, $lightness: 32%);\r\n        } @else {\r\n            $focus-selected-background: color.scale($background, $lightness: -16%);\r\n        }\r\n    }\r\n\r\n    @if not($focus-selected-text-color) and $focus-selected-background {\r\n        $focus-selected-text-color: text-contrast(to-opaque($focus-selected-background));\r\n    }\r\n\r\n    @if not($hover-border-color) and $border-color {\r\n        $hover-border-color: $border-color;\r\n    }\r\n\r\n    @if not($focus-border-color) and $border-color {\r\n        $focus-border-color: $border-color;\r\n    }\r\n\r\n    @if not($selected-border-color) and $border-color {\r\n        $selected-border-color: $border-color;\r\n    }\r\n\r\n    @if not($hover-selected-border-color) and $border-color {\r\n        $hover-selected-border-color: $border-color;\r\n    }\r\n\r\n    @if not($focus-selected-border-color) and $border-color {\r\n        $focus-selected-border-color: $border-color;\r\n    }\r\n\r\n    @if not($ghost-shadow) {\r\n        $ghost-elevation: map.get($chip-schema, 'ghost-elevation');\r\n        $ghost-shadow: elevation($ghost-elevation);\r\n    }\r\n\r\n    @if not($border-radius) {\r\n        $border-radius: border-radius(map.get($theme, 'border-radius')...);\r\n    }\r\n\r\n    @return extend($theme, (\r\n        name: $name,\r\n        selector: $selector,\r\n        border-radius: $border-radius,\r\n\r\n        text-color: $text-color,\r\n        background: $background,\r\n        border-color: $border-color,\r\n        ghost-background: $ghost-background,\r\n\r\n        disabled-text-color: $disabled-text-color,\r\n        disabled-background: $disabled-background,\r\n        disabled-border-color: $disabled-border-color,\r\n\r\n        hover-text-color: $hover-text-color,\r\n        hover-background: $hover-background,\r\n        hover-border-color: $hover-border-color,\r\n\r\n        focus-text-color: $focus-text-color,\r\n        focus-background: $focus-background,\r\n        focus-border-color: $focus-border-color,\r\n\r\n        selected-text-color: $selected-text-color,\r\n        selected-background: $selected-background,\r\n        selected-border-color: $selected-border-color,\r\n\r\n        hover-selected-text-color: $hover-selected-text-color,\r\n        hover-selected-background: $hover-selected-background,\r\n        hover-selected-border-color: $hover-selected-border-color,\r\n\r\n        focus-selected-text-color: $focus-selected-text-color,\r\n        focus-selected-background: $focus-selected-background,\r\n        focus-selected-border-color: $focus-selected-border-color,\r\n\r\n        ghost-shadow: $ghost-shadow,\r\n        remove-icon-color: $remove-icon-color,\r\n        remove-icon-color-focus: $remove-icon-color-focus,\r\n        focus-selected-outline-color: $focus-selected-outline-color,\r\n        focus-outline-color: $focus-outline-color,\r\n        _meta: map.merge(if($meta, $meta, ()), (\r\n            variant: map.get($schema, '_meta', 'theme')\r\n        )),\r\n    ));\r\n}\r\n\r\n/// @param {Map} $theme - The theme used to style the component.\r\n@mixin chip($theme) {\r\n    @include css-vars($theme);\r\n    $transition: all 120ms $in-out-quad;\r\n    $chip-max-width: 32ch;\r\n\r\n    $variant: map.get($theme, '_meta', 'variant');\r\n\r\n    $chip-height: (\r\n        comfortable: rem(32px),\r\n        cosy: rem(24px),\r\n        compact: rem(20px)\r\n    );\r\n\r\n    $chip-padding: (\r\n        comfortable: rem(12px),\r\n        cosy: rem(6px),\r\n        compact: rem(2px)\r\n    );\r\n\r\n    $box-shadow-focus: map.get((\r\n        material: null,\r\n        fluent: null,\r\n        bootstrap: 0 0 0 rem(2px) var-get($theme, 'focus-outline-color'),\r\n        indigo-design: 0 0 0 rem(3px) var-get($theme, 'focus-outline-color')\r\n    ), $variant);\r\n\r\n    $box-shadow-focus-selected: map.get((\r\n        material: null,\r\n        fluent: null,\r\n        bootstrap: 0 0 0 rem(2px) var-get($theme, 'focus-selected-outline-color'),\r\n        indigo-design: 0 0 0 rem(3px) var-get($theme, 'focus-selected-outline-color')\r\n    ), $variant);\r\n\r\n    $border-size: rem(1px);\r\n\r\n    %igx-chip-area {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: flex-start;\r\n        flex-wrap: wrap;\r\n        width: 100%;\r\n\r\n        &:empty {\r\n            display: none;\r\n        }\r\n    }\r\n\r\n    %igx-chip {\r\n        position: relative;\r\n        display: inline-flex;\r\n        flex-shrink: 0;\r\n        transition: $transition;\r\n        transition-property: top, left;\r\n\r\n        // Fix: The grid resizing does not autosize the filter header cells with the default filter chips\r\n        // https://github.com/IgniteUI/igniteui-angular/pull/12770/files/efd2a274038c051e82561903f8799fd03265fd74#r1150993630\r\n        min-width: max-content;\r\n\r\n        [dir='rtl'] & {\r\n            transition-property: top right;\r\n        }\r\n\r\n        touch-action: none;\r\n        outline: none;\r\n\r\n        // The focus and hover are build that way since the host is the focusable element\r\n\r\n        &:hover {\r\n            %igx-chip__item {\r\n                color: var-get($theme, 'hover-text-color');\r\n                background: var-get($theme, 'hover-background');\r\n                border-color: var-get($theme, 'hover-border-color');\r\n            }\r\n\r\n            %igx-chip__item--selected {\r\n                color: var-get($theme, 'hover-selected-text-color');\r\n                background: var-get($theme, 'hover-selected-background');\r\n                border-color: var-get($theme, 'hover-selected-border-color');\r\n            }\r\n        }\r\n\r\n        &:focus {\r\n            %igx-chip__item {\r\n                outline-style: none;\r\n                color: var-get($theme, 'focus-text-color');\r\n                background: var-get($theme, 'focus-background');\r\n                border-color: var-get($theme, 'focus-border-color');\r\n                box-shadow: $box-shadow-focus;\r\n            }\r\n\r\n            %igx-chip__item--selected {\r\n                color: var-get($theme, 'focus-selected-text-color');\r\n                background: var-get($theme, 'focus-selected-background');\r\n                border-color: var-get($theme, 'focus-selected-border-color');\r\n                transition: $transition;\r\n                box-shadow: $box-shadow-focus-selected;\r\n            }\r\n        }\r\n\r\n        @if $variant == 'indigo-design' {\r\n            &:focus:hover {\r\n                %igx-chip__item {\r\n                    color: var-get($theme, 'hover-text-color');\r\n                    background: var-get($theme, 'hover-background');\r\n                    border-color: var-get($theme, 'hover-border-color');\r\n                }\r\n\r\n                %igx-chip__item--selected {\r\n                    color: var-get($theme, 'hover-selected-text-color');\r\n                    background: var-get($theme, 'hover-selected-background');\r\n                    border-color: var-get($theme, 'hover-selected-border-color');\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    %igx-chip__item {\r\n        display: grid;\r\n        grid-template-columns: minmax(0, auto) 1fr minmax(0, auto);\r\n        align-items: center;\r\n        justify-content: center;\r\n        text-align: center;\r\n        flex: 1 1 auto;\r\n        height: sizable(map.get($chip-height, 'compact'), map.get($chip-height, 'cosy'), map.get($chip-height, 'comfortable'));\r\n        padding-inline: sizable(map.get($chip-padding, 'compact'), map.get($chip-padding, 'cosy'), map.get($chip-padding, 'comfortable'));\r\n        gap: sizable(rem(3px), rem(6px), rem(8px));\r\n        color: var-get($theme, 'text-color');\r\n        background: var-get($theme, 'background');\r\n        border: $border-size solid var-get($theme, 'border-color');\r\n        border-radius: var-get($theme, 'border-radius');\r\n        user-select: none;\r\n        overflow: hidden;\r\n        cursor: pointer;\r\n        //hacking overflow hidden with border radius\r\n        // not playing nicely together\r\n        filter: opacity(1);\r\n        transition: all 120ms ease-in;\r\n\r\n        igx-avatar {\r\n            display: flex !important;\r\n            align-items: center;\r\n            justify-content: center;\r\n            font-size: 50%;\r\n        }\r\n\r\n        igx-avatar,\r\n        igx-circular-bar {\r\n            --component-size: 3;\r\n\r\n            $avatar-size: (\r\n                comfortable: rem(24px),\r\n                cosy: rem(18),\r\n                compact: rem(14px)\r\n            );\r\n            max-width: 100%;\r\n            max-height: 100%;\r\n            width: sizable(rem(14px), rem(18px), rem(24px));\r\n            height: sizable(rem(14px), rem(18px), rem(24px));\r\n        }\r\n\r\n        @extend  %igx-chip-custom-icon;\r\n\r\n        igx-prefix,\r\n        [igxPrefix] {\r\n            @extend %igx-chip__prefix;\r\n        }\r\n\r\n        igx-suffix,\r\n        [igxSuffix] {\r\n            @extend %igx-chip__suffix;\r\n        }\r\n    }\r\n\r\n    %igx-chip__item--cosy {\r\n        igx-avatar {\r\n            --component-size: 2;\r\n        }\r\n    }\r\n\r\n    %igx-chip__item--compact {\r\n        igx-avatar {\r\n            --component-size: 1;\r\n        }\r\n    }\r\n\r\n    %igx-chip__item--selected {\r\n        color: var-get($theme, 'selected-text-color');\r\n        background: var-get($theme, 'selected-background');\r\n        border-color: var-get($theme, 'selected-border-color');\r\n        transition: $transition;\r\n    }\r\n\r\n    %igx-chip__item--primary {\r\n        @if $variant == 'bootstrap' {\r\n            color: contrast-color($color: 'primary', $variant: 600);\r\n        } @else {\r\n            color: contrast-color($color: 'primary', $variant: 500);\r\n        }\r\n        background: color($color: 'primary', $variant: 500);\r\n        border-color: color($color: 'primary', $variant: 500);\r\n    }\r\n\r\n    %igx-chip%igx-chip--primary {\r\n        &:hover {\r\n            %igx-chip__item {\r\n                @if $variant == 'indigo-design' {\r\n                    color: contrast-color($color: 'primary', $variant: 400);\r\n                    background: color($color: 'primary', $variant: 400);\r\n                    border-color: color($color: 'primary', $variant: 400);\r\n                } @else {\r\n                    color: contrast-color($color: 'primary', $variant: 600);\r\n                    background: color($color: 'primary', $variant: 600);\r\n                    border-color: color($color: 'primary', $variant: 600);\r\n                }\r\n            }\r\n        }\r\n\r\n        &:focus {\r\n            %igx-chip__item {\r\n                color: contrast-color($color: 'primary', $variant: 800);\r\n                background: color($color: 'primary', $variant: 800);\r\n                border-color: color($color: 'primary', $variant: 800);\r\n\r\n                @if $variant == 'indigo-design' {\r\n                    color: contrast-color($color: 'primary', $variant: 500);\r\n                    background: color($color: 'primary', $variant: 500);\r\n                    border-color: color($color: 'primary', $variant: 500);\r\n                    box-shadow: 0 0 0 rem(3px) color($color: 'primary', $variant: 200);\r\n                }\r\n\r\n                @if $variant == 'bootstrap' {\r\n                    box-shadow: 0 0 0 rem(2px) color($color: 'primary', $variant: 200);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    %igx-chip__item--info {\r\n        color: contrast-color($color: 'info', $variant: 500);\r\n        background: color($color: 'info', $variant: 500);\r\n        border-color: color($color: 'info', $variant: 500);\r\n    }\r\n\r\n    %igx-chip%igx-chip--info {\r\n        &:hover {\r\n            %igx-chip__item {\r\n                @if $variant == 'indigo-design' {\r\n                    color: contrast-color($color: 'info', $variant: 400);\r\n                    background: color($color: 'info', $variant: 400);\r\n                    border-color: color($color: 'info', $variant: 400);\r\n                } @else {\r\n                    color: contrast-color($color: 'info', $variant: 600);\r\n                    background: color($color: 'info', $variant: 600);\r\n                    border-color: color($color: 'info', $variant: 600);\r\n                }\r\n            }\r\n        }\r\n\r\n        &:focus {\r\n            %igx-chip__item {\r\n                color: contrast-color($color: 'info', $variant: 800);\r\n                background: color($color: 'info', $variant: 800);\r\n                border-color: color($color: 'info', $variant: 800);\r\n\r\n                @if $variant == 'indigo-design' {\r\n                    color: contrast-color($color: 'info', $variant: 500);\r\n                    background: color($color: 'info', $variant: 500);\r\n                    border-color: color($color: 'info', $variant: 500);\r\n                    box-shadow: 0 0 0 rem(3px) color($color: 'info', $variant: 200);\r\n                }\r\n\r\n                @if $variant == 'bootstrap' {\r\n                    box-shadow: 0 0 0 rem(2px) color($color: 'info', $variant: 200);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    %igx-chip__item--success {\r\n        @if $variant == 'bootstrap' {\r\n            color: contrast-color($color: 'success', $variant: 600);\r\n        } @else {\r\n            color: contrast-color($color: 'success', $variant: 500);\r\n        }\r\n        background: color($color: 'success', $variant: 500);\r\n        border-color: color($color: 'success', $variant: 500);\r\n    }\r\n\r\n    %igx-chip%igx-chip--success {\r\n        &:hover {\r\n            %igx-chip__item {\r\n                @if $variant == 'indigo-design' {\r\n                    color: contrast-color($color: 'success', $variant: 400);\r\n                    background: color($color: 'success', $variant: 400);\r\n                    border-color: color($color: 'success', $variant: 400);\r\n                } @else {\r\n                    color: contrast-color($color: 'success', $variant: 600);\r\n                    background: color($color: 'success', $variant: 600);\r\n                    border-color: color($color: 'success', $variant: 600);\r\n                }\r\n            }\r\n        }\r\n\r\n        &:focus {\r\n            %igx-chip__item {\r\n                color: contrast-color($color: 'success', $variant: 800);\r\n                background: color($color: 'success', $variant: 800);\r\n                border-color: color($color: 'success', $variant: 800);\r\n\r\n                @if $variant == 'indigo-design' {\r\n                    color: contrast-color($color: 'success', $variant: 500);\r\n                    background: color($color: 'success', $variant: 500);\r\n                    border-color: color($color: 'success', $variant: 500);\r\n                    box-shadow: 0 0 0 rem(3px) color($color: 'success', $variant: 200);\r\n                }\r\n\r\n                @if $variant == 'bootstrap' {\r\n                    box-shadow: 0 0 0 rem(2px) color($color: 'success', $variant: 200);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    %igx-chip__item--warning {\r\n        color: contrast-color($color: 'warn', $variant: 500);\r\n        background: color($color: 'warn', $variant: 500);\r\n        border-color: color($color: 'warn', $variant: 500);\r\n    }\r\n\r\n    %igx-chip%igx-chip--warning {\r\n        &:hover {\r\n            %igx-chip__item {\r\n                @if $variant == 'indigo-design' {\r\n                    color: contrast-color($color: 'warn', $variant: 400);\r\n                    background: color($color: 'warn', $variant: 400);\r\n                    border-color: color($color: 'warn', $variant: 400);\r\n                } @else {\r\n                    color: contrast-color($color: 'warn', $variant: 600);\r\n                    background: color($color: 'warn', $variant: 600);\r\n                    border-color: color($color: 'warn', $variant: 600);\r\n                }\r\n            }\r\n        }\r\n\r\n        &:focus {\r\n            %igx-chip__item {\r\n                color: contrast-color($color: 'warn', $variant: 800);\r\n                background: color($color: 'warn', $variant: 800);\r\n                border-color: color($color: 'warn', $variant: 800);\r\n\r\n                @if $variant == 'indigo-design' {\r\n                    color: contrast-color($color: 'warn', $variant: 500);\r\n                    background: color($color: 'warn', $variant: 500);\r\n                    border-color: color($color: 'warn', $variant: 500);\r\n                    box-shadow: 0 0 0 rem(3px) color($color: 'warn', $variant: 200);\r\n                }\r\n\r\n                @if $variant == 'bootstrap' {\r\n                    box-shadow: 0 0 0 rem(2px) color($color: 'warn', $variant: 200);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    %igx-chip__item--danger {\r\n        @if $variant == 'bootstrap' {\r\n            color: contrast-color($color: 'error', $variant: 600);\r\n        } @else {\r\n            color: contrast-color($color: 'error', $variant: 500);\r\n        }\r\n        background: color($color: 'error', $variant: 500);\r\n        border-color: color($color: 'error', $variant: 500);\r\n    }\r\n\r\n    %igx-chip%igx-chip--danger {\r\n        &:hover {\r\n            %igx-chip__item {\r\n                @if $variant == 'indigo-design' {\r\n                    color: contrast-color($color: 'error', $variant: 400);\r\n                    background: color($color: 'error', $variant: 400);\r\n                    border-color: color($color: 'error', $variant: 400);\r\n                } @else {\r\n                    color: contrast-color($color: 'error', $variant: 600);\r\n                    background: color($color: 'error', $variant: 600);\r\n                    border-color: color($color: 'error', $variant: 600);\r\n                }\r\n            }\r\n        }\r\n\r\n        &:focus {\r\n            %igx-chip__item {\r\n                color: contrast-color($color: 'error', $variant: 800);\r\n                background: color($color: 'error', $variant: 800);\r\n                border-color: color($color: 'error', $variant: 800);\r\n\r\n                @if $variant == 'indigo-design' {\r\n                    color: contrast-color($color: 'error', $variant: 500);\r\n                    background: color($color: 'error', $variant: 500);\r\n                    border-color: color($color: 'error', $variant: 500);\r\n                    box-shadow: 0 0 0 rem(3px) color($color: 'error', $variant: 200);\r\n                }\r\n\r\n                @if $variant == 'bootstrap' {\r\n                    box-shadow: 0 0 0 rem(2px) color($color: 'error', $variant: 200);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    %igx-chip__start {\r\n        igx-avatar,\r\n        igx-circular-bar {\r\n            &:first-child {\r\n                margin-inline-start: calc(#{sizable(rem(0), rem(4px), rem(8px))} * -1);\r\n            }\r\n        }\r\n    }\r\n\r\n    %igx-chip__end {\r\n        igx-avatar,\r\n        igx-circular-bar {\r\n            &:last-child {\r\n                margin-inline-end: calc(#{sizable(rem(0), rem(4px), rem(8px))} * -1);\r\n            }\r\n        }\r\n    }\r\n\r\n    %igx-chip__start,\r\n    %igx-chip__end {\r\n        display: flex;\r\n        align-items: center;\r\n        position: relative;\r\n\r\n        &:empty {\r\n            display: none;\r\n        }\r\n    }\r\n\r\n    %igx-chip-custom-icon {\r\n        igx-icon {\r\n            width: sizable(rem(16px), rem(20px), rem(20px));\r\n            height: sizable(rem(16px), rem(20px), rem(20px));\r\n            font-size: sizable(rem(16px), rem(20px), rem(20px));\r\n            outline-style: none;\r\n        }\r\n    }\r\n\r\n    %igx-chip__prefix,\r\n    %igx-chip__suffix {\r\n        @include ellipsis();\r\n        display: inline-block;\r\n        vertical-align: middle;\r\n        max-width: $chip-max-width;\r\n\r\n        > igx-icon {\r\n            display: block;\r\n        }\r\n    }\r\n\r\n    %igx-chip__content {\r\n        @include ellipsis();\r\n\r\n        grid-column: 2 / 3;\r\n        max-width: $chip-max-width;\r\n\r\n        &:empty {\r\n            display: none;\r\n        }\r\n    }\r\n\r\n    %igx-chip__remove {\r\n        display: inline-flex;\r\n        color: var-get($theme, 'remove-icon-color', currentColor);\r\n\r\n        &:empty {\r\n            display: none;\r\n        }\r\n\r\n        // FIX IE11 and Edge focus styles.\r\n        // [focus-within] is not supported by IE & Edge.\r\n        &:focus {\r\n            igx-icon {\r\n                color: var-get($theme, 'remove-icon-color-focus');\r\n            }\r\n        }\r\n\r\n        igx-icon {\r\n            &:focus{\r\n                outline-style: none;\r\n            }\r\n        }\r\n    }\r\n\r\n    %igx-chip__select {\r\n        display: inline-flex;\r\n        align-items: center;\r\n        opacity: 1;\r\n        z-index: 1;\r\n        transition: opacity 120ms $out-quad, width 120ms $out-quad;\r\n\r\n        > * {\r\n            width: inherit !important;\r\n        }\r\n    }\r\n\r\n    %igx-chip__ghost {\r\n        position: absolute;\r\n        box-shadow: var-get($theme, 'ghost-shadow');\r\n        overflow: hidden;\r\n        color: var-get($theme, 'focus-text-color');\r\n        background: var-get($theme, 'ghost-background');\r\n\r\n        &:hover,\r\n        &:focus {\r\n            background: var-get($theme, 'ghost-background');\r\n        }\r\n    }\r\n\r\n    %igx-chip__ghost--cosy {\r\n        height: map.get($chip-height, 'cosy');\r\n\r\n        %igx-chip__content {\r\n            padding-inline: map.get($chip-padding, 'cosy');\r\n        }\r\n    }\r\n\r\n    %igx-chip--disabled {\r\n        cursor: default;\r\n        pointer-events: none;\r\n\r\n\r\n        @if $variant == 'indigo-design' {\r\n            &%igx-chip--primary {\r\n                %igx-chip__item {\r\n                    color: contrast-color($color: 'primary', $variant: 400);\r\n                    background: color($color: 'primary', $variant: 200);\r\n                    border-color: color($color: 'primary', $variant: 200);\r\n                }\r\n            }\r\n\r\n            &%igx-chip--info {\r\n                %igx-chip__item {\r\n                    color: contrast-color($color: 'info', $variant: 400);\r\n                    background: color($color: 'info', $variant: 200);\r\n                    border-color: color($color: 'info', $variant: 200);\r\n                }\r\n            }\r\n\r\n            &%igx-chip--success {\r\n                %igx-chip__item {\r\n                    color: contrast-color($color: 'success', $variant: 800);\r\n                    background: color($color: 'success', $variant: 200);\r\n                    border-color: color($color: 'success', $variant: 200);\r\n                }\r\n            }\r\n\r\n            &%igx-chip--warning {\r\n                %igx-chip__item {\r\n                    color: contrast-color($color: 'warn', $variant: 900);\r\n                    background: color($color: 'warn', $variant: 200);\r\n                    border-color: color($color: 'warn', $variant: 200);\r\n                }\r\n            }\r\n\r\n            &%igx-chip--danger {\r\n                %igx-chip__item {\r\n                    color: contrast-color($color: 'error', $variant: 400);\r\n                    background: color($color: 'error', $variant: 200);\r\n                    border-color: color($color: 'error', $variant: 200);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    %igx-chip__item--disabled {\r\n        color: var-get($theme, 'disabled-text-color');\r\n        background: var-get($theme, 'disabled-background');\r\n        border-color: var-get($theme, 'disabled-border-color');\r\n    }\r\n\r\n    // Remark: If z-index is not set, the chip would\r\n    // hide behind it's parent grid as it has a z-index of 1\r\n    %igx-chip__ghost,\r\n    %igx-chip__ghost--cosy,\r\n    %igx-chip__ghost--compact {\r\n        z-index: 10;\r\n    }\r\n}\r\n\r\n/// Adds typography styles for the igx-chip component.\r\n/// Uses the 'body-2'\r\n/// category from the typographic scale.\r\n/// @group typography\r\n/// @param {Map} $categories [(text: 'body-2')] - The categories from the typographic scale used for type styles.\r\n@mixin chip-typography(\r\n    $categories: (text: 'body-2'))\r\n{\r\n    $text: map.get($categories, 'text');\r\n\r\n    %igx-chip__item {\r\n        @include type-style($text);\r\n    }\r\n}\r\n","@use 'sass:map';\r\n@use '../../base' as *;\r\n@use '../../themes/schemas' as *;\r\n\r\n////\r\n/// @group themes\r\n/// @access public\r\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\r\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\r\n////\r\n\r\n/// Column actions Theme\r\n/// @param {Map} $schema [$light-material-schema] - The schema used as basis for styling the component.\r\n/// @param {Map} $elevations [null] - The elevations (shadows) map to be used.\r\n/// @param {Color} $title-color [null]- The text color used for the title of the list.\r\n/// @param {Color} $background-color [null] - The background color of the panel.\r\n///\r\n/// @requires $light-material-schema\r\n///\r\n/// @example scss Change the title color\r\n///   $column-actions-theme: igx-column-actions-theme($title-color: black);\r\n///   // Pass the theme to the css-vars mixin\r\n///   @include css-vars($column-actions-theme);\r\n////\r\n@function column-actions-theme(\r\n    $schema: $light-material-schema,\r\n    $elevations: null,\r\n\r\n    $title-color: null,\r\n    $background-color: null\r\n) {\r\n    $name: 'igx-column-actions';\r\n    $column-actions-schema: ();\r\n\r\n    @if map.has-key($schema, 'column-actions') {\r\n        $column-actions-schema: map.get($schema, 'column-actions');\r\n    } @else {\r\n        $column-actions-schema: $schema;\r\n    }\r\n\r\n    $theme: digest-schema($column-actions-schema);\r\n\r\n    @if not($title-color) and $background-color {\r\n        $title-color: text-contrast($background-color);\r\n    }\r\n\r\n    @return extend($theme, (\r\n        name: $name,\r\n        elevations: $elevations,\r\n        title-color: $title-color,\r\n        background-color: $background-color\r\n    ));\r\n}\r\n\r\n/// @param {Map} $theme - The theme used to style the component.\r\n@mixin column-actions($theme) {\r\n    @include css-vars($theme);\r\n\r\n    %column-actions-display {\r\n        display: flex;\r\n        flex-flow: column nowrap;\r\n        background: var-get($theme, 'background-color');\r\n        box-shadow: elevation(8);\r\n        width: 100%;\r\n        flex: 1 1 auto;\r\n        min-width: rem(180px);\r\n    }\r\n\r\n    %column-actions-title {\r\n        color: var-get($theme, 'title-color');\r\n        margin: 0;\r\n        padding: rem(16px) rem(16px) rem(8px);\r\n    }\r\n\r\n    %column-actions-input {\r\n        font-size: rem(16px) !important;\r\n        margin: rem(-16px) 0 0 !important;\r\n        padding: rem(8px) rem(16px);\r\n    }\r\n\r\n    %column-actions-columns {\r\n        display: flex;\r\n        flex-flow: column nowrap;\r\n        overflow-y: auto;\r\n        outline-style: none;\r\n    }\r\n\r\n    %column-actions-item {\r\n        padding: rem(4px) rem(16px);\r\n        min-height: rem(32px);\r\n    }\r\n\r\n    %column-actions-buttons {\r\n        display: flex;\r\n        justify-content: flex-end;\r\n        padding: rem(8px) rem(16px);\r\n    }\r\n}\r\n\r\n/// Adds typography styles for the igx-column-actions component.\r\n/// Uses the 'subtitle-1'\r\n/// category from the typographic scale.\r\n/// @group typography\r\n/// @param {Map} $categories [(title: 'subtitle-1')] - The categories from the typographic scale used for type styles.\r\n@mixin column-actions-typography($categories: (title: 'subtitle-1')) {\r\n    $title: map.get($categories, 'title');\r\n\r\n    %column-actions-title {\r\n        @include type-style($title) {\r\n            margin: 0;\r\n        }\r\n    }\r\n}\r\n","@use 'sass:map';\r\n@use 'sass:meta';\r\n@use '../../base' as *;\r\n@use '../../themes/schemas' as *;\r\n\r\n////\r\n/// @group themes\r\n/// @access public\r\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\r\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\r\n////\r\n\r\n/// Dialog Theme\r\n/// @param {Map} $schema [$light-material-schema] - The schema used as basis for styling the component.\r\n/// @param {Map} $elevations [null] - The elevations (shadows) map to be used.\r\n/// @param {Color} $background [null] - The dialog background color.\r\n/// @param {Color} $title-color [null] - The dialog title text color.\r\n/// @param {Color} $message-color [null] - The dialog message text color.\r\n/// @param {box-shadow} $shadow [null] - The shadow used for the dialog.\r\n/// @param {List} $border-radius [null] - The border radius used for dialog component.\r\n/// @param {Color} $border-color [null] - The border color used for dialog component.\r\n/// @requires $light-material-schema\r\n/// @example scss Change the background color\r\n///   $my-dialog-theme: dialog-theme($background: black);\r\n///   // Pass the theme to the css-vars() mixin\r\n///   @include css-vars($my-dialog-theme);\r\n@function dialog-theme(\r\n    $schema: $light-material-schema,\r\n    $elevations: null,\r\n\r\n    $border-radius: null,\r\n    $border-color: null,\r\n\r\n    $background: null,\r\n    $title-color: null,\r\n    $message-color: null,\r\n    $shadow: null,\r\n) {\r\n    $name: 'igx-dialog';\r\n    $selector: '.igx-dialog';\r\n\r\n    $dialog-schema: ();\r\n\r\n    @if map.has-key($schema, 'dialog') {\r\n        $dialog-schema: map.get($schema, 'dialog');\r\n    } @else {\r\n        $dialog-schema: $schema;\r\n    }\r\n\r\n    $theme: digest-schema($dialog-schema);\r\n    $meta: map.get($theme, '_meta');\r\n\r\n    @if not($title-color) and $background{\r\n        $title-color: text-contrast($background);\r\n    }\r\n\r\n    @if not($message-color) and $background{\r\n        @if meta.type-of($background) == 'color' {\r\n            $message-color: rgba(text-contrast($background), .8);\r\n        }\r\n    }\r\n\r\n    @if not($shadow) {\r\n        $elevation: map.get($dialog-schema, 'elevation');\r\n        $shadow: elevation($elevation);\r\n    }\r\n\r\n    @if not($border-radius) {\r\n        $border-radius: border-radius(map.get($theme, 'border-radius')...);\r\n    }\r\n\r\n    @return extend($theme, (\r\n        name: $name,\r\n        selector: $selector,\r\n        border-radius: $border-radius,\r\n        background: $background,\r\n        title-color: $title-color,\r\n        message-color: $message-color,\r\n        shadow: $shadow,\r\n        border-color: $border-color,\r\n        _meta: map.merge(if($meta, $meta, ()), (\r\n            variant: map.get($schema, '_meta', 'theme')\r\n        )),\r\n    ));\r\n}\r\n\r\n/// @param {Map} $theme - The theme used to style the component.\r\n@mixin dialog($theme) {\r\n    @include css-vars($theme);\r\n\r\n    $variant: map.get($theme, '_meta', 'variant');\r\n    $bootstrap-theme: map.get($theme, variant) == 'bootstrap';\r\n\r\n    $dialog-min-width: map.get((\r\n        material: rem(280px),\r\n        fluent: rem(288px),\r\n        bootstrap: rem(288px),\r\n    ), $variant);\r\n\r\n    $dialog-title-padding: map.get((\r\n        material: rem(24px) rem(24px) rem(12px) rem(24px),\r\n        fluent: rem(16px) rem(24px) rem(24px) rem(24px),\r\n        bootstrap: rem(16px),\r\n        indigo-design: rem(16px) rem(24px),\r\n    ), $variant);\r\n\r\n    $dialog-message-padding: map.get((\r\n        material: rem(12px) rem(24px),\r\n        fluent: 0 rem(24px) rem(20px) rem(24px),\r\n        bootstrap: rem(16px),\r\n        indigo-design: 0 rem(24px) rem(8px) rem(24px),\r\n    ), $variant);\r\n\r\n    $dialog-actions-padding: map.get((\r\n        material: rem(8px),\r\n        fluent: 0 rem(24px) rem(24px) rem(24px),\r\n        bootstrap: rem(16px),\r\n        indigo-design: rem(8px),\r\n    ), $variant);\r\n\r\n    %igx-dialog-display {\r\n        outline-style: none;\r\n    }\r\n\r\n    %igx-dialog--hidden {\r\n        display: none;\r\n    }\r\n\r\n    %igx-dialog-window {\r\n        position: relative;\r\n        min-width: $dialog-min-width;\r\n        border: rem(1px) solid var-get($theme, 'border-color');\r\n        border-radius: var-get($theme, 'border-radius');\r\n        background: var-get($theme, 'background');\r\n        box-shadow: var-get($theme, 'shadow');\r\n        overflow: hidden;\r\n\r\n        .igx-calendar {\r\n            min-width: rem(320px);\r\n        }\r\n\r\n        .igx-calendar--vertical {\r\n            min-width: rem(496px);\r\n        }\r\n    }\r\n\r\n    %igx-dialog-title {\r\n        display: flex;\r\n        color: var-get($theme, 'title-color');\r\n        padding: $dialog-title-padding;\r\n\r\n        @if $bootstrap-theme {\r\n            border-bottom: rem(1px) solid var-get($theme, 'border-color');\r\n        }\r\n    }\r\n\r\n    %igx-dialog-content {\r\n        color: var-get($theme, 'message-color');\r\n        padding: $dialog-message-padding;\r\n        // The 2 rules below are related to https://github.com/IgniteUI/igniteui-angular/issues/11300\r\n        position: relative;\r\n        z-index: 0;\r\n    }\r\n\r\n    %igx-dialog-message {\r\n        display: inline-block;\r\n        max-width: 40ch;\r\n\r\n        @media all and (-ms-high-contrast: none)\r\n        {\r\n            max-width: map.get((\r\n                material: 62ch,\r\n                fluent: 48ch,\r\n                bootstrap: 60ch,\r\n                indigo-design: 48ch,\r\n            ), $variant);\r\n        }\r\n    }\r\n\r\n    %igx-dialog-actions {\r\n        display: flex;\r\n        flex-flow: row nowrap;\r\n        justify-content: flex-end;\r\n        padding: $dialog-actions-padding;\r\n\r\n        @if $bootstrap-theme {\r\n            border-top: rem(1px) solid var-get($theme, 'border-color');\r\n        }\r\n\r\n        button + button {\r\n            margin-inline-start: rem(8px);\r\n        }\r\n    }\r\n}\r\n\r\n/// Adds typography styles for the igx-dialog component.\r\n/// Uses the 'h6' and 'body-1' category from the typographic scale.\r\n/// @group typography\r\n/// @param {Map} $categories [(title: 'h6', content: 'body-1')] - The categories from the typographic scale used for type styles.\r\n@mixin dialog-typography($categories: (\r\n    title: 'h6',\r\n    content: 'body-1')\r\n) {\r\n    $title: map.get($categories, 'title');\r\n    $content: map.get($categories, 'content');\r\n\r\n    %igx-dialog-title {\r\n        @include type-style($title) {\r\n            margin: 0;\r\n        }\r\n    }\r\n\r\n    %igx-dialog-content {\r\n        @include type-style($content) {\r\n            margin: 0;\r\n        }\r\n\r\n        > * {\r\n            letter-spacing: normal;\r\n        }\r\n    }\r\n}\r\n","@use 'sass:map';\r\n@use '../../base' as *;\r\n@use '../../themes/schemas' as *;\r\n\r\n////\r\n/// @group themes\r\n/// @access public\r\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\r\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\r\n////\r\n\r\n/// If only background color is specified, text/icon color will be assigned automatically to a contrasting color.\r\n/// @param {Map} $schema [$light-material-schema] - The schema used as basis for styling the component.\r\n/// @param {Color} $accent-color [null] - Sets the pinned header background color, the joystick background and border colors, as well as the context menu background color.\r\n/// @param {Color} $active-color [null] - Sets the active text and border colors for tabs, panes, and menus.\r\n/// @param {Color} $border-color [null] - Sets the global border color in the dock manager. Also sets the pane content background and the context menu active background colors.\r\n/// @param {Color} $button-text [null] - Sets the button text color.\r\n/// @param {Color} $context-menu-background [null] - Sets the background color for context menus.\r\n/// @param {Color} $context-menu-background-active [null] - Sets the background color for active context menus.\r\n/// @param {Color} $context-menu-color [null] - Sets the text color for context menus.\r\n/// @param {Color} $context-menu-color-active [null] - Sets the text color for active context menus.\r\n/// @param {Color} $dock-background [null] - Sets the background color of the dock manager.\r\n/// @param {Color} $dock-text [null] - Sets the text color of the dock manager.\r\n/// @param {Color} $drop-shadow-background [null] - Sets the drop-shadow background color.\r\n/// @param {Color} $floating-pane-border-color [null] - Sets the border color for floating panes.\r\n/// @param {Color} $flyout-shadow-color [null] - Sets the flyout shadow color.\r\n/// @param {Color} $joystick-background [null] - Sets the background color of the joystick.\r\n/// @param {Color} $joystick-background-active [null] - Sets the background color of the joysticks.\r\n/// @param {Color} $joystick-border-color [null] - Sets the border color of the joystick.\r\n/// @param {Color} $joystick-icon-color [null] - Sets the color for the joystick icons.\r\n/// @param {Color} $joystick-icon-color-active [null] - Sets the color of the active joystick icons.\r\n/// @param {Color} $pane-content-background [null] - Sets the background color of the content panes.\r\n/// @param {Color} $pane-content-text [null] - Sets the text color of the content panes.\r\n/// @param {Color} $pane-header-background [null] - Sets the background color for pane headers.\r\n/// @param {Color} $pane-header-text [null] - Sets the text color for pane headers.\r\n/// @param {Color} $pinned-header-background [null] - Sets the background colors of pinned headers.\r\n/// @param {Color} $pinned-header-text [null] - Sets the text colors of pinned headers.\r\n/// @param {Color} $background-color [null] - Sets the base dock manager color as well as the pane headers and tabs background colors.\r\n/// @param {Color} $splitter-background [null] - Sets the background color for the splitters.\r\n/// @param {Color} $splitter-handle [null] - Sets the background color for the splitter handles.\r\n/// @param {Color} $tab-background [null] - Sets the background color for tabs.\r\n/// @param {Color} $tab-background-active [null] - Sets the background color for active tabs.\r\n/// @param {Color} $tab-border-color [null] - Sets the border color for tabs.\r\n/// @param {Color} $tab-border-color-active [null] - Sets the border color for active tabs.\r\n/// @param {Color} $tab-text [null] - Sets the text color for tabs.\r\n/// @param {Color} $tab-text-active [null] - Sets the text color for active tabs.\r\n/// @param {Color} $text-color [null] - Sets the text color for most elements in the dock manager. Used as the default joystick icon color.\r\n/// @requires $light-material-schema\r\n/// @example scss Change the background and icon colors in icon dock-managers\r\n///   $my-dock-manager-theme: dock-manager-theme();\r\n///   // Pass the theme to the css-vars() mixin\r\n///   @include css-vars($my-dock-manager-theme);\r\n@function dock-manager-theme(\r\n    $schema: $light-material-schema,\r\n    $rest...\r\n) {\r\n    $name: 'igc-dockmanager';\r\n    $dock-manager-schema: ();\r\n\r\n    @if map.has-key($schema, 'dockmanager') {\r\n        $dock-manager-schema: map.get($schema, 'dockmanager');\r\n    } @else {\r\n        $dock-manager-schema: $schema;\r\n    }\r\n\r\n    $theme: digest-schema($dock-manager-schema);\r\n\r\n    @return extend($theme, (name: $name, prefix: 'igc'), keywords($rest));\r\n}\r\n\r\n/// @param {Map} $theme - The theme used to style the component.\r\n@mixin dock-manager($theme) {\r\n    @include css-vars($theme);\r\n}\r\n\r\n/// Adds typography styles for the dock manager component.\r\n/// @access private\r\n/// @group typography\r\n@mixin dock-manager-typography() {\r\n    igx-dock-manager {\r\n        --igc-font-family: var(--ig-font-family, inherit);\r\n    }\r\n}\r\n","@use 'sass:map';\r\n@use 'sass:meta';\r\n@use '../../base' as *;\r\n@use '../../themes/schemas' as *;\r\n\r\n////\r\n/// @group themes\r\n/// @access public\r\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\r\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\r\n////\r\n\r\n/// Generates a drop-down theme.\r\n/// @param {Map} $schema [$light-material-schema] - The schema used as basis for styling the component.\r\n/// @param {Map} $elevations [null] - The elevations (shadows) map to be used.\r\n/// @param {Color} $background-color [null] - The drop-down background color.\r\n/// @param {Color} $header-text-color [null] - The drop-down header text color.\r\n/// @param {Color} $item-text-color [null] - The drop-down text color.\r\n/// @param {Color} $hover-item-text-color [null] - The drop-down hover text color.\r\n/// @param {Color} $hover-item-background [null] - The drop-down hover item background color.\r\n/// @param {Color} $focused-item-background [null] - The drop-down focused item background color.\r\n/// @param {Color} $focused-item-text-color [null] - The drop-down focused item text color.\r\n/// @param {Color} $selected-item-background [null] - The drop-down selected item background color.\r\n/// @param {Color} $selected-item-text-color [null] - The drop-down selected item text color.\r\n/// @param {Color} $selected-hover-item-background [null] - The drop-down selected item hover background color.\r\n/// @param {Color} $selected-hover-item-text-color [null] - The drop-down selected item hover text color.\r\n/// @param {Color} $selected-focus-item-background [null] - The drop-down selected item focus background color.\r\n/// @param {Color} selected-focus-item-text-color [null] - The drop-down selected item focus text color.\r\n/// @param {Color} $disabled-item-background [null] - The drop-down disabled item background color.\r\n/// @param {Color} $disabled-item-text-color [null] - The drop-down disabled item text color.\r\n/// @param {box-shadow} $shadow [null] - Sets a shadow to be used for the drop-down.\r\n/// @param {Number} $border-width [null] - The border width used for drop-down component.\r\n/// @param {Color} $border-color [null] - The border color used for drop-down component.\r\n/// @param {List} $border-radius [null] - The border radius used for drop-down component.\r\n/// @param {List} $item-border-radius [null] - The border radius used for drop-down items.\r\n/// @requires $light-material-schema\r\n/// @example scss Change the background-color of the dropdown\r\n///   $my-dropdown-theme: drop-down-theme($background-color: #09f);\r\n///   // Pass the theme to the css-vars() mixin\r\n///   @include css-vars($my-dropdown-theme);\r\n@function drop-down-theme(\r\n    $schema: $light-material-schema,\r\n    $elevations: null,\r\n\r\n    $border-radius: null,\r\n    $item-border-radius: null,\r\n\r\n    $background-color: null,\r\n    $header-text-color: null,\r\n\r\n    $item-text-color: null,\r\n    $hover-item-text-color: null,\r\n\r\n    $hover-item-background: null,\r\n\r\n    $focused-item-background: null,\r\n    $focused-item-text-color: null,\r\n\r\n    $selected-item-background: null,\r\n    $selected-item-text-color: null,\r\n\r\n    $selected-hover-item-background: null,\r\n    $selected-hover-item-text-color: null,\r\n\r\n    $selected-focus-item-background: null,\r\n    $selected-focus-item-text-color: null,\r\n\r\n    $disabled-item-background: null,\r\n    $disabled-item-text-color: null,\r\n    $border-color: null,\r\n    $border-width: null,\r\n    $shadow: null\r\n) {\r\n    $name: 'igx-drop-down';\r\n    $selector: '.igx-drop-down__list, .igx-grid-toolbar__dd-list';\r\n    $drop-down-schema: ();\r\n\r\n    @if map.has-key($schema, 'drop-down') {\r\n        $drop-down-schema: map.get($schema, 'drop-down');\r\n    } @else {\r\n        $drop-down-schema: $schema;\r\n    }\r\n\r\n    $theme: digest-schema($drop-down-schema);\r\n    $meta: map.get($theme, '_meta');\r\n\r\n    @if not($item-text-color) and $background-color {\r\n        $item-text-color: text-contrast($background-color);\r\n    }\r\n\r\n    @if not($hover-item-background) and $background-color {\r\n        $hover-item-text-color: text-contrast($background-color);\r\n\r\n        @if meta.type-of($background-color) == 'color' {\r\n            $hover-item-background: rgba(text-contrast($background-color), .12);\r\n        }\r\n    }\r\n\r\n    @if not($hover-item-text-color) and $background-color {\r\n        $hover-item-text-color: text-contrast($background-color);\r\n    }\r\n\r\n    @if not($focused-item-background) and $background-color {\r\n        $focused-item-text-color: text-contrast($background-color);\r\n\r\n        @if meta.type-of($background-color) == 'color' {\r\n            $focused-item-background: rgba(text-contrast($background-color), .12);\r\n        }\r\n    }\r\n\r\n    @if not($focused-item-text-color) and $focused-item-background {\r\n        $focused-item-text-color: text-contrast($focused-item-background);\r\n    }\r\n\r\n    @if not($selected-item-text-color) and $selected-item-background {\r\n        $selected-item-text-color: text-contrast($selected-item-background);\r\n    }\r\n\r\n    @if not($selected-hover-item-text-color) and $selected-hover-item-background {\r\n        $selected-hover-item-text-color: text-contrast($selected-hover-item-background);\r\n    }\r\n\r\n    @if not($selected-focus-item-text-color) and $selected-focus-item-background {\r\n        $selected-focus-item-text-color: text-contrast($selected-focus-item-background);\r\n    }\r\n\r\n    @if not($selected-focus-item-text-color) and $selected-focus-item-background {\r\n        $selected-focus-item-text-color: text-contrast($selected-focus-item-background);\r\n    }\r\n\r\n    @if not($disabled-item-text-color) and $background-color {\r\n        @if meta.type-of($background-color) == 'color' {\r\n            $disabled-item-text-color: rgba(text-contrast($background-color), .36);\r\n        }\r\n    }\r\n\r\n    @if not($disabled-item-text-color) and $disabled-item-background {\r\n        @if meta.type-of($disabled-item-background) == 'color' {\r\n            $disabled-item-text-color: rgba(text-contrast($disabled-item-background), .36);\r\n        }\r\n    }\r\n\r\n    @if not($header-text-color) and $background-color {\r\n        @if meta.type-of($background-color) == 'color' {\r\n            $header-text-color: rgba(text-contrast($background-color), .7);\r\n        }\r\n    }\r\n\r\n    @if not($shadow) {\r\n        $elevation: map.get($drop-down-schema, 'elevation');\r\n        $shadow: elevation($elevation);\r\n    }\r\n\r\n    @if not($border-radius) {\r\n        $border-radius: border-radius(map.get($theme, 'border-radius')...);\r\n    }\r\n\r\n    @if not($item-border-radius) {\r\n        $item-border-radius: border-radius(map.get($theme, 'item-border-radius')...);\r\n    }\r\n\r\n    @return extend($theme, (\r\n        name: $name,\r\n        selector: $selector,\r\n        background-color: $background-color,\r\n        border-radius: $border-radius,\r\n        item-border-radius: $item-border-radius,\r\n        header-text-color: $header-text-color,\r\n        item-text-color: $item-text-color,\r\n        hover-item-text-color: $hover-item-text-color,\r\n        hover-item-background: $hover-item-background,\r\n        focused-item-background: $focused-item-background,\r\n        focused-item-text-color: $focused-item-text-color,\r\n        selected-item-background: $selected-item-background,\r\n        selected-item-text-color: $selected-item-text-color,\r\n        selected-hover-item-background: $selected-hover-item-background,\r\n        selected-hover-item-text-color: $selected-hover-item-text-color,\r\n        selected-focus-item-background: $selected-focus-item-background,\r\n        selected-focus-item-text-color: $selected-focus-item-text-color,\r\n        disabled-item-background: $disabled-item-background,\r\n        disabled-item-text-color: $disabled-item-text-color,\r\n        shadow: $shadow,\r\n        border-color: $border-color,\r\n        border-width: $border-width,\r\n        _meta: map.merge(if($meta, $meta, ()), (\r\n            variant: map.get($schema, '_meta', 'theme')\r\n        )),\r\n    ));\r\n}\r\n\r\n/// @param {Map} $theme - The theme used to style the component.\r\n@mixin drop-down($theme) {\r\n    @include css-vars($theme);\r\n    $variant: map.get($theme, '_meta', 'variant');\r\n\r\n    $item-padding-inline: (\r\n        comfortable: rem(24px),\r\n        cosy: rem(20px),\r\n        compact: rem(16px)\r\n    );\r\n\r\n    $prefix-margin: (\r\n        comfortable: rem(20px),\r\n        cosy: rem(16px),\r\n        compact: rem(12px)\r\n    );\r\n\r\n    $suffix-margin: (\r\n        comfortable: rem(8px),\r\n        cosy: rem(6px),\r\n        compact: rem(4px)\r\n    );\r\n\r\n    $header-item-padding-inline: (\r\n        comfortable: rem(16px),\r\n        cosy: rem(12px),\r\n        compact: rem(8px)\r\n    );\r\n\r\n    %igx-drop-down {\r\n        position: absolute;\r\n    }\r\n\r\n    %igx-drop-down__list {\r\n        overflow: hidden;\r\n        border-radius: var-get($theme, 'border-radius');\r\n        background: var-get($theme, 'background-color');\r\n        box-shadow: var-get($theme, 'shadow');\r\n        min-width: rem(128px);\r\n        border: var-get($theme, 'border-width') solid var-get($theme, 'border-color');\r\n    }\r\n\r\n    %igx-drop-down__list-scroll {\r\n        overflow-y: auto;\r\n        overflow-x: hidden;\r\n        -webkit-overflow-scrolling: touch;\r\n        position: relative;\r\n    }\r\n\r\n    %igx-drop-down__content {\r\n        display: flex;\r\n        width: 100%;\r\n        align-items: center;\r\n    }\r\n\r\n    %igx-drop-down__inner {\r\n        display: block;\r\n        @include ellipsis();\r\n        margin-inline-end: auto;\r\n    }\r\n\r\n    %igx-drop-down__header,\r\n    %igx-drop-down__item {\r\n        --component-size: var(--ig-size, var(--ig-size-large));\r\n\r\n        display: flex;\r\n        justify-content: flex-start;\r\n        align-items: center;\r\n        width: 100%;\r\n        white-space: nowrap;\r\n        position: relative;\r\n        height: sizable(#{rem(28px)}, #{rem(32px)}, #{rem(40px)});\r\n\r\n        igx-prefix,\r\n        [igxPrefix] {\r\n            @extend %igx-drop-down__prefix;\r\n        }\r\n\r\n        igx-suffix,\r\n        [igxSuffix] {\r\n            @extend %igx-drop-down__suffix;\r\n        }\r\n\r\n        igx-divider {\r\n            position: absolute;\r\n            width: 100%;\r\n            inset-inline-start: 0;\r\n            bottom: 0;\r\n        }\r\n    }\r\n\r\n    %igx-drop-down__item {\r\n        color: var-get($theme, 'item-text-color');\r\n        cursor: pointer;\r\n        padding-inline: map.get($item-padding-inline, 'comfortable');\r\n        padding-block: 0;\r\n        border-radius: var-get($theme, 'item-border-radius');\r\n\r\n        &:focus {\r\n            outline: 0;\r\n            outline-color: transparent;\r\n            background: var-get($theme, 'focused-item-background');\r\n            color: var-get($theme, 'focused-item-text-color');\r\n        }\r\n\r\n        &:hover {\r\n            background: var-get($theme, 'hover-item-background');\r\n            color: var-get($theme, 'hover-item-text-color');\r\n        }\r\n    }\r\n\r\n    %igx-drop-down__item--cosy {\r\n        padding-inline: map.get($item-padding-inline, 'cosy')\r\n    }\r\n\r\n    %igx-drop-down__item--cosy,\r\n    %igx-drop-down__header--cosy {\r\n        --component-size: var(--ig-size, var(--ig-size-medium));\r\n\r\n        igx-prefix,\r\n        [igxPrefix] {\r\n            @extend %igx-drop-down__prefix--cosy;\r\n        }\r\n\r\n        igx-suffix,\r\n        [igxSuffix] {\r\n            @extend %igx-drop-down__suffix--cosy;\r\n        }\r\n    }\r\n\r\n    %igx-drop-down__item--compact {\r\n        padding-inline: map.get($item-padding-inline, 'compact');\r\n    }\r\n\r\n    %igx-drop-down__item--compact,\r\n    %igx-drop-down__header--compact {\r\n        --component-size: var(--ig-size, var(--ig-size-small));\r\n\r\n        igx-prefix,\r\n        [igxPrefix] {\r\n            @extend %igx-drop-down__prefix--compact;\r\n        }\r\n\r\n        igx-suffix,\r\n        [igxSuffix] {\r\n            @extend %igx-drop-down__suffix--compact;\r\n        }\r\n    }\r\n\r\n    %igx-drop-down__prefix {\r\n        margin-inline-end: map.get($prefix-margin, 'comfortable');\r\n    }\r\n\r\n    %igx-drop-down__suffix {\r\n        + igx-suffix,\r\n        + [igxSuffix] {\r\n            margin-inline-start: map.get($suffix-margin, 'comfortable');\r\n        }\r\n    }\r\n\r\n    %igx-drop-down__prefix--cosy {\r\n        margin-inline-end: map.get($prefix-margin, 'cosy');\r\n    }\r\n\r\n    %igx-drop-down__suffix--cosy {\r\n        + igx-suffix,\r\n        + [igxSuffix] {\r\n            margin-inline-start: map.get($suffix-margin, 'cosy');\r\n        }\r\n    }\r\n\r\n    %igx-drop-down__prefix--compact {\r\n        margin-inline-end: map.get($prefix-margin, 'compact');\r\n    }\r\n\r\n    %igx-drop-down__suffix--compact {\r\n        + igx-suffix,\r\n        + [igxSuffix] {\r\n            margin-inline-start: map.get($suffix-margin, 'compact');\r\n        }\r\n    }\r\n\r\n    %igx-drop-down__header {\r\n        color: var-get($theme, 'header-text-color');\r\n        pointer-events: none;\r\n        padding-inline: map.get($header-item-padding-inline, 'comfortable');\r\n        padding-block: 0;\r\n    }\r\n\r\n    %igx-drop-down__header--cosy {\r\n        padding-inline: map.get($header-item-padding-inline, 'cosy');\r\n    }\r\n\r\n    %igx-drop-down__header--compact {\r\n        padding-inline: map.get($header-item-padding-inline, 'compact');\r\n    }\r\n\r\n    %igx-drop-down__group {\r\n        pointer-events: auto;\r\n\r\n        label {\r\n            @extend %igx-drop-down__header !optional;\r\n        }\r\n    }\r\n\r\n    %igx-drop-down__item--focused {\r\n        background: var-get($theme, 'focused-item-background');\r\n        color: var-get($theme, 'focused-item-text-color');\r\n\r\n        &:hover {\r\n            color: var-get($theme, 'focused-item-text-color');\r\n            background: var-get($theme, 'focused-item-background');\r\n        }\r\n    }\r\n\r\n    %igx-drop-down__item--selected {\r\n        background: var-get($theme, 'selected-item-background');\r\n        color: var-get($theme, 'selected-item-text-color');\r\n\r\n        &:hover {\r\n            background: var-get($theme, 'selected-hover-item-background');\r\n            color: var-get($theme, 'selected-hover-item-text-color');\r\n        }\r\n    }\r\n\r\n    %igx-drop-down__item--selected--focused {\r\n        background: var-get($theme, 'selected-focus-item-background');\r\n        color: var-get($theme, 'selected-focus-item-text-color');\r\n    }\r\n\r\n    %igx-drop-down__item--disabled {\r\n        background: var-get($theme, 'disabled-item-background');\r\n        color: var-get($theme, 'disabled-item-text-color');\r\n        cursor: default;\r\n        pointer-events: none;\r\n\r\n        &:hover {\r\n            background: var-get($theme, 'disabled-item-background');\r\n        }\r\n    }\r\n}\r\n\r\n/// Adds typography styles for the igx-list component.\r\n/// Uses the 'caption' and 'subtitle-2'\r\n/// categories from the typographic scale.\r\n/// @group typography\r\n/// @param {Map} $categories [(header: 'overline', item: 'body-2', select-item: 'subtitle-1')] - The categories from the typographic scale used for type styles.\r\n@mixin drop-down-typography(\r\n    $categories: (\r\n        header: 'overline',\r\n        item: 'body-2',\r\n        select-item: 'subtitle-1'\r\n    )\r\n) {\r\n    $header: map.get($categories, 'header');\r\n    $item: map.get($categories, 'item');\r\n    $select-item: map.get($categories, 'select-item');\r\n\r\n    %igx-drop-down__header,\r\n    %igx-drop-down__group > label {\r\n        @include type-style($header) {\r\n            margin: 0;\r\n        }\r\n    }\r\n\r\n    %igx-drop-down__item {\r\n        @include type-style($item) {\r\n            margin: 0;\r\n        }\r\n    }\r\n}\r\n","@use 'sass:map';\r\n@use 'sass:meta';\r\n@use '../../base' as *;\r\n@use '../../themes/schemas' as *;\r\n@use 'igniteui-theming/sass/animations/easings' as *;\r\n\r\n////\r\n/// @group themes\r\n/// @access public\r\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\r\n////\r\n\r\n/// Expansion panel Theme\r\n/// @param {Map} $schema [$light-material-schema] - The schema used as basis for styling the component.\r\n/// @param {Color} $header-background [null] - The panel header background color.\r\n/// @param {Color} $header-focus-background [null] - The panel header focus background color.\r\n/// @param {Color} $header-title-color [null] - The panel header title text color.\r\n/// @param {Color} $header-description-color [null] - The panel header description text color.\r\n/// @param {Color} $header-icon-color [null] - The panel header icon color.\r\n/// @param {Color} $body-color [null] - The panel body text color.\r\n/// @param {Color} $body-background [null] - The panel body background color.\r\n/// @param {Color} $disabled-color [null] - The panel body disabled text color.\r\n/// @param {Number} $expanded-margin [null] - The expansion panel margin in expanded state when positioned inside accordion.\r\n/// @param {List} $border-radius [null] - The border radius used for expansion-panel component.\r\n/// @requires $light-material-schema\r\n/// @example scss Change the header background color\r\n///   $my-expansion-panel-theme: expansion-panel-theme($header-background: black);\r\n///   // Pass the theme to the css-vars() mixin\r\n///   @include css-vars($my-expansion-panel-theme);\r\n@function expansion-panel-theme(\r\n    $schema: $light-material-schema,\r\n\r\n    $border-radius: null,\r\n    $header-background: null,\r\n    $header-focus-background: null,\r\n    $header-title-color: null,\r\n    $header-description-color: null,\r\n    $header-icon-color: null,\r\n    $body-color: null,\r\n    $body-background: null,\r\n    $disabled-color: null,\r\n    $expanded-margin: null\r\n) {\r\n    $name: 'igx-expansion-panel';\r\n    $expansion-panel-schema: ();\r\n\r\n    @if map.has-key($schema, 'expansion-panel') {\r\n        $expansion-panel-schema: map.get($schema, 'expansion-panel');\r\n    } @else {\r\n        $expansion-panel-schema: $schema;\r\n    }\r\n\r\n    $theme: digest-schema($expansion-panel-schema);\r\n    $meta: map.get($theme, '_meta');\r\n\r\n    @if not($header-title-color) and $header-background {\r\n        $header-title-color: text-contrast($header-background);\r\n    }\r\n\r\n    @if not($header-description-color) and $header-background {\r\n        @if meta.type-of($header-background) == 'color' {\r\n            $header-description-color: rgba(text-contrast($header-background), .8);\r\n        }\r\n    }\r\n\r\n    @if not($header-icon-color) and $header-background {\r\n        $header-icon-color: text-contrast($header-background);\r\n    }\r\n\r\n    @if not($body-color) and $body-background {\r\n        $body-color: text-contrast($body-background);\r\n    }\r\n\r\n    @if not($border-radius) {\r\n        $border-radius: border-radius(map.get($theme, 'border-radius')...);\r\n    }\r\n\r\n    @return extend($theme, (\r\n        name: $name,\r\n        header-background: $header-background,\r\n        border-radius: $border-radius,\r\n        header-focus-background: $header-focus-background,\r\n        header-title-color: $header-title-color,\r\n        header-description-color: $header-description-color,\r\n        header-icon-color: $header-icon-color,\r\n        body-color: $body-color,\r\n        body-background: $body-background,\r\n        disabled-color: $disabled-color,\r\n        expanded-margin: $expanded-margin,\r\n        _meta: map.merge(if($meta, $meta, ()), (\r\n            variant: map.get($schema, '_meta', 'theme')\r\n        )),\r\n    ));\r\n}\r\n\r\n/// @param {Map} $theme - The theme used to style the component.\r\n@mixin expansion-panel($theme) {\r\n    @include css-vars($theme);\r\n    $variant: map.get($theme, '_meta', 'variant');\r\n\r\n    $panel-padding: rem(16px) rem(24px);\r\n\r\n    %igx-expansion-panel {\r\n        display: flex;\r\n        flex-direction: column;\r\n        border-radius: var-get($theme, 'border-radius');\r\n        overflow: hidden;\r\n        transition: margin 350ms $out-quad;\r\n    }\r\n\r\n    %igx-expansion-panel__header-title {\r\n        color: var-get($theme, 'header-title-color');\r\n        margin-inline-end: rem(16px, 16px);\r\n    }\r\n\r\n    %igx-expansion-panel__header-description {\r\n        color: var-get($theme, 'header-description-color');\r\n    }\r\n\r\n    %igx-expansion-panel__header-title,\r\n    %igx-expansion-panel__header-description {\r\n        text-overflow: ellipsis;\r\n        overflow: hidden;\r\n        white-space: nowrap;\r\n    }\r\n\r\n    %igx-accordion {\r\n        overflow-y: auto;\r\n\r\n        %igx-expansion-panel__header-title {\r\n            @include line-clamp(4, true, true);\r\n\r\n            white-space: initial;\r\n            word-wrap: break-word;\r\n        }\r\n\r\n        %igx-expansion-panel--expanded {\r\n            margin: var-get($theme, 'expanded-margin') 0;\r\n\r\n            &:first-of-type {\r\n                margin-top: 0;\r\n            }\r\n\r\n            &:last-of-type {\r\n                margin-bottom: 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    %igx-expansion-panel__header-inner {\r\n        display: flex;\r\n        align-items: center;\r\n        padding: $panel-padding;\r\n        cursor: pointer;\r\n        background: var-get($theme, 'header-background');\r\n\r\n        &:focus,\r\n        &:active\r\n        {\r\n            background: var-get($theme, 'header-focus-background');\r\n            outline: transparent;\r\n        }\r\n    }\r\n\r\n    %igx-expansion-panel__title-wrapper {\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: center;\r\n        flex: 1 0 0%;\r\n        overflow: hidden;\r\n    }\r\n\r\n    %igx-expansion-panel__header-icon--end {\r\n        order: 1;\r\n        margin-inline-start: rem(16px, 16px);\r\n    }\r\n\r\n    %igx-expansion-panel__header-icon--start {\r\n        order: -1;\r\n        margin-inline-end: rem(16px, 16px);\r\n    }\r\n\r\n    %igx-expansion-panel__header-icon--none {\r\n        display: none;\r\n    }\r\n\r\n    %igx-expansion-panel__header-icon--end,\r\n    %igx-expansion-panel__header-icon--start {\r\n        display: flex;\r\n        align-content: center;\r\n        justify-content: center;\r\n        user-select: none;\r\n\r\n        color: var-get($theme, 'header-icon-color');\r\n\r\n        igx-icon {\r\n            color: var-get($theme, 'header-icon-color');\r\n        }\r\n    }\r\n\r\n    %igx-expansion-panel__body {\r\n        color: var-get($theme, 'body-color');\r\n        background: var-get($theme, 'body-background');\r\n        overflow: hidden;\r\n        padding: $panel-padding;\r\n    }\r\n\r\n    %igx-expansion-panel--disabled {\r\n        pointer-events: none;\r\n\r\n        %igx-expansion-panel__header-title,\r\n        %igx-expansion-panel__header-description {\r\n            color: var-get($theme, 'disabled-color')\r\n        }\r\n\r\n        %igx-expansion-panel__header-icon--start,\r\n        %igx-expansion-panel__header-icon--end {\r\n            igx-icon {\r\n                color: var-get($theme, 'disabled-color');\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n/// Adds typography styles for the igx-expansion-panel component.\r\n/// @group typography\r\n/// @param {Map} $categories [(title: 'h5', description: 'subtitle-2', body: 'body-2')] - The categories from the typographic scale used for type styles.\r\n@mixin expansion-panel-typography($categories: (\r\n    title: 'h5',\r\n    description: 'subtitle-2',\r\n    body: 'body-2')\r\n) {\r\n    $title: map.get($categories, 'title');\r\n    $description: map.get($categories, 'description');\r\n    $body: map.get($categories, 'body');\r\n\r\n    %igx-expansion-panel__header-title {\r\n        @include type-style($title) {\r\n            margin: 0;\r\n        }\r\n    }\r\n\r\n    %igx-expansion-panel__header-description {\r\n        @include type-style($description) {\r\n            margin: 0;\r\n        }\r\n    }\r\n\r\n    %igx-expansion-panel__body {\r\n        @include type-style($body) {\r\n            margin: 0;\r\n        }\r\n    }\r\n}\r\n","@use 'sass:map';\r\n@use '../../base' as *;\r\n@use '../button-group/button-group-component' as *;\r\n@use '../button-group/button-group-theme' as *;\r\n@use '../tree/tree-theme' as *;\r\n@use '../../themes/schemas' as *;\r\n\r\n////\r\n/// @group themes\r\n/// @access private\r\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\r\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\r\n////\r\n\r\n/// @param {Map} $theme - The grid theme used to style the component.\r\n@mixin excel-filtering($theme) {\r\n\r\n    $variant: map.get($theme, '_meta', 'variant');\r\n    $bootstrap-theme: $variant == 'bootstrap';\r\n\r\n    $tree-node-indent: (\r\n        comfortable: rem(16px),\r\n        cosy: rem(8px),\r\n        compact: rem(4px)\r\n    );\r\n\r\n    $tree-node-expander-size: rem(20px);\r\n\r\n    $tree-node-height: (\r\n        comfortable: rem(40px),\r\n        cosy: rem(32px),\r\n        compact: rem(24px)\r\n    );\r\n\r\n    $checkbox-indent: (\r\n        comfortable: calc(#{map.get($tree-node-indent, 'comfortable')} + #{$tree-node-expander-size} + #{rem(8px)}),\r\n        cosy: calc((#{map.get($tree-node-indent, 'cosy')} * 2) + #{$tree-node-expander-size}),\r\n        compact: calc((#{map.get($tree-node-indent, 'compact')} * 2) + #{$tree-node-expander-size}),\r\n    );\r\n\r\n    %grid-excel-filter {\r\n        display: block;\r\n        width: rem(320px);\r\n        height: 100%;\r\n        flex-grow: 1;\r\n        box-shadow: elevation(12);\r\n        overflow: auto;\r\n        min-width: rem(320px);\r\n    }\r\n\r\n    %grid-excel-filter--inline {\r\n        box-shadow: none;\r\n        width: 100%;\r\n    }\r\n\r\n    %igx-excel-filter__loading {\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n    }\r\n\r\n    %grid-excel-icon {\r\n        display: flex;\r\n        cursor: pointer;\r\n\r\n        igx-icon {\r\n            width: var(--igx-icon-size, #{rem(15px)});\r\n            height: var(--igx-icon-size, #{rem(15px)});\r\n            font-size: var(--igx-icon-size, #{rem(15px)});\r\n        }\r\n    }\r\n\r\n    %grid-excel-icon--filtered {\r\n        igx-icon {\r\n            color: if(\r\n                $variant == 'indigo-design',\r\n                color($color: 'warn', $variant: 500),\r\n                color($color: 'secondary')\r\n            );\r\n        }\r\n    }\r\n\r\n    %grid-excel-menu {\r\n        --component-size: var(--ig-size, var(--ig-size-large));\r\n\r\n        display: flex;\r\n        flex-direction: column;\r\n        height: 100%;\r\n        background: var-get($theme, 'filtering-row-background');\r\n        // TODO: The border-radius should not be hardcoded.\r\n        border-radius: border-radius(rem(4px));\r\n\r\n        igx-buttongroup {\r\n            --shadow: none;\r\n            --item-background: #{var-get($theme, 'filtering-row-background')};\r\n            --item-hover-background: #{color($color: 'gray', $variant: 100)};\r\n            --item-selected-background: #{color($color: 'gray', $variant: 100)};\r\n            --item-text-color: #{color($color: 'gray', $variant: 700)};\r\n            --item-hover-text-color: #{color($color: 'gray', $variant: 800)};\r\n            --item-selected-text-color: #{if(\r\n                $variant == 'indigo-design',\r\n                contrast-color($color: 'surface'),\r\n                color($color: 'secondary', $variant: 500)\r\n            )};\r\n            --item-border-color: transparent;\r\n            --item-selected-border-color: transparent;\r\n            --item-disabled-border: transparent;\r\n        }\r\n\r\n        @include tree(tree-theme(\r\n            $background: color($color: 'surface'),\r\n            $background-selected: color($color: 'surface'),\r\n            $background-active: color($color: 'surface'),\r\n            $background-active-selected: color($color: 'surface'),\r\n            $foreground: contrast-color($color: 'surface'),\r\n            $foreground-selected: contrast-color($color: 'surface'),\r\n            $foreground-active: contrast-color($color: 'surface'),\r\n            $foreground-active-selected: contrast-color($color: 'surface'),\r\n        ));\r\n\r\n        .igx-tree-node__wrapper {\r\n            padding: 0;\r\n        }\r\n\r\n        igx-chips-area  {\r\n            padding-inline-start: pad-block(rem(4px), rem(8px), rem(16px));\r\n            padding-inline-end: pad-block(rem(4px), rem(8px), rem(16px));\r\n            padding-block-start: pad-block(rem(4px), rem(8px), rem(16px));\r\n            padding-block-end: 0;\r\n            gap: sizable(rem(4px), rem(4px), rem(8px));\r\n        }\r\n    }\r\n\r\n    %grid-excel-menu__header {\r\n        display: flex;\r\n        align-items: center;\r\n        padding: pad(rem(4px), rem(8px), rem(16px));\r\n        color: color($color: 'gray', $variant: 700);\r\n    }\r\n\r\n    %grid-excel-menu__header-actions {\r\n        display: flex;\r\n        margin-inline-start: auto;\r\n\r\n        [igxButton] + [igxButton] {\r\n            margin-inline-start: rem(4px);\r\n        }\r\n\r\n        %grid-excel-actions__action {\r\n            padding: 0 !important;\r\n            margin: 0 !important;\r\n        }\r\n\r\n        %grid-excel-actions__action,\r\n        %grid-excel-actions--selected {\r\n            justify-content: center;\r\n        }\r\n    }\r\n\r\n    %grid-excel-menu__footer {\r\n        display: flex;\r\n        justify-content: space-between;\r\n\r\n        %grid-excel-filter__apply,\r\n        %grid-excel-filter__cancel {\r\n            flex-grow: 1;\r\n\r\n            [igxButton] {\r\n                width: 100%;\r\n            }\r\n        }\r\n    }\r\n\r\n    %grid-excel-filter__clear {\r\n        flex-grow: 1;\r\n    }\r\n\r\n    %grid-excel-filter__cancel + %grid-excel-filter__apply {\r\n        margin-inline-start: rem(16px);\r\n    }\r\n\r\n    %grid-excel-sort,\r\n    %grid-excel-move {\r\n        display: block;\r\n        padding-block: pad-block(rem(4px), rem(8px), rem(8px));\r\n        padding-inline: pad-inline(rem(4px), rem(8px), rem(16px));\r\n\r\n        header {\r\n            color: color($color: 'gray', $variant: 700);\r\n            margin-bottom: rem(4px);\r\n        }\r\n\r\n        igx-icon {\r\n            display: initial;\r\n            width: var(--igx-icon-size, #{rem(18px)});\r\n            height: var(--igx-icon-size, #{rem(18px)});\r\n            font-size: var(--igx-icon-size, #{rem(18px)});\r\n        }\r\n    }\r\n\r\n    %grid-excel-action--compact {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: space-between;\r\n\r\n        header {\r\n            color: color($color: 'gray', $variant: 700);\r\n            margin-inline-end: auto;\r\n        }\r\n    }\r\n\r\n    %grid-excel-actions {\r\n        padding-block: pad-block(rem(4px), rem(8px), rem(8px));\r\n        padding-inline: pad-inline(rem(4px), rem(16px), rem(16px));\r\n    }\r\n\r\n    %grid-excel-actions--selected {\r\n        igx-icon {\r\n            color: if(\r\n                $variant == 'indigo-design',\r\n                color($color: 'primary', $variant: 200),\r\n                color($color: 'secondary')\r\n            );\r\n        }\r\n    }\r\n\r\n    %grid-excel-move .igx-button-group {\r\n        [dir='rtl'] & {\r\n            flex-direction: row-reverse;\r\n\r\n            igx-icon,\r\n            [igxButton] {\r\n                direction: ltr;\r\n            }\r\n        }\r\n    }\r\n\r\n    %grid-excel-sort .igx-button-group {\r\n        [dir='rtl'] & {\r\n            flex-direction: row-reverse;\r\n\r\n            igx-icon,\r\n            [igxButton] {\r\n                direction: ltr;\r\n            }\r\n        }\r\n    }\r\n\r\n    %grid-excel-actions__action {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: space-between;\r\n        padding-block: pad-block(rem(4px), rem(8px), rem(8px));\r\n        padding-inline: pad-inline(rem(4px), rem(8px), rem(16px));\r\n        cursor: pointer;\r\n        color: color($color: 'gray', $variant: 700);\r\n        outline-style: none;\r\n\r\n        &:hover,\r\n        &:focus {\r\n            background: color($color: 'gray', $variant: 100);\r\n        }\r\n\r\n        [dir='rtl'] & {\r\n            igx-icon {\r\n                transform: scaleX(-1);\r\n            }\r\n        }\r\n    }\r\n\r\n    %grid-excel-actions__action--disabled {\r\n        color: color($color: 'gray', $variant: 400);\r\n        pointer-events: none;\r\n    }\r\n\r\n    %igx-excel-filter__empty {\r\n        display: grid;\r\n        place-items: center;\r\n        height: 100%;\r\n    }\r\n\r\n    %grid-excel-main {\r\n        display: flex;\r\n        flex-direction: column;\r\n        flex-grow: 1;\r\n        overflow: hidden;\r\n        padding: pad(rem(4px), rem(8px), rem(16px));\r\n        gap: pad(rem(4px), rem(8px), rem(16px));\r\n\r\n        igx-list {\r\n            flex-grow: 1;\r\n            overflow: hidden;\r\n            margin-inline: calc(sizable(rem(-4px), rem(-8px), rem(-16px)) * -1);\r\n            border: 0;\r\n\r\n            @if $bootstrap-theme {\r\n                border-top: rem(1px) dashed color($color: 'gray', $variant: 100);\r\n                border-bottom: rem(1px) dashed color($color: 'gray', $variant: 100);\r\n            } @else {\r\n                border-top: rem(1px) dashed color($color: 'gray', $variant: 300);\r\n                border-bottom: rem(1px) dashed color($color: 'gray', $variant: 300);\r\n            }\r\n        }\r\n\r\n        %igx-excel-filter__tree {\r\n            background: color($color: 'surface');\r\n            overflow-y: auto;\r\n            margin-inline: calc(pad-inline(rem(-4px), rem(-8px), rem(-16px)) * -1);\r\n            margin-block: 0;\r\n            flex: 1;\r\n\r\n            @if $bootstrap-theme {\r\n                border-top: rem(1px) dashed color($color: 'gray', $variant: 100);\r\n                border-bottom: rem(1px) dashed color($color: 'gray', $variant: 100);\r\n            } @else {\r\n                border-top: rem(1px) dashed color($color: 'gray', $variant: 300);\r\n                border-bottom: rem(1px) dashed color($color: 'gray', $variant: 300);\r\n            }\r\n\r\n            igx-icon {\r\n                width: var(--igx-icon-size, #{$tree-node-expander-size});\r\n                height: var(--igx-icon-size, #{$tree-node-expander-size});\r\n                font-size: var(--igx-icon-size, #{$tree-node-expander-size});\r\n            }\r\n\r\n            > igx-checkbox,\r\n            .igx-tree-node__wrapper {\r\n                height: #{sizable(map.get($tree-node-height, 'compact'), map.get($tree-node-height, 'cosy'), map.get($tree-node-height, 'comfortable'))};\r\n                min-height: #{sizable(map.get($tree-node-height, 'compact'), map.get($tree-node-height, 'cosy'), map.get($tree-node-height, 'comfortable'))};\r\n            }\r\n\r\n            .igx-tree-node__toggle-button {\r\n                min-width: rem(20px);\r\n                margin-inline-start: pad-inline(map.get($tree-node-indent, 'compact'), map.get($tree-node-indent, 'cosy'), map.get($tree-node-indent, 'comfortable'));\r\n                margin-inline-end: pad-inline(rem(4px), rem(8px));\r\n            }\r\n\r\n            .igx-tree {\r\n                overflow-y: hidden;\r\n            }\r\n        }\r\n\r\n        %igx-excel-filter__tree-alike {\r\n            background: color($color: 'surface');\r\n            display: flex;\r\n            flex-direction: column;\r\n            z-index: 1;\r\n        }\r\n\r\n        %igx-excel-filter__tree-alike-item {\r\n            display: flex;\r\n            align-items: center;\r\n            height: sizable(map.get($tree-node-height, 'compact'), map.get($tree-node-height, 'cosy'), map.get($tree-node-height, 'comfortable'));\r\n            background: color($color: 'surface');\r\n\r\n            &:hover,\r\n            &:focus {\r\n                background: color($color: 'gray', $variant: 200);\r\n            }\r\n\r\n            > igx-checkbox {\r\n                margin-inline-start: pad-inline(map.get($checkbox-indent, 'compact'), map.get($checkbox-indent, 'cosy'), map.get($checkbox-indent, 'comfortable'));\r\n            }\r\n        }\r\n    }\r\n\r\n    %grid-excel-menu--cosy {\r\n        --component-size: var(--ig-size, var(--ig-size-medium));\r\n\r\n        %grid-excel-menu__header {\r\n            justify-content: space-between;\r\n        }\r\n    }\r\n\r\n    %grid-excel-menu--compact {\r\n        --component-size: var(--ig-size, var(--ig-size-small));\r\n\r\n        %grid-excel-menu__header {\r\n            justify-content: space-between;\r\n        }\r\n\r\n        %grid-excel-sort,\r\n        %grid-excel-move {\r\n            @extend %grid-excel-action--compact;\r\n\r\n            igx-buttongroup {\r\n                width: rem(208px);\r\n            }\r\n        }\r\n\r\n        %grid-excel-move {\r\n            margin-bottom: 0;\r\n        }\r\n    }\r\n\r\n    %grid-excel-menu__secondary {\r\n        width: rem(520px);\r\n        min-width: rem(520px);\r\n        background: var-get($theme, 'filtering-row-background');\r\n        box-shadow: elevation(12);\r\n        border-radius: border-radius(rem(4px));\r\n    }\r\n\r\n    %grid-excel-menu__condition {\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        align-items: center;\r\n        padding-inline: pad-inline(rem(4px), rem(8px), rem(16px));\r\n        padding-block: 0;\r\n\r\n        igx-select {\r\n            flex-grow: 1;\r\n            flex-basis: 40%;\r\n            margin: rem(16px) 0;\r\n\r\n            ~ igx-input-group,\r\n            ~ igx-date-picker {\r\n                margin-inline-start: rem(16px);\r\n            }\r\n        }\r\n\r\n        igx-buttongroup {\r\n            min-width: 30%;\r\n        }\r\n\r\n        [igxButton='icon'] {\r\n            margin-inline-start: rem(16px);\r\n        }\r\n    }\r\n\r\n    %grid-excel-menu__add-filter {\r\n        margin-inline: pad-inline(rem(4px), rem(4px), rem(16px));\r\n        margin-block-start: 0;\r\n\r\n        igx-icon {\r\n            width: var(--igx-icon-size, #{rem(18px)});\r\n            height: var(--igx-icon-size, #{rem(18px)});\r\n            font-size: var(--igx-icon-size, #{rem(18px)});\r\n        }\r\n    }\r\n\r\n    %grid-excel-menu__secondary-header {\r\n        @if $bootstrap-theme {\r\n            border-bottom: rem(1px) solid color($color: 'gray', $variant: 100);\r\n        } @else {\r\n            border-bottom: rem(1px) solid color($color: 'gray', $variant: 300);\r\n        }\r\n    }\r\n\r\n    %grid-excel-menu__secondary-main {\r\n        height: rem(232px);\r\n        overflow: auto;\r\n    }\r\n\r\n    %grid-excel-menu__secondary-footer {\r\n        padding: rem(8px) rem(16px);\r\n        @if $bootstrap-theme {\r\n            border-top: rem(1px) dashed color($color: 'gray', $variant: 100);\r\n        } @else {\r\n            border-top: rem(1px) dashed color($color: 'gray', $variant: 300);\r\n        }\r\n\r\n        %grid-excel-filter__apply,\r\n        %grid-excel-filter__cancel {\r\n            flex-grow: 0;\r\n        }\r\n    }\r\n\r\n    igx-excel-style-filter-operations,\r\n    [igxExcelStyleFilterOperations] {\r\n        display: flex;\r\n        flex-direction: column;\r\n        flex-grow: 1;\r\n        overflow: hidden;\r\n    }\r\n}\r\n\r\n/// Adds typography styles for the excel-style-filtering component.\r\n/// Uses the 'body-1', 'caption'\r\n/// category from the typographic scale.\r\n/// @group typography\r\n/// @access private\r\n/// @param {Map} $categories [(haeder-comfortable: 'overline', header-compact: 'subtitle-1')] - The categories from the typographic scale used for type styles.\r\n@mixin excel-filtering-typography($categories: (\r\n    header-comfortable: 'overline',\r\n    header-compact: 'subtitle-1')\r\n) {\r\n    $header-comfortable: map.get($categories, 'header-comfortable');\r\n    $header-compact: map.get($categories, 'header-compact');\r\n\r\n\r\n    %grid-excel-menu {\r\n        %grid-excel-menu__header > h4 {\r\n            @include type-style('h6')\r\n        }\r\n    }\r\n\r\n    %grid-excel-menu__secondary {\r\n        %grid-excel-menu__header > h4 {\r\n            @include type-style('h6');\r\n        }\r\n    }\r\n\r\n    %grid-excel-sort,\r\n    %grid-excel-move {\r\n        header {\r\n            @include type-style('overline');\r\n        }\r\n    }\r\n\r\n    %grid-excel-menu--cosy {\r\n        %grid-excel-menu__header > h4 {\r\n            @include type-style('h6')\r\n        }\r\n    }\r\n\r\n    %grid-excel-menu--compact {\r\n        %grid-excel-menu__header > h4 {\r\n            @include type-style('subtitle-1')\r\n        }\r\n\r\n        %grid-excel-sort,\r\n        %grid-excel-move {\r\n            header {\r\n                @include type-style('body-2');\r\n                text-transform: capitalize;\r\n            }\r\n        }\r\n\r\n        %grid-excel-actions__action {\r\n            span {\r\n                @include type-style('body-2');\r\n            }\r\n        }\r\n\r\n        %cbx-label {\r\n            @include type-style('body-2');\r\n        }\r\n    }\r\n\r\n    %grid-excel-menu__secondary--cosy {\r\n        %grid-excel-menu__header > h4 {\r\n            @include type-style('h6');\r\n        }\r\n    }\r\n\r\n    %grid-excel-menu__secondary--compact {\r\n        %grid-excel-menu__header > h4 {\r\n            @include type-style('subtitle-1');\r\n        }\r\n    }\r\n}\r\n","@use 'sass:map';\r\n@use 'sass:meta';\r\n@use '../../base' as *;\r\n@use '../../themes/schemas' as *;\r\n@use 'igniteui-theming/sass/animations/easings' as *;\r\n\r\n////\r\n/// @group themes\r\n/// @access public\r\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\r\n////\r\n\r\n/// @param {Map} $schema [$light-material-schema] - The schema used as basis for styling the component.\r\n/// @param {Map} $elevations [null] - The elevations (shadows) map to be used.\r\n/// @param {Color} $idle-text-color [null] - The input text color in the idle state.\r\n/// @param {Color} $filled-text-color [null] - The input text color in the filled state.\r\n/// @param {Color} $focused-text-color [null] - The input text color in the focused state.\r\n/// @param {Color} $disabled-text-color [null] - The input text color in the disabled state.\r\n/// @param {Color} $helper-text-color [null] - The helper text color.\r\n/// @param {Color} $input-prefix-color [null] - The input prefix color in the idle state.\r\n/// @param {Color} $input-prefix-background [null] - The background color of an input prefix in the idle state.\r\n/// @param {Color} $input-prefix-color--filled [null] - The input prefix color in the filled state.\r\n/// @param {Color} $input-prefix-background--filled] - The background color of an input prefix in the filled state.\r\n/// @param {Color} $input-prefix-color--focused [null] - The input prefix color in the focused state.\r\n/// @param {Color} $input-prefix-background--focused [null] - The background color of an input prefix in the focused state.\r\n/// @param {Color} $input-suffix-color [null] - The input suffix color in the idle state.\r\n/// @param {Color} $input-suffix-background [null] - The background color of an input suffix in the idle state.\r\n/// @param {Color} $input-suffix-color--filled [null] - The input suffix color in the filled state.\r\n/// @param {Color} $input-suffix-background-filled [null] - The background color of an input suffix in the filled state.\r\n/// @param {Color} $input-suffix-color--focused [null] - The input suffix color in the focused state.\r\n/// @param {Color} $input-suffix-background--focused [null] - The background color of an input suffix in the focused state.\r\n/// @param {Color} $idle-secondary-color [null] - The label color in the idle state.\r\n/// @param {Color} $filled-secondary-color [null] - The label color in the filled state.\r\n/// @param {Color} $focused-secondary-color [null] - The label color in the focused state.\r\n/// @param {Color} $idle-bottom-line-color [null] - The bottom line and border colors in the idle state.\r\n/// @param {Color} $hover-bottom-line-color [null] - The bottom line and border colors in the hover state.\r\n/// @param {Color} $focused-bottom-line-color [null] - The bottom line and border colors in the focused state.\r\n/// @param {Color} $interim-bottom-line-color [null] - The bottom line and border colors during the to-focused transition.\r\n/// @param {Color} $disabled-bottom-line-color [null] - The bottom line and border colors in the disabled state.\r\n/// @param {Color} $border-color [null] - The border color for input groups of type border and fluent.\r\n/// @param {Color} $hover-border-color [null] - The hover input border for input groups of type border and fluent.\r\n/// @param {Color} $focused-border-color [null] - The focused input border color for input groups of type border and fluent.\r\n/// @param {Color} $disabled-border-color [null] - The disabled border color for input groups of type border and fluent.\r\n/// @param {Color} $box-background [null] - The background color of an input group of type box.\r\n/// @param {Color} $box-background-hover [null] - The background color on hover of an input group of type box.\r\n/// @param {Color} $box-background-focus [null] - The background color on focus of an input group of type box.\r\n/// @param {Color} $box-disabled-background [null] - The background color of an input group of type box in the disabled state.\r\n/// @param {Color} $border-background [null] - The background color of an input group of type border.\r\n/// @param {Color} $border-disabled-background [null] - The background color of an input group of type border in the disabled state.\r\n/// @param {Color} $search-background [null] - The background color of an input group of type search.\r\n/// @param {Color} $search-disabled-background [null] - The background color of an input group of type search in the disabled state.\r\n/// @param {box-shadow} $search-resting-shadow [null] - The shadow color of an input group of type search in its resting state.\r\n/// @param {box-shadow} $search-hover-shadow [null] - The shadow color of an input group of type search in its hover state.\r\n/// @param {box-shadow} $search-disabled-shadow [null] - The shadow color of an input group of type search in its disabled state.\r\n/// @param {Color} $success-secondary-color [null] - The success color used in the valid state.\r\n/// @param {Color} $warning-secondary-color [null] - The warning color used in the warning state.\r\n/// @param {Color} $error-secondary-color [null] - The error color used in the error state.\r\n/// @param {List} $box-border-radius [null] - The border radius used for box input.\r\n/// @param {List} $border-border-radius [null] - The border radius used for border input.\r\n/// @param {List} $search-border-radius [null] - The border radius used for search input.\r\n/// @param {Color} placeholder-color [null] - The placeholder color of an input group.\r\n/// @param {Color} disabled-placeholder-color [null] - The disabled placeholder color of an input group.\r\n/// @example scss Change the focused border and label colors\r\n///   $my-input-group-theme: input-group-theme($focused-secondary-color: pink, $focused-bottom-line-color: pink);\r\n///   // Pass the theme to the css-vars() mixin\r\n///   @include css-vars($my-input-group-theme);\r\n@function input-group-theme(\r\n    $schema: $light-material-schema,\r\n    $elevations: null,\r\n\r\n    $box-background: null,\r\n    $box-background-hover: null,\r\n    $box-background-focus: null,\r\n    $box-disabled-background: null,\r\n    $box-border-radius: null,\r\n\r\n    $idle-text-color: null,\r\n    $filled-text-color: null,\r\n    $focused-text-color: null,\r\n    $helper-text-color: null,\r\n    $disabled-text-color: null,\r\n\r\n    $idle-secondary-color: null,\r\n    $filled-secondary-color: null,\r\n    $focused-secondary-color: null,\r\n\r\n    $idle-bottom-line-color: null,\r\n    $hover-bottom-line-color: null,\r\n    $focused-bottom-line-color: null,\r\n    $interim-bottom-line-color: null,\r\n    $disabled-bottom-line-color: null,\r\n\r\n    $border-color: null,\r\n    $hover-border-color: null,\r\n    $focused-border-color: null,\r\n    $disabled-border-color: null,\r\n\r\n    $border-border-radius: null,\r\n    $border-background: null,\r\n    $border-disabled-background: null,\r\n\r\n    $search-background: null,\r\n    $search-disabled-background: null,\r\n    $search-border-radius: null,\r\n    $search-resting-shadow: null,\r\n    $search-hover-shadow: null,\r\n    $search-disabled-shadow: null,\r\n\r\n    $success-secondary-color: null,\r\n    $warning-secondary-color: null,\r\n    $error-secondary-color: null,\r\n    $success-shadow-color: null,\r\n    $error-shadow-color: null,\r\n\r\n    $placeholder-color: null,\r\n    $disabled-placeholder-color: null,\r\n\r\n    $input-prefix-color: null,\r\n    $input-prefix-background: null,\r\n    $input-prefix-color--filled: null,\r\n    $input-prefix-background--filled: null,\r\n    $input-prefix-color--focused: null,\r\n    $input-prefix-background--focused: null,\r\n\r\n    $input-suffix-color: null,\r\n    $input-suffix-background: null,\r\n    $input-suffix-color--filled: null,\r\n    $input-suffix-background--filled: null,\r\n    $input-suffix-color--focused: null,\r\n    $input-suffix-background--focused: null,\r\n) {\r\n    $name: 'igx-input-group';\r\n    $selector: 'igx-input-group, igx-date-range-start, igx-date-range-end';\r\n    $input-group-schema: ();\r\n\r\n    @if map.has-key($schema, 'input-group') {\r\n        $input-group-schema: map.get($schema, 'input-group');\r\n    } @else {\r\n        $input-group-schema: $schema;\r\n    }\r\n\r\n    $theme: digest-schema($input-group-schema);\r\n    $search-resting-elevation: map.get($input-group-schema, 'search-resting-elevation');\r\n    $search-hover-elevation: map.get($input-group-schema, 'search-hover-elevation');\r\n    $search-disabled-elevation: map.get($input-group-schema, 'search-disabled-elevation');\r\n\r\n    @if not($placeholder-color) and $box-background {\r\n        $placeholder-color: text-contrast($box-background);\r\n    }\r\n\r\n    @if not($placeholder-color) and $box-background-hover {\r\n        $placeholder-color: text-contrast($box-background-hover);\r\n    }\r\n\r\n    @if not($placeholder-color) and $box-background-focus {\r\n        $placeholder-color: text-contrast($box-background-focus);\r\n    }\r\n\r\n    @if not($placeholder-color) and $search-background {\r\n        $placeholder-color: text-contrast($search-background);\r\n    }\r\n\r\n    @if not($search-resting-shadow) {\r\n        $search-resting-shadow: elevation($search-resting-elevation);\r\n    }\r\n\r\n    @if not($search-hover-shadow) {\r\n        $search-hover-shadow: elevation($search-hover-elevation);\r\n    }\r\n\r\n    @if not($search-disabled-shadow) {\r\n        $search-disabled-shadow: elevation($search-disabled-elevation);\r\n    }\r\n\r\n    @if not($input-prefix-background--filled) and $input-prefix-background {\r\n        $input-prefix-background--filled: $input-prefix-background;\r\n    }\r\n\r\n    @if not($input-prefix-background--focused) and $input-prefix-background {\r\n        $input-prefix-background--focused: $input-prefix-background;\r\n    }\r\n\r\n    @if not($input-prefix-color) and $input-prefix-background {\r\n        $input-prefix-color: text-contrast($input-prefix-background);\r\n    }\r\n\r\n    @if not($input-prefix-color--filled) and $input-prefix-background--filled {\r\n        $input-prefix-color--filled: text-contrast($input-prefix-background--filled);\r\n    }\r\n\r\n    @if not($input-prefix-color--focused) and $input-prefix-background--focused {\r\n        $input-prefix-color--focused: text-contrast($input-prefix-background--focused);\r\n    }\r\n\r\n    @if not($input-suffix-color) and $input-suffix-background {\r\n        $input-suffix-color: text-contrast($input-suffix-background);\r\n    }\r\n\r\n    @if not($input-suffix-color--filled) and $input-suffix-background--filled {\r\n        $input-suffix-color--filled: text-contrast($input-suffix-background--filled);\r\n    }\r\n\r\n    @if not($input-suffix-color--focused) and $input-suffix-background--focused {\r\n        $input-suffix-color--focused: text-contrast($input-suffix-background--focused);\r\n    }\r\n\r\n    @if not($box-border-radius) {\r\n        $box-border-radius: border-radius(map.get($theme, 'box-border-radius')...);\r\n    }\r\n\r\n    @if not($border-border-radius) {\r\n        $border-border-radius: border-radius(map.get($theme, 'border-border-radius')...);\r\n    }\r\n\r\n    @if not($search-border-radius) {\r\n        $search-border-radius: border-radius(map.get($theme, 'search-border-radius')...);\r\n    }\r\n\r\n    @return extend($theme, (\r\n        name: $name,\r\n        selector: $selector,\r\n        idle-text-color: $idle-text-color,\r\n        filled-text-color: $filled-text-color,\r\n        focused-text-color: $focused-text-color,\r\n        disabled-text-color: $disabled-text-color,\r\n        helper-text-color: $helper-text-color,\r\n        box-border-radius: $box-border-radius,\r\n        border-border-radius: $border-border-radius,\r\n        search-border-radius: $search-border-radius,\r\n        idle-secondary-color: $idle-secondary-color,\r\n        filled-secondary-color: $filled-secondary-color,\r\n        focused-secondary-color: $focused-secondary-color,\r\n        idle-bottom-line-color: $idle-bottom-line-color,\r\n        hover-bottom-line-color: $hover-bottom-line-color,\r\n        focused-bottom-line-color: $focused-bottom-line-color,\r\n        interim-bottom-line-color: $interim-bottom-line-color,\r\n        disabled-bottom-line-color: $disabled-bottom-line-color,\r\n        border-color: $border-color,\r\n        hover-border-color: $hover-border-color,\r\n        focused-border-color: $focused-border-color,\r\n        disabled-border-color: $disabled-border-color,\r\n        box-background: $box-background,\r\n        box-background-hover: $box-background-hover,\r\n        box-background-focus: $box-background-focus,\r\n        box-disabled-background: $box-disabled-background,\r\n        border-background: $border-background,\r\n        border-disabled-background: $border-disabled-background,\r\n        search-background: $search-background,\r\n        search-disabled-background: $search-disabled-background,\r\n        search-resting-shadow: $search-resting-shadow,\r\n        search-hover-shadow: $search-hover-shadow,\r\n        search-disabled-shadow: $search-disabled-shadow,\r\n        success-secondary-color: $success-secondary-color,\r\n        warning-secondary-color: $warning-secondary-color,\r\n        error-secondary-color: $error-secondary-color,\r\n        success-shadow-color: $success-shadow-color,\r\n        error-shadow-color: $error-shadow-color,\r\n        placeholder-color: $placeholder-color,\r\n        disabled-placeholder-color: $disabled-placeholder-color,\r\n        input-prefix-color: $input-prefix-color,\r\n        input-prefix-background: $input-prefix-background,\r\n        input-prefix-color--filled: $input-prefix-color--filled,\r\n        input-prefix-background--filled: $input-prefix-background--filled,\r\n        input-prefix-color--focused: $input-prefix-color--focused,\r\n        input-prefix-background--focused: $input-prefix-background--focused,\r\n        input-suffix-color: $input-suffix-color,\r\n        input-suffix-background: $input-suffix-background,\r\n        input-suffix-color--filled: $input-suffix-color--filled,\r\n        input-suffix-background--filled: $input-suffix-background--filled,\r\n        input-suffix-color--focused: $input-suffix-color--focused,\r\n        input-suffix-background--focused: $input-suffix-background--focused,\r\n        variant: map.get($schema, '_meta', 'theme'),\r\n    ));\r\n}\r\n\r\n/// @param {Map} $theme - The theme used to style the component.\r\n@mixin input-group($theme) {\r\n    // The --variant CSS produced by css-vars is needed also\r\n    // when dynamically switching between the input `type` attribute.\r\n    @include css-vars($theme);\r\n\r\n    $variant: map.get($theme, 'variant');\r\n    $transition-timing: .25s $out-cubic;\r\n    $material-theme: $variant == 'material';\r\n    $indigo-theme: $variant == 'indigo-design';\r\n    $fluent-theme: $variant == 'fluent';\r\n    $bootstrap-theme: $variant == 'bootstrap';\r\n    $NOT-material-theme: $variant != 'material';\r\n    $NOT-indigo-theme: $variant != 'indigo-design';\r\n    $NOT-fluent-theme: $variant != 'fluent';\r\n    $NOT-bootstrap-theme: $variant != 'bootstrap';\r\n\r\n    $required-symbol: '*';\r\n    $required-symbol-margin: rem(2px);\r\n\r\n    // This creates an inverse relationship\r\n    // between the value of the base scale size and\r\n    // the sizing of all inner elements.\r\n    // i.e. the bigger the scale size,\r\n    // the smaller the padding of the inner items.\r\n    $base-scale-size: (\r\n        'comfortable': 16px,\r\n        'cosy': 19px,\r\n        'compact': 22px\r\n    );\r\n\r\n    $bootstrap-inline-padding: (\r\n        'comfortable': rem(16px),\r\n        'cosy':rem(12px),\r\n        'compact': rem(8px)\r\n    );\r\n\r\n    $bootstrap-block-padding: (\r\n        'comfortable': rem(8px),\r\n        'cosy': rem(6px),\r\n        'compact': rem(4px)\r\n    );\r\n\r\n    $bootstrap-font-size: (\r\n        'comfortable': rem(20px),\r\n        'cosy': rem(16px),\r\n        'compact': rem(14px),\r\n    );\r\n\r\n    $input-top-padding: rem(20px);\r\n    $input-bottom-padding: rem(6px);\r\n\r\n    $bundle-padding-top: (\r\n        'comfortable': rem(18px, map.get($base-scale-size, 'comfortable')),\r\n        'cosy': rem(18px, map.get($base-scale-size, 'cosy')),\r\n        'compact': rem(18px, map.get($base-scale-size, 'compact')),\r\n    );\r\n\r\n    $hint-spacing-block: map.get((\r\n        material: rem(5px),\r\n        fluent: rem(5px),\r\n        bootstrap: rem(4px),\r\n        indigo-design: rem(6px),\r\n    ), $variant);\r\n\r\n    $hint-spacing-inline: map.get((\r\n        material: rem(16px),\r\n        fluent: 0,\r\n        bootstrap: 0,\r\n        indigo-design: rem(12px),\r\n    ), $variant);\r\n\r\n    // Base Start\r\n    %form-group-prefix--upload {\r\n        padding: 0;\r\n    }\r\n\r\n    %form-group-prefix {\r\n        color: var-get($theme, 'input-prefix-color');\r\n        background: var-get($theme, 'input-prefix-background');\r\n        grid-area: 1 / 1 / auto / auto;\r\n    }\r\n\r\n    %form-group-suffix {\r\n        color: var-get($theme, 'input-suffix-color');\r\n        background: var-get($theme, 'input-suffix-background');\r\n        grid-area: 1 / 3 / auto / auto;\r\n    }\r\n\r\n    %form-group-prefix,\r\n    %form-group-suffix {\r\n        position: relative;\r\n        display: inline-flex;\r\n        width: max-content;\r\n        align-items: center;\r\n\r\n        @if $indigo-theme {\r\n            height: calc(100% - #{rem(1px)}) !important;\r\n        } @else {\r\n            height: 100% !important;\r\n        }\r\n        transition: color $transition-timing, background $transition-timing;\r\n\r\n        @if $material-theme {\r\n            padding-inline: pad-inline(rem(12px), rem(14px), rem(16px));\r\n        } @else {\r\n            padding-inline: pad-inline(rem(8px), rem(12px), rem(16px));\r\n        }\r\n    }\r\n\r\n    igx-input-group {\r\n        --theme: #{map.get($theme, 'variant')};\r\n    }\r\n\r\n    %form-group-display--box {\r\n        %form-group-border {\r\n            margin-bottom: 0;\r\n        }\r\n    }\r\n\r\n    %form-group-display {\r\n        --size: #{sizable(rem(40px), rem(48px), rem(56px))};\r\n        --component-size: var(--ig-size, var(--ig-size-large));\r\n\r\n        position: relative;\r\n        display: block;\r\n        color: var-get($theme, 'idle-text-color');\r\n\r\n        igx-prefix,\r\n        [igxPrefix] {\r\n            @extend %form-group-prefix;\r\n            outline-style: none;\r\n        }\r\n\r\n        igx-suffix,\r\n        [igxSuffix] {\r\n            @extend %form-group-suffix;\r\n            outline-style: none;\r\n        }\r\n\r\n        input,\r\n        textarea,\r\n        span {\r\n            font: inherit;\r\n            margin: 0;\r\n        }\r\n\r\n        input[type='file'] {\r\n            @include hide-default();\r\n        }\r\n\r\n        textarea {\r\n            overflow: auto;\r\n        }\r\n\r\n        input[type='number'] {\r\n            -moz-appearance: textfield;\r\n        }\r\n\r\n        // Don't show the number spinner\r\n        input[type='number']::-webkit-inner-spin-button {\r\n            -webkit-appearance: none;\r\n            height: auto;\r\n        }\r\n\r\n        input[type='search']::-webkit-search-cancel-button,\r\n        input[type='search']::-webkit-search-decoration {\r\n            -webkit-appearance: none;\r\n        }\r\n    }\r\n\r\n    %form-group-display--cosy {\r\n        --component-size: var(--ig-size, var(--ig-size-medium));\r\n\r\n        igx-icon,\r\n        igx-icon[igxPrefix],\r\n        igx-icon[igxSuffix] {\r\n            --component-size: var(--ig-size, var(--ig-size-medium));\r\n        }\r\n    }\r\n\r\n    %form-group-display--compact {\r\n        --component-size: var(--ig-size, var(--ig-size-small));\r\n\r\n        igx-icon,\r\n        igx-icon[igxPrefix],\r\n        igx-icon[igxSuffix] {\r\n            --component-size: var(--ig-size, var(--ig-size-small));\r\n        }\r\n    }\r\n\r\n    %form-group-display--no-margin {\r\n        margin-block-start: 0;\r\n    }\r\n\r\n    %form-group-display--filled {\r\n        color: var-get($theme, 'input-prefix-color--filled');\r\n\r\n        igx-prefix,\r\n        [igxPrefix] {\r\n            color: var-get($theme, 'input-prefix-color--filled');\r\n            background: var-get($theme, 'input-prefix-background--filled');\r\n        }\r\n\r\n        igx-suffix,\r\n        [igxSuffix] {\r\n            color: var-get($theme, 'input-suffix-color--filled');\r\n            background: var-get($theme, 'input-suffix-background--filled');\r\n        }\r\n    }\r\n\r\n    %form-group-display--focused {\r\n        color: var-get($theme, 'input-prefix-color--focused');\r\n\r\n        igx-prefix,\r\n        [igxPrefix] {\r\n            color: var-get($theme, 'input-prefix-color--focused');\r\n            background: var-get($theme, 'input-prefix-background--focused');\r\n        }\r\n\r\n        igx-suffix,\r\n        [igxSuffix] {\r\n            color: var-get($theme, 'input-suffix-color--focused');\r\n            background: var-get($theme, 'input-suffix-background--focused');\r\n        }\r\n    }\r\n\r\n    %form-group-display--disabled {\r\n        user-select: none;\r\n        color: var-get($theme, 'disabled-text-color') !important;\r\n\r\n        igx-prefix,\r\n        [igxPrefix] {\r\n            @extend %form-group-prefix--disabled;\r\n        }\r\n\r\n        igx-suffix,\r\n        [igxSuffix] {\r\n            @extend %form-group-suffix--disabled;\r\n        }\r\n    }\r\n\r\n    %form-group-box-wrapper {\r\n        @if $variant != 'bootstrap' {\r\n            border-radius: var-get($theme, 'box-border-radius');\r\n        }\r\n\r\n        @if $variant == 'material' {\r\n            border-end-start-radius: 0;\r\n            border-end-end-radius: 0;\r\n        }\r\n        overflow: hidden;\r\n    }\r\n\r\n    %form-group-bundle {\r\n        display: grid;\r\n        grid-template-columns: auto 1fr auto;\r\n        grid-area: 1 / 2 / span 1 / span 2;\r\n        height: var(--size);\r\n        position: relative;\r\n        max-width: 100%;\r\n        font-size: rem(16px);\r\n\r\n        &::after {\r\n            content: '';\r\n            position: absolute;\r\n            bottom: 0%;\r\n            width: 100%;\r\n            border-block-end: rem(1px) solid var-get($theme, 'idle-bottom-line-color');\r\n            transition: all $transition-timing\r\n        }\r\n\r\n        %form-group-bundle-start {\r\n            border: {\r\n                start: {\r\n                    start-radius: calc(var-get($theme, 'box-border-radius') - rem(1px));\r\n                };\r\n            }\r\n        }\r\n\r\n        %form-group-bundle-end {\r\n            border: {\r\n                start: {\r\n                    end-radius: calc(var-get($theme, 'box-border-radius') - rem(1px));\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // We need to target the bundle :after here with classes since we have cases that\r\n    // The theme is for example indigo but the input stays fluent, that's the case in the grid.\r\n    .igx-input-group--fluent,\r\n    .igx-input-group--bootstrap {\r\n        %form-group-bundle {\r\n            &::after {\r\n                display: none;\r\n            }\r\n        }\r\n    }\r\n\r\n    %form-group-bundle--hover {\r\n        cursor: pointer;\r\n\r\n        &::after {\r\n            border-block-end-width: rem(1px);\r\n            border-block-end-color: var-get($theme, 'hover-bottom-line-color');\r\n        }\r\n    }\r\n\r\n    %form-group-bundle--focus {\r\n        &::after {\r\n            border-block-end-width: rem(2px);\r\n            border-block-end-color: var-get($theme, 'focused-bottom-line-color');\r\n        }\r\n    }\r\n\r\n    %form-group-bundle--success {\r\n        &::after {\r\n            border-block-end-color: var-get($theme, 'success-secondary-color');\r\n        }\r\n    }\r\n\r\n    %form-group-bundle--error {\r\n        &::after {\r\n            border-block-end-color: var-get($theme, 'error-secondary-color');\r\n        }\r\n    }\r\n\r\n    %form-group-bundle--disabled {\r\n        cursor: default;\r\n\r\n        &::after {\r\n            border-block-end-color: var-get($theme, 'disabled-bottom-line-color');\r\n            border-block-end-style: dashed;\r\n        }\r\n    }\r\n\r\n    %form-group-bundle-start {\r\n        grid-area: 1 / 1;\r\n    }\r\n\r\n    %form-group-bundle-main {\r\n        grid-area: 1 / 2 / span 1 / span 2;\r\n        flex-grow: 1;\r\n        position: relative;\r\n        max-width: inherit;\r\n    }\r\n\r\n    %form-group-bundle--box {\r\n        // padding 0 is needed here because of the search variant\r\n        padding: 0 !important;\r\n\r\n        background: var-get($theme, 'box-background');\r\n\r\n        &:hover {\r\n            background: var-get($theme, 'box-background-hover');\r\n        }\r\n    }\r\n\r\n    %form-group-bundle--box-focus {\r\n        background: var-get($theme, 'box-background-focus');\r\n    }\r\n\r\n    %form-group-bundle--box-disabled {\r\n        background-color: var-get($theme, 'box-disabled-background');\r\n    }\r\n\r\n    @if $material-theme {\r\n        %form-group-bundle-main--box,\r\n        %form-group-notch--box {\r\n            padding-inline-start: rem(4px)\r\n        }\r\n    }\r\n\r\n    %igx-input-group__notch {\r\n        display: flex;\r\n        align-items: center;\r\n        width: auto;\r\n        min-width: 0;\r\n        height: 100%;\r\n        position: relative;\r\n\r\n        grid-area: 1 / 2;\r\n    }\r\n\r\n    %igx-input-group__notch--border {\r\n        padding: 0 rem(4px);\r\n    }\r\n\r\n    %igx-input-group__filler {\r\n        grid-area: 1 / 3;\r\n    }\r\n\r\n    %form-group-bundle-end {\r\n        grid-area: 1 / 4;\r\n    }\r\n\r\n\r\n    %form-group-bundle-start,\r\n    %form-group-bundle-end {\r\n        display: flex;\r\n        align-items: center;\r\n        min-width: 0;\r\n        min-height: 100%;\r\n\r\n        @if $variant == 'material' {\r\n            overflow: hidden;\r\n        }\r\n    }\r\n\r\n    %form-group-bundle-start--border,\r\n    %form-group-bundle-end--border,\r\n    %form-group-bundle-start--box,\r\n    %form-group-bundle-end--box {\r\n        @if $material-theme {\r\n            min-width: rem(12px);\r\n        }\r\n    }\r\n\r\n    %form-group-bundle--border {\r\n        grid-template-columns: auto auto 1fr auto;\r\n        display: grid;\r\n        align-items: initial;\r\n        padding: 0;\r\n        box-shadow: none;\r\n        border-radius: var-get($theme, 'border-border-radius');\r\n        background: var-get($theme, 'border-background');\r\n\r\n        %form-group-bundle-start {\r\n            width: auto;\r\n            flex-shrink: 0;\r\n\r\n            border: {\r\n                color: var-get($theme, 'border-color');\r\n                style: solid;\r\n\r\n                inline: {\r\n                    start-width: rem(1px);\r\n                    end-width: 0;\r\n                };\r\n\r\n                block: {\r\n                    start-width: rem(1px);\r\n                    end-width: rem(1px);\r\n                };\r\n\r\n                start: {\r\n                    start-radius: var-get($theme, 'border-border-radius');\r\n                };\r\n\r\n                end: {\r\n                    start-radius: var-get($theme, 'border-border-radius');\r\n                };\r\n            }\r\n        }\r\n\r\n        %igx-input-group__filler {\r\n            border: {\r\n                width: rem(1px);\r\n                style: solid;\r\n                color: var-get($theme, 'border-color');\r\n                left: none;\r\n                right: none;\r\n            }\r\n        }\r\n\r\n        %igx-input-group__notch {\r\n            border-block-start: rem(1px) solid var-get($theme, 'border-color');\r\n            border-block-end: rem(1px) solid var-get($theme, 'border-color');\r\n            overflow: visible;\r\n\r\n            %form-group-label {\r\n                position: relative;\r\n            }\r\n\r\n            &:empty {\r\n                display: none;\r\n            }\r\n        }\r\n\r\n        %form-group-bundle-end {\r\n            display: flex;\r\n            justify-content: flex-end;\r\n            flex-grow: 1;\r\n            height: 100%;\r\n            grid-area: 1 / 4;\r\n            min-width: rem(12px);\r\n\r\n            border: {\r\n                color: var-get($theme, 'border-color');\r\n                style: solid;\r\n\r\n                inline: {\r\n                    start-width: 0;\r\n                    end-width: rem(1px);\r\n                };\r\n\r\n                block: {\r\n                    start-width: rem(1px);\r\n                    end-width: rem(1px);\r\n                };\r\n\r\n                start: {\r\n                    end-radius: var-get($theme, 'border-border-radius');\r\n                };\r\n\r\n                end: {\r\n                    end-radius: var-get($theme, 'border-border-radius');\r\n                };\r\n            }\r\n        }\r\n\r\n        %form-group-prefix,\r\n        %form-group-suffix {\r\n            height: 100%;\r\n        }\r\n\r\n        &::after {\r\n            display: none;\r\n        }\r\n    }\r\n\r\n    %form-group-bundle-border--disabled {\r\n        background: var-get($theme, 'border-disabled-background');\r\n    }\r\n\r\n    %form-group-input--border {\r\n        width: 100%;\r\n        height: 100% !important;\r\n        padding-block: 0;\r\n        border: none;\r\n        outline-style: none;\r\n        z-index: 1;\r\n    }\r\n\r\n    /* stylelint-disable */\r\n    %igx-input-group__notch--search,\r\n    %form-group-bundle-main--search {\r\n        @if $material-theme {\r\n            padding-inline-start: pad-inline(rem(12px), rem(14px), rem(16px));\r\n        } @else {\r\n            padding-inline-start: pad-inline(rem(8px), rem(12px), rem(16px));\r\n        }\r\n    }\r\n\r\n    %igx-input-group__notch--search,\r\n    %form-group-bundle-main--search {\r\n        @if $material-theme {\r\n            padding-inline-end: pad-inline(rem(12px), rem(14px), rem(16px));\r\n        } @else {\r\n            padding-inline-end: pad-inline(rem(8px), rem(12px), rem(16px));\r\n        }\r\n    }\r\n    /* stylelint-enable */\r\n\r\n    %form-group-display--search.igx-input-group--prefixed {\r\n        %igx-input-group__notch--search,\r\n        %form-group-bundle-main--search {\r\n            padding-inline-start: 0;\r\n        }\r\n    }\r\n\r\n    %form-group-display--search.igx-input-group--suffixed {\r\n        %igx-input-group__notch--search,\r\n        %form-group-bundle-main--search {\r\n            padding-inline-end: 0;\r\n        }\r\n    }\r\n\r\n    %form-group-bundle--search {\r\n        background: var-get($theme, 'search-background');\r\n        box-shadow: var-get($theme, 'search-resting-shadow');\r\n\r\n        @if $variant != 'bootstrap' {\r\n            border-radius: var-get($theme, 'search-border-radius');\r\n            overflow: hidden;\r\n        }\r\n\r\n        &::after {\r\n            display: none;\r\n        }\r\n    }\r\n\r\n    %form-group-bundle-search--hover {\r\n        box-shadow: var-get($theme, 'search-hover-shadow');\r\n        border-color: var-get($theme, 'hover-border-color');\r\n    }\r\n\r\n    %form-group-bundle-search--focus {\r\n        box-shadow: var-get($theme, 'search-hover-shadow');\r\n        border-color: var-get($theme, 'hover-border-color');\r\n    }\r\n\r\n    %form-group-bundle-search--error {\r\n        box-shadow: var-get($theme, 'search-hover-shadow');\r\n        border-color: var-get($theme, 'search-hover-shadow');\r\n    }\r\n\r\n    %form-group-bundle-search--success {\r\n        box-shadow: var-get($theme, 'search-hover-shadow');\r\n        border-color: var-get($theme, 'search-hover-shadow');\r\n    }\r\n\r\n    %form-group-bundle-search--disabled {\r\n        background: var-get($theme, 'search-disabled-background');\r\n        box-shadow: var-get($theme, 'search-disabled-shadow');\r\n        border-color: var-get($theme, 'disabled-border-color');\r\n    }\r\n\r\n    %form-group-bundle-main--border {\r\n        background: transparent;\r\n        padding: 0 rem(4px);\r\n        font-size: rem(16px);\r\n        min-height: var(--size);\r\n    }\r\n\r\n    %form-group-label {\r\n        @include ellipsis();\r\n        max-width: 100%;\r\n        padding-inline-end: rem(4px);\r\n        line-height: normal;\r\n        backface-visibility: hidden;\r\n        will-change: transform;\r\n        transform-origin: top left;\r\n        transition: all $transition-timing;\r\n        margin-inline-start: pad-inline(0, rem(-2px), rem(-4px));\r\n        color: var-get($theme, 'idle-secondary-color');\r\n\r\n        [dir='rtl'] & {\r\n            transform-origin: top right;\r\n        }\r\n    }\r\n\r\n    %form-group-label--border {\r\n        padding-inline-end: 0;\r\n        display: inline-block;\r\n        position: relative;\r\n        background: transparent;\r\n    }\r\n\r\n    %form-group-label--border,\r\n    %form-group-label--search {\r\n        transform: translateY(0);\r\n    }\r\n\r\n    %form-group-label--search {\r\n        + %form-group-input--search {\r\n            transform: translateY(0);\r\n        }\r\n    }\r\n\r\n    %form-group-label--float {\r\n        --floating-label-position: -73%;\r\n        transform: translateY(var(--floating-label-position));\r\n        font-size: rem(12px);\r\n    }\r\n\r\n    %form-group-label--focused-border,\r\n    %form-group-label--filled-border,\r\n    %form-group-label--placeholder-border,\r\n    %form-group-label--file-border {\r\n        %igx-input-group__notch {\r\n            border-block-start-color: transparent !important;\r\n        }\r\n    }\r\n\r\n    %form-group-label--focused-border {\r\n        %form-group-bundle-start {\r\n            border-inline-start-width: rem(2px);\r\n            border-block-start-width: rem(2px);\r\n            border-block-end-width: rem(2px);\r\n            border-inline-start-color: var-get($theme, 'focused-border-color');\r\n            border-block-start-color: var-get($theme, 'focused-border-color');\r\n            border-block-end-color: var-get($theme, 'focused-border-color');\r\n        }\r\n\r\n        %form-group-bundle-end {\r\n            border-inline-end-width: rem(2px);\r\n            border-block-start-width: rem(2px);\r\n            border-block-end-width: rem(2px);\r\n            border-inline-end-color: var-get($theme, 'focused-border-color');\r\n            border-block-start-color: var-get($theme, 'focused-border-color');\r\n            border-block-end-color: var-get($theme, 'focused-border-color');\r\n        }\r\n\r\n        %igx-input-group__filler,\r\n        %igx-input-group__notch {\r\n            border-block-width: rem(2px);\r\n        }\r\n\r\n        %igx-input-group__filler {\r\n            border-block-color: var-get($theme, 'focused-border-color');\r\n        }\r\n\r\n        %igx-input-group__notch {\r\n            border-block-end-color: var-get($theme, 'focused-border-color');\r\n        }\r\n\r\n        %form-group-prefix {\r\n            &:first-child {\r\n                margin-inline-start: rem(-1px);\r\n            }\r\n        }\r\n\r\n        %form-group-suffix {\r\n            &:last-child {\r\n                margin-inline-end: rem(-1px);\r\n            }\r\n        }\r\n    }\r\n\r\n    %form-group-label--float-border {\r\n        --label-position: #{sizable(18px, 22px, 26px)};\r\n        transform: translateY(calc(var(--label-position) * -1));\r\n        font-size: rem(12px);\r\n        margin-top: 0;\r\n        overflow: hidden;\r\n        will-change: font-size, color, transform;\r\n    }\r\n\r\n    %form-group-textarea-group-bundle {\r\n        // 3 lines * 22px + 8px bottom padding + 8px top padding\r\n        --size: #{sizable(\r\n            rem(82px, map.get($base-scale-size, 'compact')),\r\n            rem(82px, map.get($base-scale-size, 'cosy')),\r\n            rem(82px, map.get($base-scale-size, 'comfortable'))\r\n        )};\r\n        min-height: var(--size) !important;\r\n        height: auto !important;\r\n\r\n        %form-group-label {\r\n            position: absolute;\r\n        }\r\n    }\r\n\r\n    %form-group-textarea-label {\r\n        transition-duration: 0ms;\r\n    }\r\n\r\n    @if $material-theme {\r\n        %textarea-group-label--focused {\r\n            transform: translateY(0);\r\n            top: calc(#{$input-top-padding} / 4);\r\n        }\r\n\r\n        %textarea-group-label--filled--border,\r\n        %textarea-group-label--focused--border {\r\n            top: 0;\r\n            transform: translateY(-50%);\r\n            margin-block-end: auto !important;\r\n        }\r\n\r\n        %textarea-group-notch--focused {\r\n            border-block-start-width: rem(2px);\r\n        }\r\n    }\r\n\r\n    %form-group-label--focus {\r\n        color: var-get($theme, 'focused-secondary-color');\r\n    }\r\n\r\n    %form-group-label--success {\r\n        color: var-get($theme, 'success-secondary-color');\r\n    }\r\n\r\n    %form-group-label--error {\r\n        color: var-get($theme, 'error-secondary-color');\r\n    }\r\n\r\n    %form-group-label--required {\r\n        &::after {\r\n            content: '#{$required-symbol}';\r\n            font-size: inherit;\r\n            vertical-align: top;\r\n            margin-inline-start: $required-symbol-margin; /* rem(2px) base is 16px */\r\n            display: inline-block;\r\n        }\r\n    }\r\n\r\n    %form-group-label--disabled {\r\n        color: var-get($theme, 'disabled-text-color') !important;\r\n    }\r\n\r\n    %form-group-input {\r\n        position: relative;\r\n        display: block;\r\n        border: none;\r\n        padding-block-start: $input-top-padding;\r\n        padding-block-end: $input-bottom-padding;\r\n        padding-inline-start: 0;\r\n        height: calc(var(--size) - 2px);\r\n        width: 100%;\r\n        min-width: 0;\r\n        background: transparent;\r\n        color: var-get($theme, 'filled-text-color');\r\n        outline-style: none;\r\n        box-shadow: none;\r\n        overflow: hidden;\r\n        text-overflow: ellipsis;\r\n\r\n        &:not([type='date']) {\r\n            line-height: 0 !important; /* Reset typography */\r\n        }\r\n\r\n        &::-webkit-input-placeholder {\r\n            line-height: normal;\r\n        }\r\n\r\n        &::placeholder {\r\n            color: var-get($theme, 'placeholder-color');\r\n            opacity: 1;\r\n            line-height: normal; /* Fix placeholder position in Safari */\r\n        }\r\n    }\r\n\r\n    %igx-input-group__notch:empty + %form-group-bundle-main {\r\n        %form-group-input {\r\n            padding-block: 0;\r\n        }\r\n    }\r\n\r\n    %form-group-file-input {\r\n        width: 100%;\r\n        max-width: 100%;\r\n        overflow: hidden;\r\n        padding-block-start: $input-top-padding;\r\n        padding-block-end: $input-bottom-padding;\r\n        height: calc(var(--size) - 2px);\r\n        color: var-get($theme, 'filled-text-color');\r\n\r\n        span {\r\n            @include ellipsis();\r\n            position: relative;\r\n            display: inline-block;\r\n            width: inherit;\r\n            max-width: inherit;\r\n            top: 50%;\r\n            transform: translateY(-50%);\r\n        }\r\n    }\r\n\r\n    %form-group-clear-icon {\r\n        &:focus {\r\n            background-color: color($color: 'primary', $variant: 500);\r\n            color: contrast-color($color: 'primary', $variant: 600);\r\n\r\n            @if $variant == 'material' {\r\n                background-color: transparent;\r\n                color: color($color: 'secondary', $variant: 500);\r\n            }\r\n\r\n            @if $variant == 'bootstrap' {\r\n                color: contrast-color($color: 'primary', $variant: 600);\r\n            }\r\n        }\r\n    }\r\n\r\n    %chrome-autofill-fix {\r\n        &:-webkit-autofill,\r\n        &:-webkit-autofill:hover,\r\n        &:-webkit-autofill:focus,\r\n        &:-webkit-autofill:active {\r\n            -webkit-transition-delay: 99999s;\r\n            transition-delay: 99999s;\r\n        }\r\n    }\r\n\r\n    %edge-clear-icon-fix {\r\n        &::-ms-clear {\r\n            display: none;\r\n        }\r\n    }\r\n\r\n    %form-group-file-input-indigo {\r\n        padding-block: 0;\r\n    }\r\n\r\n    %form-group-input--hover {\r\n        cursor: pointer;\r\n    }\r\n\r\n    %form-group-input--focus {\r\n        cursor: text;\r\n        color: var-get($theme, 'focused-text-color');\r\n    }\r\n\r\n    %form-group-input--disabled {\r\n        cursor: default;\r\n\r\n        color: var-get($theme, 'disabled-text-color') !important;\r\n\r\n        &::placeholder {\r\n            color: var-get($theme, 'disabled-placeholder-color');\r\n        }\r\n    }\r\n\r\n    %form-group-textarea {\r\n        --size: #{sizable(\r\n            rem(82px, map.get($base-scale-size, 'compact')),\r\n            rem(82px, map.get($base-scale-size, 'cosy')),\r\n            rem(82px, map.get($base-scale-size, 'comfortable'))\r\n        )};\r\n\r\n        min-height: var(--size);\r\n        height: auto;\r\n        resize: vertical;\r\n        overflow: hidden;\r\n\r\n        @if $material-theme {\r\n            padding: 0;\r\n        }\r\n\r\n        // resets typography styles\r\n        line-height: normal !important;\r\n\r\n        z-index: 1;\r\n\r\n        &:not([type='*']) {\r\n            line-height: normal !important; /* resets typography styles */\r\n        }\r\n    }\r\n\r\n    %form-group-notch--box-textarea {\r\n        padding-inline-start: 0;\r\n    }\r\n\r\n    %form-group-textarea-group-bundle-main {\r\n        overflow: hidden;\r\n        padding-inline-start: 0 !important;\r\n\r\n        @if $material-theme or $indigo-theme {\r\n            height: calc(100% - #{rem(2px)});\r\n            top: rem(1px);\r\n        }\r\n\r\n        @if $material-theme {\r\n            padding-block-start: $input-top-padding;\r\n        }\r\n    }\r\n\r\n    %form-group-textarea--disabled {\r\n        color: var-get($theme, 'disabled-text-color') !important;\r\n\r\n        &::placeholder {\r\n            color: var-get($theme, 'disabled-placeholder-color');\r\n        }\r\n    }\r\n\r\n    @if $material-theme {\r\n        %form-group-line {\r\n            position: absolute;\r\n            width: 100%;\r\n            inset-inline-end: 0;\r\n            height: rem(2px);\r\n            align-self: end;\r\n            transform: scaleX(0);\r\n            transform-origin: center;\r\n            background: var-get($theme, 'focused-secondary-color');\r\n            z-index: 1;\r\n        }\r\n    }\r\n\r\n    %form-group-line--success {\r\n        background: var-get($theme, 'success-secondary-color');\r\n    }\r\n\r\n    %form-group-border--success {\r\n        %form-group-bundle-start {\r\n            border-inline-start-color: var-get($theme, 'success-secondary-color');\r\n            border-block-start-color: var-get($theme, 'success-secondary-color');\r\n            border-block-end-color: var-get($theme, 'success-secondary-color');\r\n        }\r\n\r\n        %form-group-bundle-end {\r\n            border-inline-end-color: var-get($theme, 'success-secondary-color');\r\n            border-block-start-color: var-get($theme, 'success-secondary-color');\r\n            border-block-end-color: var-get($theme, 'success-secondary-color');\r\n        }\r\n\r\n        %igx-input-group__notch,\r\n        %igx-input-group__filler {\r\n            border-block-color: var-get($theme, 'success-secondary-color');\r\n        }\r\n    }\r\n\r\n    %form-group-line--warning {\r\n        background: var-get($theme, 'error-secondary-color');\r\n    }\r\n\r\n    %form-group-border--warning {\r\n        %form-group-bundle-start {\r\n            border-inline-start-color: var-get($theme, 'warning-secondary-color');\r\n            border-block-start-color: var-get($theme, 'warning-secondary-color');\r\n            border-block-end-color: var-get($theme, 'warning-secondary-color');\r\n        }\r\n\r\n        %form-group-bundle-end {\r\n            border-inline-end-color: var-get($theme, 'warning-secondary-color');\r\n            border-block-start-color: var-get($theme, 'warning-secondary-color');\r\n            border-block-end-color: var-get($theme, 'warning-secondary-color');\r\n        }\r\n\r\n        %igx-input-group__notch,\r\n        %igx-input-group__filler {\r\n            border-block-color: var-get($theme, 'warning-secondary-color');\r\n        }\r\n    }\r\n\r\n    %form-group-line--error {\r\n        background: var-get($theme, 'error-secondary-color');\r\n    }\r\n\r\n    %form-group-border--error {\r\n        %form-group-bundle-start {\r\n            border-inline-start-color: var-get($theme, 'error-secondary-color');\r\n            border-block-start-color: var-get($theme, 'error-secondary-color');\r\n            border-block-end-color: var-get($theme, 'error-secondary-color');\r\n        }\r\n\r\n        %form-group-bundle-end {\r\n            border-inline-end-color: var-get($theme, 'error-secondary-color');\r\n            border-block-start-color: var-get($theme, 'error-secondary-color');\r\n            border-block-end-color: var-get($theme, 'error-secondary-color');\r\n        }\r\n\r\n        %igx-input-group__notch,\r\n        %igx-input-group__filler {\r\n            border-block-color: var-get($theme, 'error-secondary-color');\r\n        }\r\n    }\r\n\r\n    %form-group-border--disabled {\r\n        %form-group-bundle-start {\r\n            border-inline-start-color: var-get($theme, 'disabled-border-color');\r\n            border-block-start-color: var-get($theme, 'disabled-border-color');\r\n            border-block-end-color: var-get($theme, 'disabled-border-color');\r\n        }\r\n\r\n        %form-group-bundle-end {\r\n            border-inline-end-color: var-get($theme, 'disabled-border-color');\r\n            border-block-start-color: var-get($theme, 'disabled-border-color');\r\n            border-block-end-color: var-get($theme, 'disabled-border-color');\r\n        }\r\n\r\n        %igx-input-group__notch,\r\n        %igx-input-group__filler {\r\n            border-block-color: var-get($theme, 'disabled-border-color');\r\n        }\r\n    }\r\n\r\n    %form-group-line--focus {\r\n        transform: scaleX(1);\r\n        transition: transform $transition-timing;\r\n    }\r\n\r\n    // Hides the border for border type input\r\n    %form-group-line--hidden {\r\n        display: none;\r\n    }\r\n\r\n    %form-group-helper {\r\n        color: var-get($theme, 'helper-text-color');\r\n        position: relative;\r\n        display: flex;\r\n        padding-block-start: $hint-spacing-block;\r\n        padding-inline-start: $hint-spacing-inline;\r\n\r\n        justify-content: space-between;\r\n\r\n        > * {\r\n            margin-inline-end: rem(8px);\r\n\r\n            &:last-child {\r\n                margin-inline-end: 0;\r\n            }\r\n        }\r\n\r\n        &:empty {\r\n            display: none;\r\n        }\r\n    }\r\n\r\n    %form-group-helper--success {\r\n        color: var-get($theme, 'success-secondary-color');\r\n    }\r\n\r\n    %form-group-helper--error {\r\n        color: var-get($theme, 'error-secondary-color');\r\n    }\r\n\r\n    %form-group-helper-item {\r\n        display: flex;\r\n        align-items: center;\r\n        position: relative;\r\n    }\r\n\r\n    %form-group-helper-item--start {\r\n        justify-content: flex-start;\r\n    }\r\n\r\n    %form-group-helper-item--end {\r\n        justify-content: flex-end;\r\n    }\r\n\r\n    %form-group-helper-item--start,\r\n    %form-group-helper-item--end {\r\n        width: 100%;\r\n    }\r\n\r\n    %form-group-prefix--disabled,\r\n    %form-group-suffix--disabled {\r\n        color: var-get($theme, 'disabled-text-color');\r\n        background: inherit;\r\n        pointer-events: none;\r\n    }\r\n\r\n    %form-group-helper--disabled {\r\n        color: var-get($theme, 'disabled-text-color');\r\n    }\r\n\r\n    // BASE END\r\n\r\n    // ==============================================\r\n\r\n    // INDIGO START\r\n    %form-group-bundle--indigo {\r\n        border-radius: var-get($theme, 'box-border-radius') var-get($theme, 'box-border-radius') 0 0;\r\n        transition: background $transition-timing;\r\n        padding-top: 0;\r\n\r\n        &:hover,\r\n        &:focus {\r\n            background: var-get($theme, 'box-background-hover');\r\n        }\r\n    }\r\n\r\n    %indigo-label--focused {\r\n        color: var-get($theme, 'focused-secondary-color');\r\n    }\r\n\r\n    %indigo-label--invalid {\r\n        color: var-get($theme, 'error-secondary-color');\r\n    }\r\n\r\n    %indigo-label--success {\r\n        color: var-get($theme, 'success-secondary-color');\r\n    }\r\n\r\n    %form-group-bundle--indigo-start {\r\n        min-width: rem(12px);\r\n    }\r\n\r\n    %form-group-input--indigo {\r\n        padding-block: rem(8px);\r\n        padding-inline-end: rem(12px);\r\n    }\r\n\r\n    %indigo--box-focused {\r\n        background: var-get($theme, 'box-background-hover');\r\n    }\r\n\r\n    %form-group-bundle--indigo--disabled {\r\n        background: transparent;\r\n\r\n        &:hover,\r\n        &:focus {\r\n            background: transparent;\r\n        }\r\n\r\n        &::after {\r\n            border-bottom-style: solid;\r\n        }\r\n    }\r\n    // INDIGO END\r\n\r\n    // ==============================================\r\n\r\n    // FLUENT START\r\n    // Input\r\n    %igx-input-group-fluent {\r\n        display: flex;\r\n        flex-direction: column;\r\n\r\n        igx-prefix,\r\n        [igxPrefix] {\r\n            @extend %form-group-prefix-fluent;\r\n        }\r\n\r\n        igx-suffix,\r\n        [igxSuffix] {\r\n            @extend %form-group-suffix-fluent;\r\n        }\r\n\r\n        igx-prefix,\r\n        [igxPrefix],\r\n        igx-suffix,\r\n        [igxSuffix] {\r\n            outline-style: none;\r\n        }\r\n\r\n        select {\r\n            width: calc(100% + #{rem(8px)});\r\n            margin-inline-start: rem(-8px) !important;\r\n            cursor: pointer !important;\r\n        }\r\n    }\r\n\r\n    %igx-input-group-fluent-search {\r\n        display: flex;\r\n        flex-direction: column;\r\n\r\n        igx-prefix,\r\n        [igxPrefix] {\r\n            overflow: hidden;\r\n        }\r\n    }\r\n\r\n    %igx-input-group-fluent-search--focused {\r\n        igx-prefix,\r\n        [igxPrefix] {\r\n            display: none;\r\n        }\r\n    }\r\n\r\n    // Bundle\r\n    %form-group-bundle-required--fluent {\r\n        &::before {\r\n            content: '*';\r\n            position: absolute;\r\n            top: rem(-8px);\r\n            inset-inline-start: calc(100% + #{rem(4px)});\r\n            color: var-get($theme, 'error-secondary-color');\r\n        }\r\n    }\r\n\r\n    %form-group-label-required--fluent {\r\n        &::after {\r\n            color: var-get($theme, 'error-secondary-color');\r\n        }\r\n    }\r\n\r\n    %form-group-label-required--disabled--fluent {\r\n        &::after {\r\n            color: var-get($theme, 'disabled-text-color');\r\n        }\r\n    }\r\n\r\n    %form-group-bundle--fluent {\r\n        --size: #{sizable(rem(32px), rem(40px), rem(48px))};\r\n        --min-width: #{sizable(rem(4px), rem(6px), rem(8px))};\r\n\r\n        min-height: var(--size);\r\n        padding: 0;\r\n        border: rem(1px) solid var-get($theme, 'border-color');\r\n        background: var-get($theme, 'border-background');\r\n        align-items: stretch;\r\n        overflow: hidden;\r\n\r\n        @if $variant == 'fluent' {\r\n            border-radius: var-get($theme, 'border-border-radius');\r\n        }\r\n\r\n        // Those focus styles are needed since when we focus the button inside\r\n        // the file type input the class .igx-input-group--focused is not added but the input is focused.\r\n        &:focus,\r\n        &:focus-within {\r\n            %form-group-bundle-start {\r\n                margin-block-start: rem(-1px);\r\n                margin-inline-start: rem(-1px);\r\n            }\r\n\r\n            %form-group-bundle-end {\r\n                margin-block-start: rem(-1px);\r\n                margin-inline-end: rem(-1px);\r\n            }\r\n\r\n            %form-group-bundle-start:empty + %form-group-bundle-main,\r\n            %form-group-bundle-end:empty + %form-group-bundle-main {\r\n                margin-inline-start: rem(-1px);\r\n            }\r\n\r\n            %form-group-bundle-main {\r\n                margin-block-start: rem(-1px);\r\n            }\r\n        }\r\n    }\r\n\r\n    %form-group-bundle--fluent--hover {\r\n        border-color: var-get($theme, 'hover-border-color');\r\n    }\r\n\r\n    %form-group-bundle--fluent--focus {\r\n        border-color: var-get($theme, 'focused-border-color');\r\n\r\n        @if $fluent-theme {\r\n            border-width: rem(2px);\r\n        }\r\n    }\r\n\r\n    %form-group-bundle-error--fluent,\r\n    %form-group-bundle-error--fluent--hover,\r\n    %form-group-bundle-error--fluent--focus {\r\n        border-color: var-get($theme, 'error-secondary-color');\r\n    }\r\n\r\n    %form-group-bundle-success--fluent,\r\n    %form-group-bundle-success--fluent--hover,\r\n    %form-group-bundle-success--fluent--focus {\r\n        border-color: var-get($theme, 'success-secondary-color');\r\n    }\r\n\r\n    %form-group-bundle--fluent--hover-disabled,\r\n    %form-group-bundle--fluent-disabled {\r\n        border-color: var-get($theme, 'disabled-border-color');\r\n        background: var-get($theme, 'border-disabled-background');\r\n    }\r\n\r\n    %form-group-bundle-main--fluent {\r\n        padding-inline-start: rem(8px);\r\n        align-self: center;\r\n        cursor: default;\r\n    }\r\n\r\n    @if $fluent-theme {\r\n        %form-group-bundle-start--fluent--focused {\r\n            margin-block-start: rem(-1px);\r\n            margin-inline-start: rem(-1px);\r\n        }\r\n\r\n        %form-group-bundle-end--fluent--focused {\r\n            margin-block-start: rem(-1px);\r\n            margin-inline-end: rem(-1px);\r\n        }\r\n\r\n        %form-group-bundle-start--fluent--focused:empty + %form-group-bundle-main--fluent--focused,\r\n        %form-group-bundle-end--fluent--focused:empty + %form-group-bundle-main--fluent--focused {\r\n            margin-inline-start: rem(-1px);\r\n        }\r\n\r\n        %form-group-bundle-main--fluent--focused {\r\n            margin-block-start: rem(-1px);\r\n        }\r\n    }\r\n\r\n    // Native input\r\n    %fluent-input {\r\n        font-size: rem(14px);\r\n        padding: 0;\r\n        margin: 0;\r\n        border: none;\r\n    }\r\n\r\n    %indigo-textarea,\r\n    %fluent-textarea {\r\n        padding: pad(rem(4px), rem(6px), rem(8px));\r\n    }\r\n\r\n    %fluent-input-disabled {\r\n        color: var-get($theme, 'disabled-text-color');\r\n    }\r\n\r\n    // Label\r\n    %fluent-label {\r\n        display: block;\r\n        font-size: rem(14px);\r\n        font-weight: 600;\r\n        position: static;\r\n        transform: translateY(0);\r\n        transform-origin: top left;\r\n        margin-top: 0 !important;\r\n        height: auto;\r\n        margin-block-end: rem(4px);\r\n        color: var-get($theme, 'idle-secondary-color');\r\n\r\n        [dir='rtl'] & {\r\n            transform-origin: top right;\r\n        }\r\n    }\r\n\r\n    %fluent-label + %form-group-bundle-required--fluent {\r\n        &::before {\r\n            display: none;\r\n        }\r\n    }\r\n\r\n    %fluent-label-success {\r\n        color: var-get($theme, 'idle-text-color');\r\n    }\r\n\r\n    %fluent-label-error {\r\n        color: var-get($theme, 'idle-text-color');\r\n    }\r\n\r\n    %fluent-label-disabled {\r\n        color: var-get($theme, 'disabled-text-color') !important;\r\n    }\r\n\r\n    %fluent-label-filled {\r\n        transform: translateY(0);\r\n    }\r\n\r\n    %fluent-label-focused {\r\n        color: color(null, 'gray', 800);\r\n        transform: translateY(0) scale(1);\r\n    }\r\n\r\n    %form-group-helper--textarea--fluent--focused {\r\n        margin-block-start: rem(-1px);\r\n    }\r\n\r\n    %fluent-placeholder-label {\r\n        transform: translateY(0) scale(1);\r\n    }\r\n\r\n    %form-group-prefix-fluent,\r\n    %form-group-suffix-fluent {\r\n        .ig-typography [igx-button],\r\n        .ig-typography igx-button,\r\n        .ig-typography button,\r\n        button {\r\n            border-radius: 0;\r\n            height: 100%;\r\n        }\r\n    }\r\n\r\n    .igx-input-group--fluent [igxPrefix],\r\n    .igx-input-group--fluent igx-prefix {\r\n        &:first-child {\r\n            [igxButton]::after,\r\n            button::after {\r\n                border: {\r\n                    start: {\r\n                        start-radius: var-get($theme, 'border-border-radius');\r\n                    };\r\n                    end: {\r\n                        start-radius: var-get($theme, 'border-border-radius');\r\n                    };\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    %form-group-prefix-fluent,\r\n    %form-group-suffix-fluent,\r\n    %form-group-prefix-fluent-search,\r\n    %form-group-suffix-fluent-search {\r\n        padding-inline: pad-inline(rem(8px), rem(12px), rem(16px));\r\n    }\r\n\r\n    %fluent-upload-button {\r\n        padding: 0;\r\n    }\r\n    // FLUENT END\r\n\r\n    // ==============================================\r\n\r\n    // === BOOTSTRAP START === //\r\n    // Input group host\r\n    %form-group-display--bootstrap-prefixed {\r\n        %bootstrap-file-input,\r\n        %bootstrap-input {\r\n            border: {\r\n                start: {\r\n                    start-radius: 0;\r\n                };\r\n                end: {\r\n                    start-radius: 0;\r\n                };\r\n            }\r\n        }\r\n    }\r\n\r\n    %form-group-display--bootstrap-suffixed {\r\n        %bootstrap-file-input,\r\n        %bootstrap-input {\r\n            border: {\r\n                start: {\r\n                    end-radius: 0;\r\n                };\r\n                end: {\r\n                    end-radius: 0;\r\n                };\r\n            }\r\n        }\r\n    }\r\n\r\n    %form-group-display--disabled-bootstrap {\r\n        background-image: none;\r\n\r\n        igx-prefix,\r\n        [igxPrefix] {\r\n            @extend %form-group-prefix--disabled-bootstrap;\r\n        }\r\n\r\n        igx-suffix,\r\n        [igxSuffix] {\r\n            @extend %form-group-suffix--disabled-bootstrap;\r\n        }\r\n\r\n        %form-group-bundle-start--bootstrap,\r\n        %form-group-bundle-end--bootstrap {\r\n            border-color: var-get($theme, 'disabled-border-color');\r\n        }\r\n    }\r\n\r\n    // Bundle\r\n    %form-group-bundle--bootstrap {\r\n        --size: #{sizable(rem(31px), rem(38px), rem(48px))};\r\n\r\n        padding: 0;\r\n        box-shadow: none;\r\n        z-index: 0;\r\n    }\r\n\r\n    %form-group-bundle--bootstrap-hover {\r\n        border: none;\r\n        box-shadow: none;\r\n    }\r\n\r\n    %form-group-bundle-start--bootstrap,\r\n    %form-group-bundle-end--bootstrap {\r\n        &:empty {\r\n            display: none;\r\n        }\r\n\r\n        border-width: rem(1px);\r\n        border-style: solid;\r\n        border-color: var-get($theme, 'border-color');\r\n        overflow: hidden;\r\n    }\r\n\r\n    %form-group-bundle-start--bootstrap {\r\n        grid-area: 1 / 1;\r\n\r\n        border: {\r\n            inline: {\r\n                start-width: rem(1px);\r\n                end-width: 0;\r\n            };\r\n            block: {\r\n                start-width: rem(1px);\r\n                end-width: rem(1px);\r\n            };\r\n            start: {\r\n                start-radius: var-get($theme, 'box-border-radius');\r\n            };\r\n            end: {\r\n                start-radius: var-get($theme, 'box-border-radius');\r\n            };\r\n        }\r\n    }\r\n    %form-group-bundle-end--bootstrap {\r\n        grid-area: 1 / 3;\r\n\r\n        border: {\r\n            inline: {\r\n                start-width: 0;\r\n                end-width: rem(1px);\r\n            };\r\n            block: {\r\n                start-width: rem(1px);\r\n                end-width: rem(1px);\r\n            };\r\n            start: {\r\n                end-radius: var-get($theme, 'box-border-radius');\r\n            };\r\n            end: {\r\n                end-radius: var-get($theme, 'box-border-radius');\r\n            };\r\n        }\r\n    }\r\n\r\n    // Label\r\n    %bootstrap-label {\r\n        position: static;\r\n        display: block;\r\n        color: var-get($theme, 'idle-secondary-color');\r\n        padding: 0;\r\n        line-height: rem(24px);\r\n        transform: translateY(0);\r\n        transform-origin: top left;\r\n        margin-block-start: 0 !important;\r\n        margin-block-end: rem(4px);\r\n        height: auto;\r\n        font-size: rem(16px);\r\n\r\n        [dir='rtl'] & {\r\n            transform-origin: top right;\r\n        }\r\n    }\r\n\r\n    // Native Input\r\n    %bootstrap-input {\r\n        height: auto;\r\n        line-height: 1.5;\r\n        margin: 0;\r\n        font-size: pad(\r\n            map.get($bootstrap-font-size, 'compact'),\r\n            map.get($bootstrap-font-size, 'cosy'),\r\n            map.get($bootstrap-font-size, 'comfortable')\r\n        );\r\n        padding-block: pad-inline(\r\n            map.get($bootstrap-block-padding, 'compact'),\r\n            map.get($bootstrap-block-padding, 'cosy'),\r\n            map.get($bootstrap-block-padding, 'comfortable')\r\n        );\r\n        padding-inline: pad-inline(\r\n            map.get($bootstrap-inline-padding, 'compact'),\r\n            map.get($bootstrap-inline-padding, 'cosy'),\r\n            map.get($bootstrap-inline-padding, 'comfortable')\r\n        );\r\n        transition: box-shadow .15s ease-out, border .15s ease-out;\r\n    }\r\n\r\n    %bootstrap-input,\r\n    %bootstrap-file-input {\r\n        border: rem(1px) solid var-get($theme, 'border-color');\r\n        padding-block: pad-inline(\r\n            map.get($bootstrap-block-padding, 'compact'),\r\n            map.get($bootstrap-block-padding, 'cosy'),\r\n            map.get($bootstrap-block-padding, 'comfortable')\r\n        );\r\n        padding-inline: pad-inline(\r\n            map.get($bootstrap-inline-padding, 'compact'),\r\n            map.get($bootstrap-inline-padding, 'cosy'),\r\n            map.get($bootstrap-inline-padding, 'comfortable')\r\n        );\r\n        grid-area: 1 / 2 / auto / auto;\r\n        border-radius: var-get($theme, 'box-border-radius');\r\n        z-index: 1;\r\n    }\r\n\r\n    %bootstrap-file-input {\r\n        height: inherit;\r\n    }\r\n\r\n    %bootstrap-input--focus {\r\n        border: rem(1px) solid var-get($theme, 'focused-border-color');\r\n        box-shadow: 0 0 0 rem(4px) var-get($theme, 'focused-secondary-color');\r\n    }\r\n\r\n    %bootstrap-input--success {\r\n        border: rem(1px) solid var-get($theme, 'success-secondary-color');\r\n        box-shadow: 0 0 0 rem(4px) var-get($theme, 'success-shadow-color');\r\n    }\r\n\r\n    %bootstrap-input--error {\r\n        border: rem(1px) solid var-get($theme, 'error-secondary-color');\r\n        box-shadow: 0 0 0 rem(4px) var-get($theme, 'error-shadow-color');\r\n    }\r\n\r\n    %bootstrap-input--disabled {\r\n        background: var-get($theme, 'border-disabled-background');\r\n        border: rem(1px) solid var-get($theme, 'disabled-border-color');\r\n        box-shadow: none;\r\n    }\r\n\r\n    %bootstrap-input--search {\r\n        transform: translateY(0);\r\n    }\r\n\r\n    %form-group-prefix--disabled-bootstrap,\r\n    %form-group-suffix--disabled-bootstrap {\r\n        background: var-get($theme, 'border-disabled-background');\r\n        border-color: var-get($theme, 'disabled-border-color');\r\n        color: var-get($theme, 'disabled-text-color');\r\n    }\r\n\r\n    // Upload button for file type input\r\n    %bootstrap-upload-button {\r\n        padding: 0;\r\n\r\n        [igxButton] {\r\n            min-height: 0;\r\n            height: calc(100% - #{rem(8px)});\r\n        }\r\n    }\r\n}\r\n\r\n/// Adds typography styles for the igx-input-group component.\r\n/// Uses the 'body-1', 'caption'\r\n/// category from the typographic scale.\r\n/// @group typography\r\n/// @param {Map} $categories [(helper-text: 'caption', input-text: 'subtitle-1')] - The categories from the typographic scale used for type styles.\r\n@mixin input-group-typography(\r\n    $categories: (\r\n        helper-text: 'caption',\r\n        input-text: 'subtitle-1'\r\n    )\r\n) {\r\n    $helper-text: map.get($categories, 'helper-text');\r\n    $input-text: map.get($categories, 'input-text');\r\n\r\n    %form-group-input {\r\n        @include type-style($input-text) {\r\n            margin: 0;\r\n        }\r\n    }\r\n\r\n    %form-group-helper {\r\n        @include type-style($helper-text) {\r\n            margin: 0;\r\n        }\r\n    }\r\n\r\n    %form-group-prefix,\r\n    %form-group-suffix {\r\n        &:not(igx-icon) {\r\n            @include type-style($input-text) {\r\n                margin: 0;\r\n            }\r\n        }\r\n    }\r\n}\r\n","@use 'sass:map';\r\n@use 'sass:meta';\r\n@use 'sass:color';\r\n@use '../../base' as *;\r\n@use '../../themes/schemas' as *;\r\n@use 'igniteui-theming/sass/animations/easings' as *;\r\n\r\n////\r\n/// @group themes\r\n/// @access public\r\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\r\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\r\n////\r\n\r\n/// @param {Map} $schema [$light-material-schema] - The schema used as basis for styling the component.\r\n/// @param {Color} $background [null] - The list background color.\r\n/// @param {Color} $header-background [null] - The list header background color.\r\n/// @param {Color} $header-text-color [null] - The list header text color.\r\n/// @param {Color} $item-background [null] - The list item background color.\r\n/// @param {Color} $item-background-hover [null] - The list item hover background color.\r\n/// @param {Color} $item-background-active [null] - The active list item background color.\r\n/// @param {Color} $item-text-color [null] - The list item text color.\r\n/// @param {Color} $item-text-color-hover [null] - The list item hover text color.\r\n/// @param {Color} $item-text-color-active [null] - The active list item text color.\r\n/// @param {Color} $item-title-color [null] - The list item title color.\r\n/// @param {Color} $item-title-color-hover [null] - The list item hover title color.\r\n/// @param {Color} $item-title-color-active [null] - The active list item title color.\r\n/// @param {Color} $item-subtitle-color [null] - The list item subtitle color.\r\n/// @param {Color} $item-subtitle-color-hover [null] - The list item hover subtitle color.\r\n/// @param {Color} $item-subtitle-color-active [null] - The active list item subtitle color.\r\n/// @param {Color} $item-action-color [null] - The list item action color.\r\n/// @param {Color} $item-action-color-hover [null] - The list item hover action color.\r\n/// @param {Color} $item-action-color-active [null] - The active list item action color.\r\n/// @param {Color} $item-thumbnail-color [null] - The list item thumbnail color.\r\n/// @param {Color} $item-thumbnail-color-hover [null] - The list item hover thumbnail color.\r\n/// @param {Color} $item-thumbnail-color-active [null] - The active list item thumbnail color.\r\n/// @param {List} $border-radius [null] - The border radius used for list component.\r\n/// @param {List} $item-border-radius [null] - The border radius used for list item.\r\n/// @param {Color} $border-width [null] - The list border width.\r\n/// @param {Number} $border-color [null] - The list border color.\r\n/// @requires $light-material-schema\r\n/// @example scss Change the list background color\r\n///   $my-list-theme: list-theme($background: black);\r\n///   // Pass the theme to the css-vars() mixin\r\n///   @include css-vars($my-list-theme);\r\n@function list-theme(\r\n    $schema: $light-material-schema,\r\n\r\n    $border-radius: null,\r\n    $item-border-radius: null,\r\n    $background: null,\r\n    $header-background: null,\r\n    $header-text-color: null,\r\n    $item-background: null,\r\n    $item-background-hover: null,\r\n    $item-background-active: null,\r\n    $item-text-color: null,\r\n    $item-text-color-hover: null,\r\n    $item-text-color-active: null,\r\n    $item-title-color: null,\r\n    $item-title-color-hover: null,\r\n    $item-title-color-active: null,\r\n    $item-subtitle-color: null,\r\n    $item-subtitle-color-hover: null,\r\n    $item-subtitle-color-active: null,\r\n    $item-action-color: null,\r\n    $item-action-color-hover: null,\r\n    $item-action-color-active: null,\r\n    $item-thumbnail-color: null,\r\n    $item-thumbnail-color-hover: null,\r\n    $item-thumbnail-color-active: null,\r\n    $border-color: null,\r\n    $border-width: null,\r\n) {\r\n    $name: 'igx-list';\r\n    $list-schema: ();\r\n\r\n    @if map.has-key($schema, 'list') {\r\n        $list-schema: map.get($schema, 'list');\r\n    } @else {\r\n        $list-schema: $schema;\r\n    }\r\n\r\n    $theme: digest-schema($list-schema);\r\n    $meta: map.get($theme, '_meta');\r\n\r\n    @if not($header-background) and $background {\r\n        $header-background: $background;\r\n    }\r\n\r\n    @if not($header-background) and $item-background {\r\n        $header-background: $item-background;\r\n    }\r\n\r\n    @if not($item-background) and $background {\r\n        $item-background: $background;\r\n    }\r\n\r\n    @if not($background) and $item-background {\r\n        $background: $item-background;\r\n    }\r\n\r\n    @if not($item-background-hover) and $item-background {\r\n        @if meta.type-of($item-background) == 'color' {\r\n            @if luminance($item-background) < .5 {\r\n                $item-background-hover: color.scale($item-background, $lightness: 8%);\r\n            } @else {\r\n                $item-background-hover: color.scale($item-background, $lightness: -8%);\r\n            }\r\n        }\r\n    }\r\n\r\n    @if not($item-background-active) and $item-background {\r\n        @if meta.type-of($item-background) == 'color' {\r\n            @if luminance($item-background) < .5 {\r\n                $item-background-active: color.scale($item-background, $lightness: 8%);\r\n            } @else {\r\n                $item-background-active: color.scale($item-background, $lightness: -8%);\r\n            }\r\n        }\r\n    }\r\n\r\n    @if not($header-text-color) and $header-background {\r\n        $header-text-color: text-contrast($header-background);\r\n    }\r\n\r\n    @if not($item-text-color) and $item-background {\r\n        $item-text-color: text-contrast($item-background);\r\n    }\r\n\r\n    @if not($item-title-color) and $item-background {\r\n        $item-title-color: text-contrast($item-background);\r\n    }\r\n\r\n    @if not($item-action-color) and $item-background {\r\n        $item-action-color: text-contrast($item-background);\r\n    }\r\n\r\n    @if not($item-thumbnail-color) and $item-background {\r\n        $item-thumbnail-color: text-contrast($item-background);\r\n    }\r\n\r\n    @if not($item-subtitle-color) and $item-background {\r\n        @if meta.type-of($item-background) == 'color' {\r\n            $item-subtitle-color: rgba(text-contrast($item-background), .74);\r\n        }\r\n    }\r\n\r\n    @if not($item-subtitle-color) and $item-text-color {\r\n        $item-subtitle-color: $item-text-color;\r\n    }\r\n\r\n    @if not($item-text-color-hover) and $item-background-hover {\r\n        $item-text-color-hover: text-contrast($item-background-hover);\r\n    }\r\n\r\n    @if not($item-title-color-hover) and $item-background-hover {\r\n        $item-title-color-hover: text-contrast($item-background-hover);\r\n    }\r\n\r\n    @if not($item-action-color-hover) and $item-background-hover {\r\n        $item-action-color-hover: text-contrast($item-background-hover);\r\n    }\r\n\r\n    @if not($item-thumbnail-color-hover) and $item-background-hover {\r\n        $item-thumbnail-color-hover: text-contrast($item-background-hover);\r\n    }\r\n\r\n    @if not($item-subtitle-color-hover) and $item-background-hover {\r\n        @if meta.type-of($item-background-hover) == 'color' {\r\n            $item-subtitle-color-hover: rgba(text-contrast($item-background-hover), .74);\r\n        }\r\n    }\r\n\r\n    @if not($item-subtitle-color-hover) and $item-text-color-hover {\r\n        $item-subtitle-color-hover: $item-text-color-hover;\r\n    }\r\n\r\n    @if not($item-text-color-active) and $item-background-active {\r\n        $item-text-color-active: text-contrast($item-background-active);\r\n    }\r\n\r\n    @if not($item-title-color-active) and $item-background-active {\r\n        $item-title-color-active: text-contrast($item-background-active);\r\n    }\r\n\r\n    @if not($item-action-color-active) and $item-background-active {\r\n        $item-action-color-active: text-contrast($item-background-active);\r\n    }\r\n\r\n    @if not($item-thumbnail-color-active) and $item-background-active {\r\n        $item-thumbnail-color-active: text-contrast($item-background-active);\r\n    }\r\n\r\n    @if not($item-subtitle-color-active) and $item-background-active {\r\n        @if meta.type-of($item-background-active) == 'color' {\r\n            $item-subtitle-color-active: rgba(text-contrast($item-background-active), .74);\r\n        }\r\n    }\r\n\r\n    @if not($item-subtitle-color-active) and $item-text-color-active {\r\n        $item-subtitle-color-active: $item-text-color-active;\r\n    }\r\n\r\n    @if not($border-radius) {\r\n        $border-radius: border-radius(map.get($theme, 'border-radius')...);\r\n    }\r\n\r\n    @if not($item-border-radius) {\r\n        $item-border-radius: border-radius(map.get($theme, 'item-border-radius')...);\r\n    }\r\n\r\n    @return extend($theme, (\r\n        name: $name,\r\n        border-radius: $border-radius,\r\n        item-border-radius: $item-border-radius,\r\n        background: $background,\r\n        header-background: $header-background,\r\n        header-text-color: $header-text-color,\r\n        item-background: $item-background,\r\n        item-background-hover: $item-background-hover,\r\n        item-background-active: $item-background-active,\r\n        item-text-color: $item-text-color,\r\n        item-text-color-hover: $item-text-color-hover,\r\n        item-text-color-active: $item-text-color-active,\r\n        item-title-color:$item-title-color,\r\n        item-title-color-hover:$item-title-color-hover,\r\n        item-title-color-active:$item-title-color-active,\r\n        item-subtitle-color: $item-subtitle-color,\r\n        item-subtitle-color-hover: $item-subtitle-color-hover,\r\n        item-subtitle-color-active: $item-subtitle-color-active,\r\n        item-action-color: $item-action-color,\r\n        item-action-color-hover: $item-action-color-hover,\r\n        item-action-color-active: $item-action-color-active,\r\n        item-thumbnail-color: $item-thumbnail-color,\r\n        item-thumbnail-color-hover: $item-thumbnail-color-hover,\r\n        item-thumbnail-color-active: $item-thumbnail-color-active,\r\n        border-color: $border-color,\r\n        border-width: $border-width,\r\n        _meta: map.merge(if($meta, $meta, ()), (\r\n            variant: map.get($schema, '_meta', 'theme')\r\n        )),\r\n    ));\r\n}\r\n\r\n/// @param {Map} $theme - The theme used to style the component.\r\n@mixin list($theme) {\r\n    @include css-vars($theme);\r\n\r\n    $variant: map.get($theme, '_meta', 'variant');\r\n    $bootstrap-theme: $variant == 'bootstrap';\r\n\r\n    $list-item-padding-inline: (\r\n        comfortable: rem(16px),\r\n        cosy: rem(8px),\r\n        compact: rem(4px)\r\n    );\r\n\r\n    $list-item-padding-block: (\r\n        comfortable: rem(8px),\r\n        cosy: rem(4px),\r\n        compact: rem(2px)\r\n    );\r\n\r\n    $list-icon-margin-inline: (\r\n        comfortable: rem(16px),\r\n        cosy: rem(8px),\r\n        compact: rem(4px)\r\n    );\r\n\r\n    $list-icon-margin-block: (\r\n        comfortable: rem(8px),\r\n        cosy: rem(6px),\r\n        compact: rem(4px)\r\n    );\r\n\r\n    $list-line-margin: (\r\n        comfortable: rem(16px),\r\n        cosy: rem(12px),\r\n        compact: rem(8px)\r\n    );\r\n\r\n    $list-actions-margin: (\r\n        comfortable: rem(8px),\r\n        cosy: rem(6px),\r\n        compact: rem(4px)\r\n    );\r\n\r\n    %igx-list {\r\n        position: relative;\r\n        display: flex;\r\n        flex-flow: column nowrap;\r\n        background: var-get($theme, 'background');\r\n        height: auto;\r\n        overflow-y: auto;\r\n        overflow-x: hidden;\r\n        z-index: 0;\r\n        border-radius: var-get($theme, 'border-radius');\r\n    }\r\n\r\n    %igx-list--empty {\r\n        justify-content: center;\r\n        align-items: center;\r\n    }\r\n\r\n    %igx-list__message--empty {\r\n        text-align: center;\r\n        color: var-get($theme, 'item-text-color');\r\n        padding: rem(16px);\r\n        z-index: 1;\r\n    }\r\n\r\n    %igx-list-header {\r\n        --component-size: var(--ig-size, var(--ig-size-large));\r\n        display: flex;\r\n        align-items: center;\r\n        color: var-get($theme, 'header-text-color');\r\n        background: var-get($theme, 'header-background');\r\n        padding-inline: pad-inline(map.get($list-item-padding-inline, 'compact'), map.get($list-item-padding-inline, 'cosy'), map.get($list-item-padding-inline, 'comfortable'));\r\n        padding-block: pad-block(map.get($list-item-padding-block, 'compact'), map.get($list-item-padding-block, 'cosy'), map.get($list-item-padding-block, 'comfortable'));\r\n        user-select: none;\r\n    }\r\n\r\n    %igx-list-item-base {\r\n        display: flex;\r\n        flex-flow: column wrap;\r\n        justify-content: center;\r\n        border-radius: var-get($theme, 'item-border-radius');\r\n        color: var-get($theme, 'item-text-color');\r\n        background: var-get($theme, 'item-background');\r\n\r\n        @if $bootstrap-theme {\r\n            border-bottom: var-get($theme, 'border-width') solid var-get($theme, 'border-color');\r\n\r\n            &:last-of-type {\r\n                border-bottom: none;\r\n            }\r\n        }\r\n\r\n        &:hover {\r\n            color: var-get($theme, 'item-text-color-hover');\r\n            background: var-get($theme, 'item-background-hover');\r\n\r\n            %igx-list__item-lines {\r\n                color: currentColor;\r\n            }\r\n\r\n            %igx-list__item-line-title {\r\n                color: var-get($theme, 'item-title-color-hover');\r\n            }\r\n\r\n            %igx-list__item-line-subtitle {\r\n                color: var-get($theme, 'item-subtitle-color-hover');\r\n            }\r\n\r\n            %igx-list__item-actions {\r\n                color: var-get($theme, 'item-action-color-hover');\r\n\r\n                igx-icon {\r\n                    color: var-get($theme, 'item-action-color-hover')\r\n                }\r\n            }\r\n\r\n            %igx-list__item-thumbnail {\r\n                color: var-get($theme, 'item-thumbnail-color-hover');\r\n\r\n                igx-icon {\r\n                    color: var-get($theme, 'item-thumbnail-color-hover')\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    %igx-list-item-pan {\r\n        position: absolute;\r\n        visibility: hidden;\r\n        display: flex;\r\n        z-index: 1;\r\n    }\r\n\r\n    %igx-list__item-lines {\r\n        color: currentColor;\r\n        display: flex;\r\n        flex-direction: column;\r\n        flex: 1 0 0%;\r\n\r\n        &:empty {\r\n            display: none;\r\n        }\r\n    }\r\n\r\n    %igx-list__item-line-subtitle {\r\n        color: var-get($theme, 'item-subtitle-color');\r\n        opacity: .74\r\n    }\r\n\r\n    %igx-list__item-line-title {\r\n        color: var-get($theme, 'item-title-color');\r\n    }\r\n\r\n    %igx-list__item-actions {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        color: var-get($theme, 'item-action-color');\r\n\r\n        > * {\r\n            --component-size: var(--ig-size, var(--ig-size-large));\r\n            margin-inline-start: pad-inline(map.get($list-actions-margin, 'compact'), map.get($list-actions-margin, 'cosy'), map.get($list-actions-margin, 'comfortable'));\r\n        }\r\n\r\n        &:empty {\r\n            display: none;\r\n        }\r\n\r\n        igx-icon {\r\n            color: var-get($theme, 'item-action-color')\r\n        }\r\n\r\n        [dir='rtl'] & {\r\n            igx-icon {\r\n                transform: scaleX(-1);\r\n            }\r\n        }\r\n    }\r\n\r\n    %igx-list-item-content {\r\n        --component-size: var(--ig-size, var(--ig-size-large));\r\n        display: flex;\r\n        align-items: center;\r\n        position: relative;\r\n        padding-inline: pad-inline(map.get($list-item-padding-inline, 'compact'), map.get($list-item-padding-inline, 'cosy'), map.get($list-item-padding-inline, 'comfortable'));\r\n        padding-block: pad-block(map.get($list-item-padding-block, 'compact'), map.get($list-item-padding-block, 'cosy'), map.get($list-item-padding-block, 'comfortable'));\r\n        border-radius: var-get($theme, 'item-border-radius');\r\n        background: inherit;\r\n        z-index: 2;\r\n    }\r\n\r\n    %igx-list-header--cosy,\r\n    %igx-list-item-content--cosy {\r\n        --component-size: var(--ig-size, var(--ig-size-medium));\r\n    }\r\n\r\n    %igx-list-header--compact,\r\n    %igx-list-item-content--compact {\r\n        --component-size: var(--ig-size, var(--ig-size-small));\r\n    }\r\n\r\n    %igx-list__item-thumbnail {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        align-self: flex-start;\r\n        padding: 0;\r\n        color: var-get($theme, 'item-thumbnail-color');\r\n\r\n        > igx-icon {\r\n            --component-size: var(--ig-size, var(--ig-size-large));\r\n            margin-inline-end: pad-inline(map.get($list-icon-margin-inline, 'compact'), map.get($list-icon-margin-inline, 'cosy'), map.get($list-icon-margin-inline, 'comfortable'));\r\n            margin-inline-start: 0;\r\n            margin-block: pad-block(map.get($list-icon-margin-block, 'compact'), map.get($list-icon-margin-block, 'cosy'), map.get($list-icon-margin-block, 'comfortable'));\r\n        }\r\n\r\n        > igx-avatar {\r\n            > igx-icon {\r\n                margin: 0;\r\n            }\r\n        }\r\n\r\n        &:empty {\r\n            display: none;\r\n        }\r\n    }\r\n\r\n    %igx-list__item-thumbnail:not(:empty) + %igx-list__item-lines {\r\n        --component-size: var(--ig-size, var(--ig-size-large));\r\n        margin: 0;\r\n        margin-inline-start: pad-inline(map.get($list-line-margin, 'compact'), map.get($list-line-margin, 'cosy'), map.get($list-line-margin, 'comfortable'));\r\n    }\r\n\r\n    %igx-list__item-thumbnail--cosy:not(:empty) + %igx-list__item-lines,\r\n    %igx-list__item-thumbnail--cosy > igx-icon,\r\n    %igx-list__item-actions--cosy > * {\r\n        --component-size: var(--ig-size, var(--ig-size-medium));\r\n    }\r\n\r\n    %igx-list__item-thumbnail--compact:not(:empty) + %igx-list__item-lines,\r\n    %igx-list__item-thumbnail--compact > igx-icon,\r\n    %igx-list__item-actions--compact > * {\r\n        --component-size: var(--ig-size, var(--ig-size-small));\r\n    }\r\n\r\n    %igx-list__item-lines + %igx-list__item-actions {\r\n        margin-inline-start: rem(8px);\r\n    }\r\n\r\n    %igx-list-item-content--active {\r\n        %igx-list__item-line-title {\r\n            color: var-get($theme, 'item-title-color-active')\r\n        }\r\n\r\n        %igx-list__item-line-subtitle {\r\n            color: var-get($theme, 'item-subtitle-color-active')\r\n        }\r\n\r\n        %igx-list__item-actions {\r\n            color: var-get($theme, 'item-action-color-active');\r\n\r\n            igx-icon {\r\n                color: var-get($theme, 'item-action-color-active')\r\n            }\r\n        }\r\n\r\n        %igx-list__item-thumbnail {\r\n            color: var-get($theme, 'item-thumbnail-color-active');\r\n\r\n            igx-icon {\r\n                color: var-get($theme, 'item-thumbnail-color-active')\r\n            }\r\n        }\r\n\r\n        color: var-get($theme, 'item-text-color-active');\r\n        background: var-get($theme, 'item-background-active');\r\n        z-index: 3;\r\n    }\r\n\r\n    %igx-list-item-content--inactive {\r\n        transition: transform .3s $out-quad;\r\n    }\r\n}\r\n\r\n/// Adds typography styles for the igx-list component.\r\n/// Uses the 'caption' and 'subtitle-1'\r\n/// categories from the typographic scale.\r\n/// @group typography\r\n/// @param {Map} $categories [(header: 'overline', item: 'subtitle-1', title: 'subtitle-1', subtitle: 'caption')] - The categories from the typographic scale used for type styles.\r\n@mixin list-typography(\r\n    $categories: (\r\n        header: 'overline',\r\n        item: 'subtitle-1',\r\n        title: 'subtitle-1',\r\n        subtitle: 'caption'\r\n    )\r\n) {\r\n    $header: map.get($categories, 'header');\r\n    $item: map.get($categories, 'item');\r\n    $title: map.get($categories, 'title');\r\n    $subtitle: map.get($categories, 'subtitle');\r\n\r\n    %igx-list-header {\r\n        @include type-style($header) {\r\n            margin: 0;\r\n        }\r\n    }\r\n\r\n    %igx-list-item {\r\n        @include type-style($item) {\r\n            margin: 0;\r\n        }\r\n    }\r\n\r\n    %igx-list__item-lines,\r\n    %igx-list__item-line-title {\r\n        @include type-style($title) {\r\n            margin: 0;\r\n        }\r\n    }\r\n\r\n    %igx-list__item-line-subtitle {\r\n        @include type-style($subtitle) {\r\n            margin: 0;\r\n        }\r\n    }\r\n}\r\n","@use 'sass:map';\r\n@use '../../base' as *;\r\n@use '../../themes/schemas' as *;\r\n@use 'igniteui-theming/sass/animations/easings' as *;\r\n\r\n////\r\n/// @group themes\r\n/// @access public\r\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\r\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\r\n////\r\n\r\n/// @param {Map} $schema [$light-material-schema] - The schema used as basis for styling the component.\r\n/// @param {Map} $elevations [null] - The elevations (shadows) map to be used.\r\n///\r\n/// @param {Color} $background [null] - The navbar background color.\r\n/// @param {Color} $text-color [null] - The navbar text color.\r\n/// @param {box-shadow} $shadow [null] - The shadow of the navbar.\r\n/// @param {Color} $idle-icon-color [null] - The navbar idle icon color.\r\n/// @param {Color} $hover-icon-color [null] - The navbar hover icon color.\r\n/// @param {Bool} $disable-shadow [true] - Sets the navbar shadow visibility.\r\n/// @requires $light-material-schema\r\n/// @example scss Change the background color\r\n///   $my-navbar-theme: navbar-theme($background: green);\r\n///   // Pass the theme to the css-vars() mixin\r\n///   @include css-vars($my-navbar-theme);\r\n@function navbar-theme(\r\n    $schema: $light-material-schema,\r\n    $elevations: null,\r\n\r\n    $background: null,\r\n    $text-color: null,\r\n    $shadow: null,\r\n    $idle-icon-color: null,\r\n    $hover-icon-color: null,\r\n    $disable-shadow: false\r\n) {\r\n    $name: 'igx-navbar';\r\n    $navbar-schema: ();\r\n\r\n    @if map.has-key($schema, 'navbar') {\r\n        $navbar-schema: map.get($schema, 'navbar');\r\n    } @else {\r\n        $navbar-schema: $schema;\r\n    }\r\n\r\n    $theme: digest-schema($navbar-schema);\r\n    $meta: map.get($theme, '_meta');\r\n\r\n    @if not($text-color) and $background {\r\n        $text-color: text-contrast($background);\r\n    }\r\n\r\n    @if not($idle-icon-color) and $background {\r\n        $idle-icon-color: text-contrast($background);\r\n    }\r\n\r\n    @if not($hover-icon-color) and $background {\r\n        $hover-icon-color: text-contrast($background);\r\n    }\r\n\r\n    @if not($shadow) {\r\n        $elevation: map.get($navbar-schema, 'elevation');\r\n        $shadow: elevation($elevation);\r\n    }\r\n\r\n    @if $disable-shadow {\r\n        $shadow: none;\r\n    }\r\n\r\n    @return extend($theme, (\r\n        name: $name,\r\n        background: $background,\r\n        text-color: $text-color,\r\n        idle-icon-color: $idle-icon-color,\r\n        hover-icon-color: $hover-icon-color,\r\n        shadow: $shadow,\r\n        _meta: map.merge(if($meta, $meta, ()), (\r\n            variant: map.get($schema, '_meta', 'theme')\r\n        )),\r\n    ));\r\n}\r\n\r\n/// @param {Map} $theme - The theme used to style the component.\r\n@mixin navbar($theme) {\r\n    @include css-vars($theme);\r\n    $variant: map.get($theme, '_meta', 'variant');\r\n\r\n    $navbar-padding: rem(16px);\r\n    $navbar-title-fz: rem(18px, 16px);\r\n    $navbar-title-lh: rem(18px, 16px);\r\n    $navbar-title-margin: 0;\r\n\r\n    %igx-navbar-display {\r\n        display: flex;\r\n        position: relative;\r\n        flex-flow: row nowrap;\r\n        align-items: center;\r\n        justify-content: space-between;\r\n        width: 100%;\r\n        min-height: rem(56px);\r\n        max-height: rem(128px);\r\n        padding-inline: $navbar-padding;\r\n        background: var-get($theme, 'background');\r\n        color: var-get($theme, 'text-color');\r\n        box-shadow: var-get($theme, 'shadow');\r\n        z-index: 4;\r\n        overflow: hidden;\r\n    }\r\n\r\n    %igx-navbar-part {\r\n        display: flex;\r\n        align-items: center;\r\n    }\r\n\r\n    %igx-navbar-title {\r\n        @include line-clamp(4, true, true);\r\n        margin: $navbar-title-margin;\r\n        flex-grow: 1;\r\n        user-select: text;\r\n        display: flex;\r\n        flex-direction: row\r\n    }\r\n\r\n    %igx-navbar-bundle {\r\n        @extend %igx-navbar-part;\r\n        user-select: none;\r\n\r\n        > * + * {\r\n            margin-inline-start: rem(16px);\r\n        }\r\n    }\r\n\r\n    %igx-navbar-icon-display {\r\n        >igx-icon,\r\n        [igxButton='icon'] {\r\n            cursor: pointer;\r\n            color: var-get($theme, 'idle-icon-color');\r\n            transition: color .15s $out-quad;\r\n\r\n            &:hover {\r\n                color: var-get($theme, 'hover-icon-color');\r\n            }\r\n        }\r\n    }\r\n\r\n    %igx-navbar-left {\r\n        @extend %igx-navbar-bundle;\r\n        @extend %igx-navbar-icon-display;\r\n        flex-grow: 1;\r\n    }\r\n\r\n    %igx-navbar-right {\r\n        @extend %igx-navbar-bundle;\r\n        @extend %igx-navbar-icon-display;\r\n    }\r\n\r\n    igx-navbar-action,\r\n    [igxNavbarAction] {\r\n        @extend %igx-navbar-part;\r\n    }\r\n\r\n    igx-navbar-title,\r\n    [igxNavbarTitle] {\r\n        @extend %igx-navbar-part;\r\n        @extend %igx-navbar-title !optional;\r\n    }\r\n}\r\n\r\n/// Adds typography styles for the igx-navbar component.\r\n/// Uses the 'body-1', 'caption'\r\n/// category from the typographic scale.\r\n/// @group typography\r\n/// @param {Map} $categories [(title: 'h6')] - The categories from the typographic scale used for type styles.\r\n@mixin navbar-typography($categories: (title: 'h6')) {\r\n    $title: map.get($categories, 'title');\r\n\r\n    %igx-navbar-title {\r\n        @include type-style($title);\r\n        margin-bottom: 0;\r\n    }\r\n}\r\n","@use 'sass:map';\r\n@use 'sass:meta';\r\n@use '../../base' as *;\r\n@use '../../themes/schemas' as *;\r\n@use 'igniteui-theming/sass/animations/easings' as *;\r\n\r\n////\r\n/// @group themes\r\n/// @access public\r\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\r\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\r\n////\r\n\r\n/// @param {Map} $schema [$light-material-schema] - The schema used as basis for styling the component.\r\n/// @param {Map} $elevations [null] - The elevations (shadows) map to be used.\r\n///\r\n/// @param {Color} $background [null] - The navigation drawer background color.\r\n/// @param {Color} $border-color [null] - The navigation drawer right border color.\r\n/// @param {Color} $item-header-text-color [null] - The header's idle text color.\r\n/// @param {Color} $item-text-color [null] - The item's idle text color.\r\n/// @param {Color} $item-icon-color [null] - The item's icon color.\r\n/// @param {Color} $item-active-text-color [null] - The item's active text color.\r\n/// @param {Color} $item-active-background [null] - The item's active background color.\r\n/// @param {Color} $item-active-icon-color [null] - The item's icon active color.\r\n/// @param {Color} $item-hover-background [null] - The item's hover background color.\r\n/// @param {Color} $item-hover-text-color [null] - The item's hover text color.\r\n/// @param {Color} $item-hover-icon-color [null] - The item's hover icon color.\r\n/// @param {Color} $shadow [null] - Sets a custom shadow to be used by the drawer.\r\n/// @param {List} $border-radius [null] - The border radius used for the navdrawer.\r\n/// @param {List} $item-border-radius [null] - The border radius used for the navdrawer item.\r\n/// @requires $light-material-schema\r\n/// @example scss Change the background and item colors\r\n///   $navdrawer-theme: navdrawer-theme(\r\n///     $background: #2d313a,\r\n///     $item-active-background: #ecc256,\r\n///     $item-icon-color: #ecc256\r\n///   );\r\n///   // Pass the theme to the css-vars() mixin\r\n///   @include css-vars($navdrawer-theme);\r\n@function navdrawer-theme(\r\n    $schema: $light-material-schema,\r\n    $elevations: null,\r\n\r\n    $border-radius: null,\r\n    $item-border-radius: null,\r\n\r\n    $background: null,\r\n    $border-color: null,\r\n\r\n    $item-header-text-color: null,\r\n    $item-text-color: null,\r\n    $item-icon-color: null,\r\n\r\n    $item-active-text-color: null,\r\n    $item-active-background: null,\r\n    $item-active-icon-color:null,\r\n\r\n    $item-hover-background: null,\r\n    $item-hover-text-color: null,\r\n    $item-hover-icon-color: null,\r\n    $shadow: null\r\n) {\r\n    $name: 'igx-nav-drawer';\r\n    $navdrawer-schema: ();\r\n\r\n    @if map.has-key($schema, 'nav-drawer') {\r\n        $navdrawer-schema: map.get($schema, 'nav-drawer');\r\n    } @else {\r\n        $navdrawer-schema: $schema;\r\n    }\r\n\r\n    $theme: digest-schema($navdrawer-schema);\r\n    $meta: map.get($theme, '_meta');\r\n\r\n    @if not($item-header-text-color) and $background {\r\n        $item-header-text-color: text-contrast($background);\r\n    }\r\n\r\n    @if not($item-text-color) and $background {\r\n        $item-text-color: text-contrast($background);\r\n    }\r\n\r\n    @if not($item-icon-color) and $background {\r\n        $item-icon-color: text-contrast($background);\r\n    }\r\n\r\n    @if not($item-active-background) and $background {\r\n        @if meta.type-of($background) == 'color' {\r\n            $item-active-background: rgba(text-contrast($background), .24);\r\n        }\r\n    }\r\n\r\n    @if not($item-active-text-color) and $item-active-background {\r\n        $item-active-text-color: text-contrast($item-active-background);\r\n    }\r\n\r\n    @if not($item-active-icon-color) and $item-active-background {\r\n        $item-active-icon-color: text-contrast($item-active-background);\r\n    }\r\n\r\n    @if not($item-hover-background) and $background {\r\n        @if meta.type-of($background) == 'color' {\r\n            $item-hover-background: rgba(text-contrast($background), .08);\r\n        }\r\n    }\r\n\r\n    @if not($item-hover-text-color) and $background {\r\n        $item-hover-text-color: text-contrast($background);\r\n    }\r\n\r\n    @if not($shadow) {\r\n        $elevation: map.get($navdrawer-schema, 'elevation');\r\n        $shadow: elevation($elevation);\r\n    }\r\n\r\n    @if not($border-radius) {\r\n        $border-radius: border-radius(map.get($theme, 'border-radius')...);\r\n    }\r\n\r\n    @if not($item-border-radius) {\r\n        $item-border-radius: border-radius(map.get($theme, 'item-border-radius')...);\r\n    }\r\n\r\n    @return extend($theme, (\r\n        name: $name,\r\n        border-radius: $border-radius,\r\n        item-border-radius: $item-border-radius,\r\n        background: $background,\r\n        border-color: $border-color,\r\n        item-text-color:$item-text-color,\r\n        item-active-text-color: $item-active-text-color,\r\n        item-active-background: $item-active-background,\r\n        item-hover-background: $item-hover-background,\r\n        item-hover-text-color:$item-hover-text-color,\r\n        item-header-text-color:$item-header-text-color,\r\n        item-icon-color:$item-icon-color,\r\n        item-active-icon-color:$item-active-icon-color,\r\n        item-hover-icon-color: $item-hover-icon-color,\r\n        shadow: $shadow,\r\n        _meta: map.merge(if($meta, $meta, ()), (\r\n            variant: map.get($schema, '_meta', 'theme')\r\n        )),\r\n    ));\r\n}\r\n\r\n/// @param {Map} $theme - The theme used to style the component.\r\n@mixin navdrawer($theme) {\r\n    @include css-vars($theme);\r\n\r\n    $drawer-icon-size: rem(24px);\r\n    $drawer-item-margin: rem(8px);\r\n    $text-side-padding: rem(8px);\r\n    $drawer-item-min-h: auto;\r\n    $drawer-item-max-h: rem(48px);\r\n    $drawer-item-min-w: rem(32px);\r\n\r\n    $variant: map.get($theme, '_meta', 'variant');\r\n\r\n    %navdrawer-display {\r\n        transition: flex-basis;\r\n        transition-duration: .3s;\r\n        transition-timing-function: $out-quad;\r\n        flex-shrink: 0;\r\n    }\r\n\r\n    %aside {\r\n        position: fixed;\r\n        height: 100%;\r\n        max-width: 90%;\r\n        min-height: 100%;\r\n        overflow-x: hidden;\r\n        background: var-get($theme, 'background');\r\n        top: 0;\r\n        bottom: 0;\r\n        inset-inline-start: 0;\r\n        z-index: 999;\r\n        transition: width, transform;\r\n        transition-timing-function: $out-quad, $out-quad;\r\n        box-shadow: var-get($theme, 'shadow');\r\n        @if $variant != 'indigo-design' {\r\n            border-inline-end: rem(1px) solid var-get($theme, 'border-color');\r\n        }\r\n        border-radius: var-get($theme, 'border-radius');\r\n    }\r\n\r\n    %aside-panning {\r\n        overflow-x: hidden;\r\n        transition: none;\r\n    }\r\n\r\n    %aside--pinned {\r\n        position: relative;\r\n        max-width: 100%;\r\n        box-shadow: none;\r\n        z-index: 0;\r\n    }\r\n\r\n    %aside--collapsed--right {\r\n        transform: translate3d(300px, 0, 0);\r\n        box-shadow: none;\r\n\r\n        [dir='rtl'] & {\r\n            transform: translate3d(-300px, 0, 0);\r\n        }\r\n    }\r\n\r\n    %igx-nav-drawer__aside--collapsed {\r\n        transform: none;\r\n        width: 0;\r\n        overflow: hidden;\r\n        border: none;\r\n    }\r\n\r\n    %aside--collapsed {\r\n        transform: translate3d(-300px, 0, 0);\r\n\r\n        [dir='rtl'] & {\r\n            transform: translate3d(300px, 0, 0);\r\n        }\r\n\r\n        box-shadow: none;\r\n    }\r\n\r\n    %aside--right {\r\n        inset-inline-start: auto;\r\n        inset-inline-end: 0;\r\n        border-inline-end: none;\r\n        border-inline-start: rem(1px) solid var-get($theme, 'border-color');\r\n    }\r\n\r\n    %aside--mini {\r\n        width: rem(60px);\r\n        transition-duration: .2s, .2s;\r\n\r\n        %item {\r\n            justify-content: center;\r\n            @if $variant == 'indigo-design' {\r\n                max-width: rem(32px);\r\n                // important is needed to override the typography margins\r\n                margin: rem(14px) auto !important;\r\n            }\r\n\r\n            igx-icon {\r\n                margin-inline-start: 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    %aside--normal {\r\n        width: rem(242px);\r\n        transition-duration: .3s, .3s;\r\n    }\r\n\r\n    %overlay {\r\n        opacity: 1;\r\n        background: color(null, 'gray', 500, .54);\r\n        transition: opacity, visibility;\r\n        transition-duration: .25s, .25s;\r\n        transition-timing-function: ease-in, step-start;\r\n        transition-delay: 0s, 0s;\r\n        position: absolute;\r\n        inset-inline-start: 0;\r\n        top: 0;\r\n        width: 100%;\r\n        height: 100%;\r\n        visibility: visible;\r\n        z-index: 999;\r\n    }\r\n\r\n    %overlay-panning {\r\n        transform: translate3d(0, 0, 0);\r\n        transition: none;\r\n    }\r\n\r\n    %overlay--hidden {\r\n        transition-timing-function: ease-in-out, step-end;\r\n        visibility: hidden;\r\n        opacity: 0;\r\n    }\r\n\r\n    %overlay-panning--hidden {\r\n        /* must be visible during pan.. */\r\n        visibility: visible;\r\n    }\r\n\r\n    %item {\r\n        position: relative;\r\n        display: flex;\r\n        align-items: center;\r\n        flex-flow: row nowrap;\r\n        color: var-get($theme, 'item-text-color');\r\n        max-height: $drawer-item-max-h;\r\n        min-width: $drawer-item-min-w;\r\n\r\n        @if $variant != 'indigo-design' {\r\n            // important is needed to override the typography margins\r\n            margin: $drawer-item-margin !important;\r\n            padding: rem(12px) rem(8px);\r\n            gap: rem(32px);\r\n        } @else {\r\n            // important is needed to override the typography margins\r\n            margin: rem(15px) $drawer-item-margin !important;\r\n            padding: rem(4px);\r\n            gap: calc(rem(32px) - #{$text-side-padding});\r\n        }\r\n\r\n        cursor: pointer;\r\n        user-select: none;\r\n        outline: transparent;\r\n        white-space: nowrap;\r\n        border-radius: var-get($theme, 'item-border-radius');\r\n        text-decoration: none;\r\n        width: calc(100% - #{$drawer-item-margin * 2});\r\n        border: none;\r\n        justify-content: flex-start;\r\n\r\n        igx-icon {\r\n            color: var-get($theme, 'item-icon-color');\r\n            @if $variant == 'indigo-design' {\r\n                margin-inline-start: rem(4px);\r\n            }\r\n        }\r\n\r\n        span {\r\n            @if $variant == 'indigo-design' {\r\n                padding-inline-start: $text-side-padding;\r\n            }\r\n        }\r\n\r\n        // Need this to override the igx-buttons\r\n        &[igxButton] {\r\n            background: transparent;\r\n            border: none;\r\n        }\r\n\r\n        &%igx-button--fab {\r\n            min-height: $drawer-item-min-h;\r\n        }\r\n\r\n        &%igx-button--icon {\r\n            height: auto;\r\n            transition: none;\r\n        }\r\n\r\n        &:hover,\r\n        &:focus {\r\n            background: var-get($theme, 'item-hover-background');\r\n            color: var-get($theme, 'item-hover-text-color');\r\n            box-shadow: none;\r\n\r\n            igx-icon {\r\n                color: var-get($theme, 'item-hover-icon-color');\r\n            }\r\n        }\r\n    }\r\n\r\n    %item--active {\r\n        // should be app primary color\r\n        color: var-get($theme, 'item-active-text-color');\r\n        background: var-get($theme, 'item-active-background');\r\n\r\n        igx-icon {\r\n            color: var-get($theme, 'item-active-icon-color');\r\n        }\r\n\r\n        &:focus,\r\n        &:hover {\r\n            color: var-get($theme, 'item-active-text-color');\r\n            background: var-get($theme, 'item-active-background');\r\n\r\n            igx-icon {\r\n                color: var-get($theme, 'item-active-icon-color');\r\n            }\r\n        }\r\n    }\r\n\r\n    %item,\r\n    %item--active {\r\n        // Need this to override the igx-buttons\r\n        &[igxButton] {\r\n            box-shadow: none;\r\n\r\n            igx-icon {\r\n                width: var(--igx-icon-size, #{$drawer-icon-size});\r\n                height: var(--igx-icon-size, #{$drawer-icon-size});\r\n                font-size: var(--igx-icon-size, #{$drawer-icon-size});\r\n                margin: 0;\r\n            }\r\n\r\n            &:hover,\r\n            &:focus {\r\n                box-shadow: none;\r\n                border: none;\r\n            }\r\n        }\r\n    }\r\n\r\n    %item--header {\r\n        display: block;\r\n        padding: rem(12px) rem(16px);\r\n        white-space: nowrap;\r\n        color: var-get($theme, 'item-header-text-color');\r\n    }\r\n\r\n    %style-dummy {\r\n        height: 0;\r\n        background: none;\r\n        box-shadow: none;\r\n        transition: none;\r\n        visibility: hidden;\r\n    }\r\n\r\n    %disable-animation {\r\n        transition-duration: 0s;\r\n    }\r\n}\r\n\r\n/// Adds typography styles for the igx-navdrawer component.\r\n/// Uses the 'subtitle-1', 'subtitle-2'\r\n/// category from the typographic scale.\r\n/// @group typography\r\n/// @param {Map} $categories [(item: 'subtitle-2', header: 'subtitle-1')] - The categories from the typographic scale used for type styles.\r\n@mixin navdrawer-typography(\r\n    $categories: (\r\n        item: 'subtitle-2',\r\n        header: 'subtitle-1'\r\n    )\r\n) {\r\n    $item: map.get($categories, 'item');\r\n    $header: map.get($categories, 'header');\r\n\r\n    %item {\r\n        @include type-style($item);\r\n    }\r\n\r\n    %item--header {\r\n        @include type-style($header) {\r\n            margin: 0;\r\n        }\r\n    }\r\n}\r\n","@use 'sass:map';\r\n@use 'sass:math';\r\n@use '../../base' as *;\r\n@use '../ripple/ripple-theme' as *;\r\n@use '../ripple/ripple-component' as *;\r\n@use 'igniteui-theming/sass/animations' as *;\r\n@use '../../themes/schemas' as *;\r\n\r\n////\r\n/// @group themes\r\n/// @access public\r\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\r\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\r\n////\r\n\r\n/// @param {Map} $schema [$light-material-schema] - The schema used as basis for styling the component.\r\n///\r\n/// @param {Color} $label-color [null]- The text color used for the label text.\r\n/// @param {Color} $empty-color [null] - The unchecked border color.\r\n/// @param {Color} $fill-color [null] - The checked border and dot colors.\r\n/// @param {Color} $disabled-color [null] - The disabled border and dot colors.\r\n/// @param {Color} $disabled-label-color [null] - The disabled label color.\r\n/// @param {Color} $hover-color [null] - The border and dot colors on hover.\r\n/// @param {Color} $fill-color-hover [null] - The checked border and dot colors on hover.\r\n/// @param {Color} $fill-hover-border-color [null] - The checked dot border color on hover.\r\n/// @param {Color} $focus-outline-color [null] - The focus outlined color.\r\n/// @param {Color} $error-color [null] - The label, border and dot color in invalid state.\r\n/// @param {Color} $error-color-hover [null] - The label, border and dot color in invalid state on hover.\r\n///\r\n/// @requires $light-material-schema\r\n///\r\n/// Set light to true when the surrounding area is dark.\r\n/// @example scss Change the checked dot and border colors\r\n///   $my-radio-theme: radio-theme($fill-color: magenta);\r\n///   // Pass the theme to the css-vars() mixin\r\n///   @include css-vars($my-radio-theme);\r\n@function radio-theme(\r\n    $schema: $light-material-schema,\r\n\r\n    $label-color: null,\r\n    $empty-color: null,\r\n    $fill-color: null,\r\n    $fill-hover-border-color: null,\r\n    $focus-outline-color: null,\r\n    $disabled-color: null,\r\n    $disabled-label-color: null,\r\n    $hover-color: null,\r\n    $fill-color-hover: null,\r\n    $error-color: null,\r\n    $error-color-hover: null,\r\n) {\r\n    $name: 'igx-radio';\r\n    $radio-schema: ();\r\n\r\n    @if map.has-key($schema, 'radio') {\r\n        $radio-schema: map.get($schema, 'radio');\r\n    } @else {\r\n        $radio-schema: $schema;\r\n    }\r\n\r\n    $theme: digest-schema($radio-schema);\r\n    $meta: map.get($theme, '_meta');\r\n\r\n    @return extend($theme, (\r\n        name: $name,\r\n        label-color: $label-color,\r\n        empty-color: $empty-color,\r\n        fill-color: $fill-color,\r\n        fill-hover-border-color: $fill-hover-border-color,\r\n        disabled-color: $disabled-color,\r\n        disabled-label-color: $disabled-label-color,\r\n        hover-color: $hover-color,\r\n        fill-color-hover: $fill-color-hover,\r\n        focus-outline-color: $focus-outline-color,\r\n        error-color: $error-color,\r\n        error-color-hover: $error-color-hover,\r\n        _meta: map.merge(if($meta, $meta, ()), (\r\n            variant: map.get($schema, '_meta', 'theme'),\r\n            theme-variant: map.get($schema, '_meta', 'variant')\r\n        )),\r\n    ));\r\n}\r\n\r\n/// @param {Map} $theme - The theme used to style the component.\r\n/// @requires ripple-theme\r\n@mixin radio($theme) {\r\n    @include css-vars($theme);\r\n    @include scale-in-out($start-scale: .9);\r\n\r\n    $theme-variant: map.get($theme, '_meta', 'theme-variant');\r\n    $variant: map.get($theme, '_meta', 'variant');\r\n    $material-theme: $variant == 'material';\r\n    $bootstrap-theme: $variant == 'bootstrap';\r\n    $not-bootstrap-theme: $variant != 'bootstrap';\r\n\r\n    $label-margin: map.get((\r\n        material: rem(2px),\r\n        fluent: rem(6px),\r\n        bootstrap: rem(8px),\r\n        indigo-design: rem(8px),\r\n    ), $variant);\r\n\r\n    $size: map.get((\r\n        material: rem(40px),\r\n        fluent: rem(20px),\r\n        bootstrap: rem(16px),\r\n        indigo-design: rem(20px),\r\n    ), $variant);\r\n\r\n    $scale: map.get((\r\n        material: scale(.5),\r\n        fluent: scale(.5),\r\n        bootstrap: scale(.375),\r\n        indigo-design: scale(.5),\r\n    ), $variant);\r\n\r\n    $border-width: map.get((\r\n        material: rem(2px),\r\n        fluent: rem(1px),\r\n        bootstrap: rem(1px),\r\n        indigo-design: rem(2px),\r\n    ), $variant);\r\n\r\n    $radio-hover-scale: map.get((\r\n        material: null,\r\n        fluent: scale(.5),\r\n    ), $variant);\r\n\r\n    $ripple-display: map.get((\r\n        material: block,\r\n        bootstrap: none,\r\n        fluent: none,\r\n        indigo-design: none,\r\n    ), $variant);\r\n\r\n    $horizontal-group-margin: map.get((\r\n        material: rem(16px),\r\n        fluent: rem(12px),\r\n        bootstrap: rem(8px),\r\n        indigo-design: rem(8px),\r\n    ), $variant);\r\n\r\n    $vertical-group-margin: map.get((\r\n        material: 0,\r\n        fluent: rem(8px),\r\n        bootstrap: rem(8px),\r\n        indigo-design: rem(8px),\r\n    ), $variant);\r\n\r\n    $border-style: solid;\r\n    $border-radius: border-radius(50%);\r\n\r\n    $transition: all .2s ease-in;\r\n\r\n    $ripple-size: rem(40px);\r\n    $ripple-radius: math.div($ripple-size, 2);\r\n\r\n    $ripple-theme: ripple-theme(\r\n        $schema: $light-material-schema,\r\n        $color: var-get($theme, 'fill-color')\r\n    );\r\n\r\n    %radio-display {\r\n        position: relative;\r\n        display: inline-flex;\r\n        flex-flow: row nowrap;\r\n        align-items: center;\r\n        color: var-get($theme, 'label-color');\r\n    }\r\n\r\n    %radio-input {\r\n        @include hide-default();\r\n    }\r\n\r\n    %radio-display--disabled {\r\n        pointer-events: none;\r\n        color: var-get($theme, 'disabled-label-color');\r\n        user-select: none;\r\n    }\r\n\r\n    %radio-label--invalid {\r\n        color: var-get($theme, 'error-color');\r\n    }\r\n\r\n    %radio-label--disabled {\r\n        color: var-get($theme, 'disabled-label-color');\r\n    }\r\n\r\n    %radio-composite {\r\n        position: relative;\r\n        display: inline-block;\r\n        width: $size;\r\n        height: $size;\r\n        min-width: $size;\r\n        line-height: $size;\r\n        cursor: pointer;\r\n        color: var-get($theme, 'label-color');\r\n        user-select: none;\r\n\r\n        &::before,\r\n        &::after {\r\n            position: absolute;\r\n            content: '';\r\n            width: $size;\r\n            height: $size;\r\n            inset-inline-start: 0;\r\n            top: 0;\r\n            border-radius: $border-radius;\r\n        }\r\n\r\n        @if $material-theme {\r\n            &::before,\r\n            &::after {\r\n                width: math.div($size, 2);\r\n                height: math.div($size, 2);\r\n                top: 25%;\r\n                inset-inline-start: 25%;\r\n            }\r\n        }\r\n\r\n        &::before {\r\n            backface-visibility: hidden;\r\n            transform: scale(0);\r\n\r\n            @if $not-bootstrap-theme {\r\n                transition: $transition;\r\n            }\r\n\r\n            z-index: 1;\r\n        }\r\n\r\n        &::after {\r\n            border: $border-width $border-style var-get($theme, 'empty-color');\r\n        }\r\n    }\r\n\r\n    %radio-composite--x {\r\n        &::before {\r\n            border: $border-width $border-style var-get($theme, 'fill-color');\r\n            background: var-get($theme, 'fill-color');\r\n            transform: $scale;\r\n\r\n            @if $bootstrap-theme {\r\n                border-color: var-get($theme, 'fill-hover-border-color');\r\n                background: var-get($theme, 'fill-hover-border-color');\r\n            }\r\n        }\r\n\r\n        &::after {\r\n            border: $border-width $border-style var-get($theme, 'fill-color');\r\n\r\n            @if $bootstrap-theme{\r\n                background: var-get($theme, 'fill-color');\r\n            }\r\n        }\r\n    }\r\n\r\n    %igx-radio-hover__composite {\r\n        &::before {\r\n            background: var-get($theme, 'hover-color');\r\n            transform: $radio-hover-scale;\r\n        }\r\n    }\r\n\r\n    %igx-radio-hover__composite--invalid {\r\n        &::before {\r\n            background: var-get($theme, 'error-color');\r\n        }\r\n    }\r\n\r\n    %radio-composite--x--invalid--hover {\r\n        @if $bootstrap-theme {\r\n            &::before {\r\n                background: white;\r\n            }\r\n        } @else if $variant == 'indigo-design' {\r\n            &::before {\r\n                background: var-get($theme, 'error-color');\r\n            }\r\n        } @else {\r\n            &::before {\r\n                background: var-get($theme, 'error-color-hover');\r\n            }\r\n\r\n            &::after {\r\n                border: $border-width $border-style var-get($theme, 'error-color-hover');\r\n            }\r\n        }\r\n    }\r\n\r\n    %igx-radio--checked-active__composite {\r\n        &::before {\r\n            background: var-get($theme, 'fill-color-hover');\r\n            border-color: var-get($theme, 'fill-hover-border-color');\r\n        }\r\n\r\n        &::after {\r\n            @if $bootstrap-theme {\r\n                border-color: var-get($theme, 'fill-color');\r\n            } @else {\r\n                border-color: var-get($theme, 'fill-hover-border-color');\r\n            }\r\n        }\r\n    }\r\n\r\n    %radio-composite--invalid {\r\n        &::after {\r\n            border: $border-width $border-style var-get($theme, 'error-color');\r\n\r\n            @if $bootstrap-theme {\r\n                background: transparent;\r\n                border: $border-width $border-style var-get($theme, 'error-color');\r\n            }\r\n        }\r\n    }\r\n\r\n    %radio-composite--x--invalid {\r\n        &::after {\r\n            border: $border-width $border-style var-get($theme, 'error-color');\r\n        }\r\n\r\n        &::before {\r\n            background: var-get($theme, 'error-color');\r\n            border: $border-width $border-style transparent;\r\n        }\r\n\r\n        @if $bootstrap-theme {\r\n            &::after {\r\n                background: var-get($theme, 'error-color');\r\n                border-color: var-get($theme, 'error-color');\r\n            }\r\n\r\n            &::before {\r\n                background: white;\r\n            }\r\n        }\r\n    }\r\n\r\n    %radio-composite--disabled {\r\n        &::after {\r\n            border: $border-width $border-style var-get($theme, 'disabled-color');\r\n\r\n            @if $bootstrap-theme {\r\n                background: transparent;\r\n                border: $border-width $border-style var-get($theme, 'disabled-label-color');\r\n            }\r\n        }\r\n    }\r\n\r\n    %radio-composite--x--disabled {\r\n        &::after {\r\n            border: $border-width $border-style var-get($theme, 'disabled-color');\r\n        }\r\n\r\n        &::before {\r\n            background: var-get($theme, 'disabled-color');\r\n            border: $border-width $border-style transparent;\r\n        }\r\n\r\n        @if $bootstrap-theme {\r\n            &::after {\r\n                background: var-get($theme, 'disabled-color');\r\n                border-color: var-get($theme, 'disabled-color');\r\n            }\r\n\r\n            &::before {\r\n                background: white;\r\n            }\r\n        }\r\n    }\r\n\r\n    %radio-label {\r\n        color: currentColor;\r\n        cursor: pointer;\r\n        user-select: none;\r\n        word-wrap: break-all;\r\n\r\n        &:empty {\r\n            display: none;\r\n        }\r\n    }\r\n\r\n    %radio-label--after {\r\n        margin-inline-start: $label-margin;\r\n    }\r\n\r\n    %radio-label--before {\r\n        order: -1;\r\n        margin-inline-end: $label-margin;\r\n    }\r\n\r\n    %radio-label--before,\r\n    %radio-label--after {\r\n        &:empty {\r\n            margin: 0;\r\n        }\r\n    }\r\n\r\n    %radio-ripple {\r\n        @include ripple($ripple-theme);\r\n        @include css-vars($ripple-theme);\r\n        display: $ripple-display;\r\n        position: absolute;\r\n        top: calc(50% - #{$ripple-radius});\r\n        inset-inline-start: calc(50% - #{$ripple-radius});\r\n        width: $ripple-size;\r\n        height: $ripple-size;\r\n        border-radius: border-radius(math.div($ripple-size, 2));\r\n        overflow: hidden;\r\n        pointer-events: none;\r\n        filter: opacity(1);\r\n    }\r\n\r\n    %igx-radio--focused {\r\n        @if $variant == 'fluent' {\r\n            position: relative;\r\n            $focus-outline-offset-top: rem(2px);\r\n            $focus-outline-offset-left: rem(2px);\r\n\r\n            &::after {\r\n                content: '';\r\n                position: absolute;\r\n                top: -$focus-outline-offset-top;\r\n                inset-inline-start: -$focus-outline-offset-left;\r\n                box-shadow: 0 0 0 rem(1px) var-get($theme, 'focus-outline-color');\r\n                width: calc(100% + (#{$focus-outline-offset-left} * 2));\r\n                height: calc(100% + (#{$focus-outline-offset-top} * 2));\r\n            }\r\n\r\n            %radio-composite {\r\n                &::before {\r\n                    background: var-get($theme, 'hover-color');\r\n                    transform: $radio-hover-scale;\r\n                }\r\n            }\r\n        }\r\n\r\n        @if $variant == 'bootstrap' {\r\n            %radio-composite {\r\n                border-radius: $border-radius;\r\n                box-shadow: 0 0 0 rem(2px) var-get($theme, 'focus-outline-color');\r\n            }\r\n        }\r\n\r\n        @if $variant == 'indigo-design' {\r\n            %radio-composite {\r\n                border-radius: $border-radius;\r\n                box-shadow: 0 0 0 rem(3px) var-get($theme, 'focus-outline-color');\r\n            }\r\n        }\r\n    }\r\n\r\n    %igx-radio--focused-checked {\r\n        @if $variant == 'fluent' {\r\n            %radio-composite--x {\r\n                &::before {\r\n                    background: var-get($theme, 'fill-color');\r\n                }\r\n\r\n                &::after {\r\n                    border: $border-width $border-style var-get($theme, 'fill-color');\r\n                }\r\n            }\r\n        }\r\n\r\n        @if $variant == 'indigo-design' {\r\n            %radio-composite {\r\n                box-shadow: 0 0 0 rem(3px) var-get($theme, 'focus-outline-color-focused');\r\n            }\r\n        }\r\n    }\r\n\r\n    %igx-radio--focused--invalid {\r\n        @if $variant == 'bootstrap' {\r\n            %radio-composite {\r\n                box-shadow: 0 0 0 rem(2px) var-get($theme, 'error-color-hover');\r\n            }\r\n        } @else if $variant == 'indigo-design' {\r\n            %radio-composite {\r\n                box-shadow: 0 0 0 rem(3px) var-get($theme, 'error-color-hover');\r\n            }\r\n        } @else if $variant == 'fluent' {\r\n            %radio-composite {\r\n                &::after {\r\n                    border: $border-width $border-style var-get($theme, 'error-color');\r\n                }\r\n\r\n                &::before {\r\n                    background: var-get($theme, 'error-color');\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    %igx-radio--focused--invalid--checked {\r\n        %radio-composite {\r\n            &::after {\r\n                border: $border-width $border-style var-get($theme, 'error-color');\r\n            }\r\n\r\n            &::before {\r\n                background: var-get($theme, 'error-color');\r\n                border-color: var-get($theme, 'error-color');\r\n            }\r\n\r\n            @if $variant == 'bootstrap' {\r\n                &::before {\r\n                    background: white;\r\n                }\r\n            }\r\n        }\r\n\r\n        @if $variant == 'fluent' {\r\n            %radio-composite {\r\n                &::after {\r\n                    border: $border-width $border-style var-get($theme, 'error-color-hover');\r\n                }\r\n\r\n                &::before {\r\n                    background: var-get($theme, 'error-color-hover');\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    %radio-ripple--hover {\r\n        background: var-get($theme, 'empty-color');\r\n        transition: background .2s $ease-out-quad;\r\n        opacity: .06;\r\n\r\n        @if $theme-variant == 'dark' {\r\n            opacity: .12;\r\n        }\r\n    }\r\n\r\n    %radio-ripple--hover-checked {\r\n        background: var-get($theme, 'fill-color');\r\n    }\r\n\r\n    %radio-ripple--hover-invalid {\r\n        background: var-get($theme, 'error-color');\r\n    }\r\n\r\n    %radio-ripple--focused {\r\n        background: var-get($theme, 'empty-color');\r\n        transition: background .2s $ease-out-quad;\r\n        opacity: .12;\r\n\r\n        @if $theme-variant == 'dark' {\r\n            opacity: .24;\r\n        }\r\n    }\r\n\r\n    %radio-ripple--focused-checked {\r\n        background: var-get($theme, 'fill-color');\r\n    }\r\n\r\n    %radio-ripple--focused-invalid {\r\n        background: var-get($theme, 'error-color');\r\n    }\r\n\r\n    %radio-ripple--pressed {\r\n        opacity: .12;\r\n\r\n        @if $theme-variant == 'dark' {\r\n            opacity: .24;\r\n        }\r\n    }\r\n\r\n    %radio-group-display {\r\n        display: block;\r\n        %radio-display:not(:first-of-type) {\r\n            margin-inline-start: $horizontal-group-margin;\r\n        }\r\n    }\r\n\r\n    %radio-group-display--vertical {\r\n        display: flex;\r\n        flex-flow: column;\r\n        %radio-display:not(:first-of-type) {\r\n            margin-inline-start: 0;\r\n            margin-block-start: $vertical-group-margin;\r\n        }\r\n    }\r\n}\r\n\r\n/// Adds typography styles for the igx-radio component.\r\n/// Uses the 'subtitle-1' category from the typographic scale.\r\n/// @group typography\r\n/// @param {Map} $categories [(label: 'subtitle-1')] - The categories from the typographic scale used for type styles.\r\n@mixin radio-typography(\r\n    $categories: (label: 'subtitle-1')\r\n) {\r\n    $label: map.get($categories, 'label');\r\n\r\n    %radio-label {\r\n        @include type-style($label) {\r\n            margin-top: 0;\r\n            margin-bottom: 0;\r\n        }\r\n    }\r\n}\r\n","@use 'sass:map';\r\n@use 'sass:math';\r\n@use '../../base' as *;\r\n@use '../../themes/schemas' as *;\r\n@use 'igniteui-theming/sass/animations/easings' as *;\r\n\r\n////\r\n/// @group themes\r\n/// @access public\r\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\r\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\r\n////\r\n\r\n/// @param {Map} $schema [$light-material-schema] - The schema used as basis for styling the component.\r\n/// @param {Color} $track-color [null] - The color of the track.\r\n/// @param {Color} $track-step-color [null] - The color of the track steps.\r\n/// @param {Number} $track-step-size [null] - The size of the track steps.\r\n/// @param {Color} $track-hover-color [null] - The color of the track on hover.\r\n/// @param {Color} $thumb-color [null] - The color of the thumb.\r\n/// @param {Color} $thumb-focus-color [null] - The focus color of the thumb.\r\n/// @param {Color} $thumb-border-color [null] - The thumb border color.\r\n/// @param {Color} $thumb-border-focus-color [null] - The thumb border color when focused.\r\n/// @param {Color} $thumb-disabled-border-color [null] - The thumb border color when it's disabled.\r\n/// @param {Color} $disabled-thumb-color [null] - The thumb color when its disabled.\r\n/// @param {Color} $label-background-color [null] - The background color of the bubble label.\r\n/// @param {Color} $label-text-color [null] - The text color of the bubble label.\r\n/// @param {Color} $base-track-color [null] - The base background color of the track.\r\n/// @param {Color} $base-track-hover-color [null] - The base background color of the track on hover.\r\n/// @param {Color} $disabled-base-track-color [null] - The base background color of the track when is disabled.\r\n/// @param {Color} $disabled-fill-track-color [null] - The base background color of the fill track when is disabled.\r\n/// @param {Color} $tick-label-color [null] - The color of the tick label.\r\n/// @param {Color} $tick-color [null] - The background-color of the tick.\r\n/// @requires $light-material-schema\r\n/// @example scss Set custom track and thumb on colors\r\n///   $my-slider-theme: slider-theme($thumb-color: black, $track-color: yellow);\r\n///   // Pass the theme to the css-vars() mixin\r\n///   @include css-vars($my-slider-theme);\r\n@function slider-theme(\r\n    $schema: $light-material-schema,\r\n\r\n    $track-color: null,\r\n    $track-step-color: null,\r\n    $track-step-size: null,\r\n    $track-hover-color: null,\r\n    $thumb-color: null,\r\n    $thumb-focus-color: null,\r\n    $thumb-border-color: null,\r\n    $thumb-border-focus-color: null,\r\n    $thumb-disabled-border-color: null,\r\n    $disabled-thumb-color: null,\r\n    $label-background-color: null,\r\n    $label-text-color: null,\r\n\r\n    $base-track-color: null,\r\n    $base-track-hover-color: null,\r\n    $disabled-base-track-color: null,\r\n    $disabled-fill-track-color: null,\r\n\r\n    $tick-label-color: null,\r\n    $tick-color: null,\r\n) {\r\n    $name: 'igx-slider';\r\n    $slider-schema: ();\r\n\r\n    @if map.has-key($schema, 'slider') {\r\n        $slider-schema: map.get($schema, 'slider');\r\n    } @else {\r\n        $slider-schema: $schema;\r\n    }\r\n\r\n    $theme: digest-schema($slider-schema);\r\n    $meta: map.get($theme, '_meta');\r\n\r\n    @if not($label-text-color) and $label-background-color {\r\n        $label-text-color: text-contrast($label-background-color);\r\n    }\r\n\r\n    @return extend($theme, (\r\n        name: $name,\r\n        track-color: $track-color,\r\n        track-step-color: $track-step-color,\r\n        track-step-size: $track-step-size,\r\n        track-hover-color: $track-hover-color,\r\n        thumb-color: $thumb-color,\r\n        thumb-focus-color: $thumb-focus-color,\r\n        thumb-border-color: $thumb-border-color,\r\n        thumb-border-focus-color: $thumb-border-focus-color,\r\n        thumb-disabled-border-color: $thumb-disabled-border-color,\r\n        disabled-thumb-color: $disabled-thumb-color,\r\n        label-background-color: $label-background-color,\r\n        label-text-color: $label-text-color,\r\n        base-track-color: $base-track-color,\r\n        base-track-hover-color: $base-track-hover-color,\r\n        disabled-base-track-color: $disabled-base-track-color,\r\n        disabled-fill-track-color: $disabled-fill-track-color,\r\n        tick-label-color: $tick-label-color,\r\n        tick-color: $tick-color,\r\n        _meta: map.merge(if($meta, $meta, ()), (\r\n            variant: map.get($schema, '_meta', 'theme')\r\n        )),\r\n    ));\r\n}\r\n\r\n/// @param {Map} $theme - The theme used to style the component.\r\n@mixin slider($theme) {\r\n    @include css-vars($theme);\r\n\r\n    $variant: map.get($theme, '_meta', 'variant');\r\n\r\n    $slider-height: rem(48px);\r\n    $ripple-size: rem(40px);\r\n    $ripple-radius: math.div($ripple-size, 2);\r\n    $thumb-label-width: rem(40px);\r\n    $thumb-label-height: rem(30px);\r\n\r\n    $slider-track-height: map.get((\r\n        material: 6px,\r\n        fluent: 4px,\r\n        bootstrap: 8px,\r\n        indigo-design: 2px\r\n    ), $variant);\r\n\r\n    $slider-outline-width: map.get((\r\n        material: 0,\r\n        fluent: 0,\r\n        bootstrap: 3px,\r\n        indigo-design: 3px\r\n    ), $variant);\r\n\r\n    // Slider ticks\r\n    $base-tick-height: rem(8px);\r\n    $tick-height: $base-tick-height;\r\n    $tick-height--tall: $base-tick-height * 2;\r\n    $tick-width: rem(2px);\r\n\r\n    // Slider Thumb\r\n    $thumb-size: map.get((\r\n        material: 20px,\r\n        fluent: 16px,\r\n        bootstrap: 16px,\r\n        indigo-design: 14px\r\n    ), $variant);\r\n    $thumb-radius: math.div($thumb-size, 2);\r\n\r\n    $thumb-border-width: map.get((\r\n        material: 0,\r\n        fluent: 2px,\r\n        bootstrap: 1px,\r\n        indigo-design: 0\r\n    ), $variant);\r\n\r\n    // Slider Steps\r\n    $steps-top-position: map.get((\r\n        material: 2px,\r\n        fluent: 1px,\r\n        bootstrap: 3px,\r\n        indigo-design: 0\r\n    ), $variant);\r\n\r\n    // Slider Label\r\n    $slider-label-width: rem(36px);\r\n    $slider-label-height: $slider-label-width;\r\n    $slider-label-radius: math.div($slider-label-width, 2);\r\n    $slider-label-padding: 0 rem(2px);\r\n\r\n    %igx-slider-display {\r\n        display: flex;\r\n        position: relative;\r\n        // Z-index 0 is needed to set the stacking context for the inner elements with z-index.\r\n        // https://github.com/IgniteUI/igniteui-angular/issues/11597\r\n        z-index: 0;\r\n        height: $slider-height;\r\n        flex-grow: 1;\r\n        align-items: center;\r\n        transition: all .2s $out-quad;\r\n\r\n        &:hover {\r\n            %igx-slider-track-fill {\r\n                background: var-get($theme, 'track-hover-color');\r\n            }\r\n\r\n            %igx-slider-track-inactive {\r\n                background: var-get($theme, 'base-track-hover-color');\r\n            }\r\n\r\n            @if $variant == 'fluent'{\r\n                %igx-slider-thumb__dot::before {\r\n                    border: rem($thumb-border-width) solid var-get($theme, 'thumb-focus-color');\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    %igx-slider-disabled {\r\n        pointer-events: none;\r\n\r\n        %igx-slider-track-inactive {\r\n            background: var-get($theme, 'disabled-base-track-color');\r\n        }\r\n    }\r\n\r\n    %igx-slider-thumbs-container {\r\n        position: absolute;\r\n        width: 100%;\r\n        height: 0;\r\n        cursor: default;\r\n        z-index: 1;\r\n        inset-inline-start: 0;\r\n    }\r\n\r\n    %igx-slider-track {\r\n        position: relative;\r\n        width: 100%;\r\n        height: rem($slider-track-height);\r\n        overflow: hidden;\r\n        border-radius: border-radius(rem(32px));\r\n\r\n        @if $variant == 'indigo-design' {\r\n            border-radius: initial;\r\n        }\r\n    }\r\n\r\n    %igx-slider-track-inactive {\r\n        position: absolute;\r\n        width: 100%;\r\n        height: inherit;\r\n        background: var-get($theme, 'base-track-color');\r\n        transition: background .2s $out-quad;\r\n        border-radius: inherit;\r\n\r\n        @if $variant == 'material' {\r\n            height: rem(4px);\r\n            top: 50%;\r\n            transform: translateY(-50%);\r\n        }\r\n    }\r\n\r\n    %igx-slider-track-fill {\r\n        position: absolute;\r\n        width: 100%;\r\n        background: var-get($theme, 'track-color');\r\n        transform-origin: left center;\r\n        transform: scaleX(0);\r\n        border-radius: inherit;\r\n        height: inherit;\r\n\r\n        [dir='rtl'] & {\r\n            transform-origin: right center;\r\n        }\r\n\r\n        @if $variant == 'bootstrap' {\r\n            display: none;\r\n        }\r\n    }\r\n\r\n    %igx-slider-track-fill--disabled {\r\n        background: var-get($theme, 'disabled-fill-track-color');\r\n    }\r\n\r\n    %igx-slider__ticks {\r\n        width: 100%;\r\n        display: flex;\r\n        position: absolute;\r\n        bottom: 0;\r\n        justify-content: space-between;\r\n\r\n        &%igx-slider__ticks--top {\r\n            bottom: auto;\r\n            top: 0;\r\n            align-items: flex-end;\r\n        }\r\n    }\r\n\r\n    %igx-slider__ticks-group {\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n        position: relative;\r\n\r\n        &:first-of-type {\r\n            margin-inline-start: rem(-1px);\r\n        }\r\n\r\n        &:last-of-type {\r\n            margin-inline-start: rem(-1px);\r\n        }\r\n    }\r\n\r\n    %igx-slider__ticks-label {\r\n        color: var-get($theme, 'tick-label-color');\r\n        position: absolute;\r\n        top: $tick-height--tall;\r\n        transform: translate(-50%);\r\n        line-height: .7;\r\n        opacity: 1;\r\n        transition: opacity .2s $in-out-quad;\r\n\r\n        [dir='rtl'] & {\r\n            left: 100%;\r\n        }\r\n    }\r\n\r\n    %igx-slider__ticks-tick {\r\n        background: var-get($theme, 'tick-color');\r\n        height: $tick-height;\r\n        width: $tick-width;\r\n    }\r\n\r\n    %igx-slider__ticks--tall {\r\n        %igx-slider__ticks-label {\r\n            top: calc(#{$tick-height--tall} + #{$tick-height});\r\n        }\r\n    }\r\n\r\n    %igx-slider__tick--disabled {\r\n        background: var-get($theme, 'disabled-base-track-color') !important;\r\n    }\r\n\r\n    %igx-slider__ticks-labels--disabled {\r\n        color: var-get($theme, 'disabled-base-track-color') !important;\r\n    }\r\n\r\n    %igx-slider__ticks-group--tall {\r\n        %igx-slider__ticks-tick {\r\n            height: $tick-height--tall;\r\n        }\r\n\r\n        %igx-slider__ticks-label {\r\n            top: calc(#{$tick-height--tall} + #{$tick-height});\r\n        }\r\n    }\r\n\r\n    %igx-slider__ticks--top {\r\n        %igx-slider__ticks-label {\r\n            bottom: calc(#{$tick-height} + #{$tick-height});\r\n            top: auto;\r\n        }\r\n\r\n        &%igx-slider__ticks--tall {\r\n            %igx-slider__ticks-label {\r\n                bottom: calc(#{$tick-height--tall} + #{$tick-height});\r\n                top: auto;\r\n            }\r\n        }\r\n    }\r\n\r\n    %igx-slider__tick-label--hidden {\r\n        opacity: 0;\r\n    }\r\n\r\n    %igx-slider-track-steps {\r\n        position: absolute;\r\n        display: flex;\r\n        width: 100%;\r\n        height: rem(4px);\r\n        opacity: .85;\r\n        transition: opacity .2s ease-out;\r\n        top: 50%;\r\n        transform: translateY(-50%);\r\n        color: var-get($theme, 'track-step-color');\r\n\r\n        svg {\r\n            clip-path: inset(0 rem(3px) 0 rem(3px));\r\n        }\r\n\r\n        line {\r\n            stroke: currentColor;\r\n            stroke-width: var-get($theme, 'track-step-size');\r\n            stroke-linecap: round;\r\n        }\r\n    }\r\n\r\n    %igx-slider__tick-labels--top-bottom {\r\n        %igx-slider__ticks-group {\r\n            display: block;\r\n        }\r\n\r\n        %igx-slider__ticks-label {\r\n            writing-mode: vertical-rl;\r\n            transform: translate(-50%) rotate(0deg);\r\n        }\r\n\r\n        %igx-slider__ticks--tall {\r\n            %igx-slider__ticks-label {\r\n                top: calc(#{$tick-height--tall} + #{rem(2px)});\r\n            }\r\n        }\r\n\r\n        &%igx-slider__ticks--top {\r\n            %igx-slider__ticks-label {\r\n                writing-mode: vertical-rl;\r\n                transform: translate(-50%) rotate(0deg);\r\n            }\r\n\r\n            %igx-slider__ticks--tall {\r\n                %igx-slider__ticks-label {\r\n                    bottom: calc(#{$tick-height--tall} + #{rem(2px)});\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    %igx-slider__tick-labels--bottom-top {\r\n        %igx-slider__ticks-group {\r\n            display: block;\r\n        }\r\n\r\n        %igx-slider__ticks-label {\r\n            writing-mode: vertical-rl;\r\n            transform: translate(-50%) rotate(180deg);\r\n        }\r\n\r\n        &%igx-slider__ticks--top {\r\n            %igx-slider__ticks-label {\r\n                writing-mode: vertical-rl;\r\n                transform: translate(-50%) rotate(180deg);\r\n            }\r\n\r\n            %igx-slider__ticks--tall {\r\n                %igx-slider__ticks-label {\r\n                    bottom: calc(#{$tick-height--tall} + #{rem(2px)});\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    %igx-thumb-display {\r\n        position: absolute;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        flex-direction: column;\r\n        width: rem($thumb-size);\r\n        height: rem($thumb-size);\r\n        outline-style: none;\r\n        top: -#{rem($thumb-radius)};\r\n        margin-inline-start: -#{rem($thumb-radius)};\r\n\r\n        @if $variant == 'material' {\r\n            &:hover div::after {\r\n                opacity: .12;\r\n                transform: scale(1);\r\n            }\r\n\r\n            &:focus div::after {\r\n                opacity: .18;\r\n                transform: scale(1);\r\n            }\r\n        }\r\n\r\n        &:focus div::before {\r\n            box-shadow: 0 0 0 rem($slider-outline-width) var-get($theme, 'thumb-focus-color');\r\n\r\n            @if $variant == 'bootstrap' {\r\n                border-color: var-get($theme, 'thumb-border-focus-color');\r\n            }\r\n        }\r\n    }\r\n\r\n    @if $variant == 'fluent' {\r\n        %igx-slider-thumb--focused {\r\n            div::after {\r\n                $focus-outline-offset: rem(2px);\r\n\r\n                position: absolute;\r\n                content: '';\r\n                pointer-events: none;\r\n                left: 50%;\r\n                top: 50%;\r\n                transform: translate(-50%, -50%);\r\n                box-shadow: 0 0 0 rem(1px) var-get($theme, 'thumb-border-focus-color');\r\n                width: calc(rem($thumb-size) + (#{$focus-outline-offset} * 2));\r\n                height: calc(rem($thumb-size) + (#{$focus-outline-offset} * 2));\r\n            }\r\n        }\r\n    }\r\n\r\n    %igx-thumb--disabled {\r\n        &:focus div::before {\r\n            box-shadow: none;\r\n\r\n            @if $variant == 'fluent' {\r\n                border-color: var-get($theme, 'thumb-disabled-border-color') !important;\r\n            }\r\n        }\r\n\r\n        &:focus div::after {\r\n            transform: scale(0);\r\n        }\r\n    }\r\n\r\n    %igx-label-display {\r\n        position: absolute;\r\n        pointer-events: none;\r\n        display: flex;\r\n        top: calc(((#{$thumb-label-height}) + rem(20px)) * -1);\r\n        height: $thumb-label-height;\r\n    }\r\n\r\n    %igx-slider-thumb-label__container {\r\n        border-radius: rem(2px);\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        white-space: nowrap;\r\n        margin-inline-start: -50%;\r\n        padding: 0 rem(2px);\r\n        background: var-get($theme, 'label-background-color');\r\n        color: var-get($theme, 'label-text-color');\r\n        min-width: $thumb-label-width;\r\n        opacity: 0;\r\n\r\n        &::after {\r\n            content: '';\r\n            position: absolute;\r\n            top: 85%;\r\n            border-inline-start: rem(10px) solid transparent;\r\n            border-inline-end: rem(10px) solid transparent;\r\n            border-top: rem(10px) solid var-get($theme, 'label-background-color');\r\n        }\r\n    }\r\n\r\n    %igx-slider-thumb__dot {\r\n        position: relative;\r\n        inset-inline-start: 0;\r\n        pointer-events: none;\r\n\r\n        &::before {\r\n            position: absolute;\r\n            content: '';\r\n            width: rem($thumb-size);\r\n            height: rem($thumb-size);\r\n            inset-inline-start: #{rem($thumb-radius) - math.div(rem($thumb-size), 2)};\r\n            top: calc((#{$thumb-size} - #{$thumb-radius}) * -1);\r\n            margin-inline-start: calc((#{$thumb-size} - #{$thumb-radius}) * -1);\r\n            background: var-get($theme, 'thumb-color');\r\n            border: rem($thumb-border-width) solid var-get($theme, 'thumb-border-color');\r\n            transition: transform .1s $out-quad, border-radius .1s $out-quad;\r\n            border-radius: border-radius(rem($thumb-radius));\r\n        }\r\n\r\n        @if $variant == 'material' {\r\n            &::after {\r\n                position: absolute;\r\n                content: '';\r\n                width: $ripple-size;\r\n                height: $ripple-size;\r\n                background: var-get($theme, 'thumb-color');\r\n                top: calc(50% - #{$ripple-radius});\r\n                inset-inline-start: calc(50% - #{$ripple-radius});\r\n                opacity: 0;\r\n                transform: scale(0);\r\n                transform-origin: center center;\r\n                transition: transform .1s $out-quad, opacity .1s $out-quad;\r\n                border-radius: border-radius(50%);\r\n                overflow: hidden;\r\n            }\r\n        }\r\n    }\r\n\r\n    %igx-slider-thumb__dot--disabled {\r\n        pointer-events: none;\r\n\r\n        &::before {\r\n            background: var-get($theme, 'disabled-thumb-color');\r\n            border-color: var-get($theme, 'thumb-disabled-border-color');\r\n            border-radius: border-radius(rem($thumb-radius));\r\n        }\r\n    }\r\n\r\n    %igx-slider-thumb__dot--pressed {\r\n        @if $variant == 'material' {\r\n            &::after {\r\n                opacity: .24 !important;\r\n                transform: scale(1) !important;\r\n            }\r\n        }\r\n    }\r\n\r\n    %igx-slider-thumb-label__container--active {\r\n        opacity: 1;\r\n    }\r\n\r\n    %igx-slider-thumb-label__container--pressed {\r\n        z-index: 1;\r\n    }\r\n}\r\n\r\n/// Adds typography styles for the igx-slider component.\r\n/// Uses the 'caption'\r\n/// categories from the typographic scale.\r\n/// @group typography\r\n/// @param {Map} $categories [(ticks-label: 'caption', thumb-label: 'caption')] - The categories from the typographic scale used for type styles.\r\n@mixin slider-typography(\r\n    $categories: (\r\n        ticks-label: 'caption',\r\n        thumb-label: 'caption',\r\n    )\r\n) {\r\n    $ticks-label: map.get($categories, 'ticks-label');\r\n    $thumb-label: map.get($categories, 'thumb-label');\r\n\r\n    %igx-slider-thumb-label__container {\r\n        @include type-style($thumb-label)\r\n    }\r\n\r\n    %igx-slider__tick-label {\r\n        @include type-style($ticks-label)\r\n    }\r\n}\r\n","@use 'sass:map';\r\n@use '../../base' as *;\r\n@use '../../themes/schemas' as *;\r\n@use 'igniteui-theming/sass/animations' as *;\r\n\r\n////\r\n/// @group themes\r\n/// @access public\r\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\r\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\r\n////\r\n\r\n/// If you specify a background color, but do not specify colors for either the\r\n/// button or the text, their colors will be set automatically to a contrasting color.\r\n/// @param {Map} $schema [$light-material-schema] - The schema used as basis for styling the component.\r\n/// @param {Map} $elevations [null] - The elevations (shadows) map to be used.\r\n/// @param {Color} $background [null] - The background color used in the snackbar.\r\n/// @param {Color} $text-color [null] - The text color used in the snackbar.\r\n/// @param {Color} $button-color [null] - The button color used in the snackbar.\r\n/// @param {box-shadow} $shadow [null] - Sets a shadow to be used for the snackbar.\r\n/// @param {List} $border-radius [null] - The border radius used for the snackbar component.\r\n/// @requires $light-material-schema\r\n/// @example scss Set a custom background color\r\n///   $my-snackbar-theme: snackbar-theme($background: white);\r\n///   // Pass the theme to the css-vars() mixin\r\n///   @include css-vars($my-snackbar-theme);\r\n@function snackbar-theme(\r\n    $schema: $light-material-schema,\r\n    $elevations: null,\r\n\r\n    $border-radius: null,\r\n    $background: null,\r\n    $text-color: null,\r\n    $button-color: null,\r\n    $shadow: null\r\n) {\r\n    $name: 'igx-snackbar';\r\n    $snackbar-schema: ();\r\n\r\n    @if map.has-key($schema, 'snackbar') {\r\n        $snackbar-schema: map.get($schema, 'snackbar');\r\n    } @else {\r\n        $snackbar-schema: $schema;\r\n    }\r\n\r\n    $theme: digest-schema($snackbar-schema);\r\n    $meta: map.get($theme, '_meta');\r\n\r\n    @if not($button-color) and $background {\r\n        $button-color: text-contrast($background);\r\n    }\r\n\r\n    @if not($text-color) and $background {\r\n        $text-color: text-contrast($background);\r\n    }\r\n\r\n    @if not($shadow) {\r\n        $elevation: map.get($snackbar-schema, 'elevation');\r\n        $shadow: elevation($elevation);\r\n    }\r\n\r\n    @if not($border-radius) {\r\n        $border-radius: border-radius(map.get($theme, 'border-radius')...);\r\n    }\r\n\r\n    @return extend($theme, (\r\n        name: $name,\r\n        border-radius: $border-radius,\r\n        background: $background,\r\n        text-color: $text-color,\r\n        button-color: $button-color,\r\n        shadow: $shadow,\r\n        _meta: map.merge(if($meta, $meta, ()), (\r\n            variant: map.get($schema, '_meta', 'theme')\r\n        )),\r\n    ));\r\n}\r\n\r\n/// @param {Map} $theme - The theme used to style the component.\r\n@mixin snackbar($theme) {\r\n    @include css-vars($theme);\r\n    @include fade-in();\r\n\r\n    $variant: map.get($theme, '_meta', 'variant');\r\n\r\n    $snackbar-min-height: rem(48px);\r\n    $snackbar-padding: rem(7px) rem(24px);\r\n    $snackbar-button-left-margin: rem(24px);\r\n    $snackbar-button-line-height: rem(16px);\r\n    $snackbar-button-font-weight: 600;\r\n\r\n    %igx-snackbar-display {\r\n        position: relative;\r\n        display: flex;\r\n        flex-flow: row nowrap;\r\n        align-items: center;\r\n        justify-content: space-between;\r\n        min-height: $snackbar-min-height;\r\n        padding: $snackbar-padding;\r\n        margin: rem(8px);\r\n        color: var-get($theme, 'text-color');\r\n        background: var-get($theme, 'background');\r\n        backface-visibility: hidden;\r\n        box-shadow: var-get($theme, 'shadow');\r\n        border-radius: var-get($theme, 'border-radius');\r\n        backdrop-filter: blur(8px);\r\n    }\r\n\r\n    %igx-snackbar-message {\r\n        @include animation('fade-in' .35s ease-out);\r\n    }\r\n\r\n    %igx-snackbar-button {\r\n        background: transparent;\r\n        color: var-get($theme, 'button-color');\r\n        border: 0;\r\n        line-height: $snackbar-button-line-height;\r\n        margin-inline-start: $snackbar-button-left-margin;\r\n        text-transform: uppercase;\r\n        user-select: none;\r\n        font-weight: $snackbar-button-font-weight;\r\n        -webkit-tap-highlight-color: transparent;\r\n        outline: none;\r\n        transition: color .2s ease;\r\n        font-size: inherit;\r\n        font-family: inherit;\r\n        cursor: pointer;\r\n        @include animation('fade-in' .35s ease-out);\r\n\r\n        &:hover {\r\n            color: var-get($theme, 'button-color');\r\n        }\r\n    }\r\n}\r\n\r\n/// Adds typography styles for the igx-snackbar component.\r\n/// Uses the 'body-2'\r\n/// category from the typographic scale.\r\n/// @group typography\r\n/// @param {Map} $categories [(text: 'body-2')] - The categories from the typographic scale used for type styles.\r\n@mixin snackbar-typography($categories: (text: 'body-2')) {\r\n    $text: map.get($categories, 'text');\r\n\r\n    %igx-snackbar-message {\r\n        @include type-style($text);\r\n    }\r\n}\r\n","@use 'sass:map';\r\n@use 'sass:math';\r\n@use '../../base' as *;\r\n@use '../ripple/ripple-theme' as *;\r\n@use '../ripple/ripple-component' as *;\r\n@use 'igniteui-theming/sass/animations' as *;\r\n@use '../../themes/schemas' as *;\r\n\r\n////\r\n/// @group themes\r\n/// @access public\r\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\r\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\r\n////\r\n\r\n/// @param {Map} $schema [$light-material-schema] - The schema used as basis for styling the component.\r\n/// @param {Color} $thumb-on-color [null] - The color of the thumb when the switch is on.\r\n/// @param {Color} $track-on-color [null] - The color of the track when the switch is on.\r\n/// @param {Color} $track-on-hover-color [null] - The color of the track when the switch is on and hovered.\r\n/// @param {Color} $thumb-off-color [null] - The color of the thumb when the switch is off.\r\n/// @param {Color} $track-off-color [null] - The color of the track when the switch is off.\r\n/// @param {Color} $thumb-disabled-color [null] - The color of the thumb when the switch is disabled.\r\n/// @param {Color} $thumb-on-disabled-color [null] - The color of the thumb when the switch is on and disabled.\r\n/// @param {Color} $track-disabled-color [null] - The color of the track when the switch is disabled.\r\n/// @param {Color} $track-on-disabled-color [null] - The color of the track when the switch is on and disabled.\r\n/// @param {Color} $label-color [null] - The color of the switch label\r\n/// @param {Color} $label-disabled-color [null] - The color of the switch label when the switch is disabled\r\n/// @param {box-shadow} $resting-shadow [null] - The shadow used for the thumb in resting state of the switch.\r\n/// @param {box-shadow} $hover-shadow [null] - The shadow used for the thumb in hover state of the switch.\r\n/// @param {box-shadow} $disabled-shadow [null] - The shadow used for the thumb in disable state of the switch.\r\n/// @param {List} $border-radius-track [null] - The border radius used for switch track.\r\n/// @param {List} $border-radius-thumb [null] - The border radius used for switch thumb.\r\n/// @param {List} $border-radius-ripple [null] - The border radius used for switch ripple.\r\n/// @param {Color} $border-color [null] - The border color of the switch.\r\n/// @param {Color} $border-hover-color [null] - The border color of the switch on hover.\r\n/// @param {Color} $border-disabled-color [null] - The border color of the switch when it is disabled.\r\n/// @param {Color} $border-on-color [null] - The border color when the switch is on.\r\n/// @param {Color} $border-on-hover-color [null] - The border color when the switch is on and hovered.\r\n/// @param {Color} $focus-outline-color [null] - The focus outlined color.\r\n/// @param {Color} $focus-outline-color-focused [null] - The focus outlined color for focused state.\r\n/// @param {Color} $focus-fill-color [null] - The focus fill color.\r\n/// @param {Color} $label-invalid-color [null] - The color of the switch label in invalid state.\r\n/// @param {Color} $track-error-color [null] - The color of the track in invalid state when the switch is off.\r\n/// @param {Color} $thumb-on-error-color [null] - The color of the thumb when the switch is on and invalid.\r\n/// @param {Color} $error-color [null] - The border and fill colors in invalid state.\r\n/// @param {Color} $error-color-hover [null] - The border and fill colors in invalid state on hover.\r\n/// @requires $light-material-schema\r\n///\r\n/// @example scss Set custom track and thumb on colors\r\n///   $my-switch-theme: switch-theme($thumb-on-color: black, $track-on-color: yellow);\r\n///   // Pass the theme to the css-vars() mixin\r\n///   @include css-vars($my-switch-theme);\r\n@function switch-theme(\r\n    $schema: $light-material-schema,\r\n\r\n    $thumb-on-color: null,\r\n    $track-on-color: null,\r\n    $track-on-hover-color: null,\r\n\r\n    $thumb-off-color: null,\r\n    $track-off-color: null,\r\n\r\n    $track-disabled-color: null,\r\n    $track-on-disabled-color: null,\r\n    $thumb-disabled-color: null,\r\n    $thumb-on-disabled-color: null,\r\n\r\n    $label-color: null,\r\n    $label-disabled-color: null,\r\n    $label-invalid-color: null,\r\n\r\n    $resting-shadow: null,\r\n    $hover-shadow: null,\r\n    $disabled-shadow: null,\r\n\r\n    $border-radius-track: null,\r\n    $border-radius-thumb: null,\r\n    $border-radius-ripple: null,\r\n    $border-color: null,\r\n    $border-hover-color: null,\r\n    $border-disabled-color: null,\r\n    $border-on-color: null,\r\n    $border-on-hover-color: null,\r\n    $focus-outline-color: null,\r\n    $focus-outline-color-focused: null,\r\n    $focus-fill-color: null,\r\n    $track-error-color: null,\r\n    $thumb-on-error-color: null,\r\n    $error-color: null,\r\n    $error-color-hover: null,\r\n) {\r\n    $name: 'igx-switch';\r\n    $switch-schema: ();\r\n\r\n    @if map.has-key($schema, 'switch') {\r\n        $switch-schema: map.get($schema, 'switch');\r\n    } @else {\r\n        $switch-schema: $schema;\r\n    }\r\n\r\n    $theme: digest-schema($switch-schema);\r\n    $meta: map.get($theme, '_meta');\r\n\r\n    @if not($resting-shadow) {\r\n        $resting-elevation: map.get($switch-schema, 'resting-elevation');\r\n        $resting-shadow: elevation($resting-elevation);\r\n    }\r\n\r\n    @if not($hover-shadow) {\r\n        $hover-elevation: map.get($switch-schema, 'hover-elevation');\r\n        $hover-shadow: elevation($hover-elevation);\r\n    }\r\n\r\n    @if not($disabled-shadow) {\r\n        $disabled-elevation: map.get($switch-schema, 'disabled-elevation');\r\n        $disabled-shadow: elevation($disabled-elevation);\r\n    }\r\n\r\n    @if not($border-radius-track) {\r\n        $border-radius-track: border-radius(map.get($theme, 'border-radius-track')...);\r\n    }\r\n\r\n    @if not($border-radius-thumb) {\r\n        $border-radius-thumb: border-radius(map.get($theme, 'border-radius-thumb')...);\r\n    }\r\n\r\n    @if not($border-radius-ripple) {\r\n        $border-radius-ripple: border-radius(map.get($theme, 'border-radius-ripple')...);\r\n    }\r\n\r\n    @return extend($theme, (\r\n        name: $name,\r\n\r\n        thumb-on-color: $thumb-on-color,\r\n        track-on-color: $track-on-color,\r\n        track-on-hover-color: $track-on-hover-color,\r\n\r\n        thumb-off-color: $thumb-off-color,\r\n        track-off-color: $track-off-color,\r\n\r\n        track-disabled-color: $track-disabled-color,\r\n        track-on-disabled-color: $track-on-disabled-color,\r\n        thumb-disabled-color: $thumb-disabled-color,\r\n        thumb-on-disabled-color: $thumb-on-disabled-color,\r\n\r\n        label-color: $label-color,\r\n        label-disabled-color: $label-disabled-color,\r\n        label-invalid-color: $label-invalid-color,\r\n\r\n        resting-shadow: $resting-shadow,\r\n        hover-shadow: $hover-shadow,\r\n        disabled-shadow: $disabled-shadow,\r\n\r\n        border-radius-track: $border-radius-track,\r\n        border-radius-thumb: $border-radius-thumb,\r\n        border-radius-ripple: $border-radius-ripple,\r\n        border-color: $border-color,\r\n        border-hover-color: $border-hover-color,\r\n        border-disabled-color: $border-disabled-color,\r\n        border-on-color: $border-on-color,\r\n        border-on-hover-color: $border-on-hover-color,\r\n        focus-outline-color: $focus-outline-color,\r\n        focus-outline-color-focused: $focus-outline-color-focused,\r\n        focus-fill-color: $focus-fill-color,\r\n        track-error-color: $track-error-color,\r\n        thumb-on-error-color: $thumb-on-error-color,\r\n        error-color: $error-color,\r\n        error-color-hover: $error-color-hover,\r\n        _meta: map.merge(if($meta, $meta, ()), (\r\n            variant: map.get($schema, '_meta', 'theme'),\r\n            theme-variant: map.get($schema, '_meta', 'variant')\r\n        )),\r\n    ));\r\n}\r\n\r\n/// @param {Map} $theme - The theme used to style the component.\r\n/// @requires {mixin} ripple\r\n/// @requires ripple-theme\r\n@mixin switch($theme) {\r\n    @include css-vars($theme);\r\n    @include scale-in-out($start-scale: .9);\r\n\r\n    $variant: map.get($theme, '_meta', 'variant');\r\n    $theme-variant: map.get($theme, '_meta', 'theme-variant');\r\n\r\n    $switch-width: map.get((\r\n        material: 36px,\r\n        fluent: 40px,\r\n        bootstrap: 32px,\r\n        indigo-design: 34px\r\n    ), $variant);\r\n\r\n    $switch-height: map.get((\r\n        material: 14px,\r\n        fluent: 20px,\r\n        bootstrap: 16px,\r\n        indigo-design: 16px\r\n    ), $variant);\r\n\r\n    $switch-thumb-width: map.get((\r\n        material: 20px,\r\n        fluent: 12px,\r\n        bootstrap: 10px,\r\n        indigo-design: 8px\r\n    ), $variant);\r\n\r\n    $switch-on-offset: map.get((\r\n        material: 1px,\r\n        fluent: math.div($switch-thumb-width, 2),\r\n        bootstrap: 4px,\r\n        indigo-design: 7px\r\n    ), $variant);\r\n\r\n    $switch-off-offset: map.get((\r\n        material: -1px,\r\n        fluent: math.div($switch-thumb-width, 3),\r\n        bootstrap: math.div($switch-thumb-width, 4),\r\n        indigo-design: math.div($switch-thumb-width, 3),\r\n    ), $variant);\r\n\r\n    $ripple-display: map.get((\r\n        material: block,\r\n        fluent: none,\r\n        bootstrap: none,\r\n        indigo-design: none\r\n    ), $variant);\r\n\r\n    $thumb-resting-shadow: map.get((\r\n        material: var-get($theme, 'resting-shadow'),\r\n        fluent: none,\r\n        bootstrap: none,\r\n        indigo-design: none\r\n    ), $variant);\r\n\r\n    $thumb-hover-shadow: map.get((\r\n        material: var-get($theme, 'hover-shadow'),\r\n        fluent: none,\r\n        bootstrap: none,\r\n        indigo-design: none\r\n    ), $variant);\r\n\r\n    $thumb-disabled-shadow: map.get((\r\n        material: var-get($theme, 'disabled-shadow'),\r\n        fluent: none,\r\n        bootstrap: none,\r\n        indigo-design: none\r\n    ), $variant);\r\n\r\n    $switch-thumb-height: $switch-thumb-width;\r\n\r\n    $ripple-size: rem(40px);\r\n    $ripple-radius: math.div($ripple-size, 2);\r\n\r\n    $label-margin: rem(8px);\r\n\r\n    $input-transition: all .2s $ease-in-out-quad;\r\n\r\n    $ripple-theme: ripple-theme(\r\n        $schema: $light-material-schema,\r\n        $color: var-get($theme, 'thumb-on-color')\r\n    );\r\n\r\n    %switch-display {\r\n        position: relative;\r\n        display: inline-flex;\r\n        flex-flow: row nowrap;\r\n        align-items: center;\r\n    }\r\n\r\n    %switch-input {\r\n        @include hide-default();\r\n    }\r\n\r\n    %switch-display--disabled {\r\n        user-select: none;\r\n        pointer-events: none;\r\n        cursor: initial;\r\n    }\r\n\r\n    %switch-composite {\r\n        display: flex;\r\n        align-items: center;\r\n        width: rem($switch-width);\r\n        height: rem($switch-height);\r\n        border: rem(1px) solid var-get($theme, 'border-color');\r\n        border-radius: var-get($theme, 'border-radius-track');\r\n        background: var-get($theme, 'track-off-color');\r\n        cursor: pointer;\r\n        user-select: none;\r\n        transition: $input-transition;\r\n\r\n        @if $variant == 'indigo-design' {\r\n            border: rem(2px) solid var-get($theme, 'border-color');\r\n        }\r\n    }\r\n\r\n    %switch-composite--hover {\r\n        @if $variant == 'material' or  $variant == 'fluent' {\r\n            border-color: var-get($theme, 'border-hover-color');\r\n        }\r\n\r\n        @if $variant == 'fluent' {\r\n            %switch-composite-thumb {\r\n                background: var-get($theme, 'border-hover-color');\r\n            }\r\n\r\n            %switch-composite-thumb--x {\r\n                background: var-get($theme, 'thumb-on-color');\r\n            }\r\n        }\r\n    }\r\n\r\n    %switch-composite--invalid {\r\n        border-color: var-get($theme, 'error-color');\r\n\r\n        @if $variant == 'material' {\r\n            border-color: var-get($theme, 'track-error-color');\r\n            background: var-get($theme, 'track-error-color');\r\n        }\r\n    }\r\n\r\n    %switch-composite--invalid--hover {\r\n        @if $variant == 'fluent' {\r\n            border-color: var-get($theme, 'error-color-hover');\r\n\r\n            %switch-composite-thumb {\r\n                background: var-get($theme, 'error-color-hover');\r\n            }\r\n        }\r\n    }\r\n\r\n    %switch-composite--x {\r\n        background: var-get($theme, 'track-on-color');\r\n        border-color: var-get($theme, 'border-on-color');\r\n    }\r\n\r\n    %switch-composite--x--hover {\r\n        @if $variant != 'bootstrap' {\r\n            border-color: var-get($theme, 'border-on-hover-color');\r\n        }\r\n\r\n        @if $variant == 'fluent' {\r\n            background: var-get($theme, 'track-on-hover-color');\r\n\r\n            %switch-composite-thumb {\r\n                background: var-get($theme, 'thumb-on-color');\r\n            }\r\n        }\r\n    }\r\n\r\n    %switch-composite--disabled {\r\n        background: var-get($theme, 'track-disabled-color');\r\n        border-color: var-get($theme, 'border-disabled-color');\r\n    }\r\n\r\n    %switch-composite-thumb {\r\n        position: relative;\r\n        display: block;\r\n        width: rem($switch-thumb-width);\r\n        height: $switch-thumb-height;\r\n        min-width: rem($switch-thumb-width);\r\n        border-radius: var-get($theme, 'border-radius-thumb');\r\n        background: var-get($theme, 'thumb-off-color');\r\n        box-shadow: $thumb-resting-shadow;\r\n        transition: $input-transition;\r\n        transform: translateX(#{rem($switch-off-offset)});\r\n\r\n        [dir='rtl'] & {\r\n            transform: translateX(#{rem(-1 * $switch-off-offset)});\r\n        }\r\n\r\n        @if $variant != 'bootstrap' {\r\n            &:hover {\r\n                box-shadow: $thumb-hover-shadow;\r\n            }\r\n        }\r\n    }\r\n\r\n    %switch-composite-thumb--x {\r\n        background: var-get($theme, 'thumb-on-color');\r\n        transform: translateX(#{rem($switch-width) - rem($switch-thumb-width) - rem($switch-on-offset)});\r\n\r\n        [dir='rtl'] & {\r\n            transform: translateX(-#{rem($switch-width) - rem($switch-thumb-width) - rem($switch-on-offset)});\r\n        }\r\n    }\r\n\r\n    %switch-composite-thumb--invalid {\r\n        background: var-get($theme, 'error-color');\r\n    }\r\n\r\n    %switch-composite-thumb--x--invalid {\r\n        background: var-get($theme, 'thumb-on-error-color');\r\n    }\r\n\r\n    %switch-composite-thumb--disabled {\r\n        background: var-get($theme, 'thumb-disabled-color');\r\n        box-shadow: $thumb-disabled-shadow;\r\n    }\r\n\r\n    %switch-ripple {\r\n        @include ripple($ripple-theme);\r\n        @include css-vars($ripple-theme);\r\n        display: $ripple-display;\r\n        position: absolute;\r\n        top: calc(50% - #{$ripple-radius});\r\n        inset-inline-start: calc(50% - #{$ripple-radius});\r\n        width: $ripple-size;\r\n        height: $ripple-size;\r\n        overflow: hidden;\r\n        pointer-events: none;\r\n        filter: opacity(1);\r\n        border-radius: var-get($theme, 'border-radius-ripple');\r\n    }\r\n\r\n    %igx-switch--focused {\r\n        @if $variant == 'fluent' {\r\n            %switch-composite {\r\n                position: relative;\r\n                $focus-outline-offset-top: rem(2px);\r\n                $focus-outline-offset-left: rem(2px);\r\n\r\n                &::after {\r\n                    content: '';\r\n                    position: absolute;\r\n                    top: -$focus-outline-offset-top;\r\n                    inset-inline-start: -$focus-outline-offset-left;\r\n                    box-shadow: 0 0 0 rem(1px) var-get($theme, 'focus-outline-color');\r\n                    width: calc(100% + (#{$focus-outline-offset-left} * 2));\r\n                    height: calc(100% + (#{$focus-outline-offset-top} * 2));\r\n                }\r\n            }\r\n        }\r\n\r\n        @if $variant == 'bootstrap' {\r\n            %switch-composite {\r\n                border-color: var-get($theme, 'focus-fill-color');\r\n                box-shadow: 0 0 0 rem(2px) var-get($theme, 'focus-outline-color');\r\n            }\r\n\r\n            %switch-composite-thumb {\r\n                background: var-get($theme, 'focus-fill-color');\r\n            }\r\n        }\r\n\r\n        @if $variant == 'indigo-design' {\r\n            %switch-composite {\r\n                border-radius: var-get($theme, 'border-radius-thumb');\r\n                box-shadow: 0 0 0 rem(3px) var-get($theme, 'focus-outline-color');\r\n            }\r\n        }\r\n    }\r\n\r\n    %igx-switch--focused--invalid {\r\n        @if $variant == 'bootstrap' {\r\n            %switch-composite {\r\n                border-color: var-get($theme, 'error-color');\r\n                box-shadow: 0 0 0 rem(2px) var-get($theme, 'error-color-hover');\r\n            }\r\n\r\n            %switch-composite-thumb {\r\n                background: var-get($theme, 'error-color');\r\n            }\r\n        }\r\n\r\n        @if $variant == 'indigo-design' {\r\n            %switch-composite {\r\n                box-shadow: 0 0 0 rem(3px) var-get($theme, 'error-color-hover');\r\n            }\r\n        }\r\n    }\r\n\r\n    %igx-switch--focused-checked {\r\n        @if $variant == 'bootstrap' {\r\n            %switch-composite {\r\n                border-color: var-get($theme, 'border-on-color');\r\n            }\r\n\r\n            %switch-composite-thumb--x {\r\n                background: var-get($theme, 'thumb-on-color');\r\n            }\r\n        }\r\n\r\n        @if $variant == 'indigo-design' {\r\n            %switch-composite {\r\n                box-shadow: 0 0 0 rem(3px) var-get($theme, 'focus-outline-color-focused');\r\n            }\r\n        }\r\n    }\r\n\r\n    %igx-switch--disabled-checked {\r\n        @if $variant != 'indigo-design' {\r\n            %switch-composite--x {\r\n                background: var-get($theme, 'track-on-disabled-color');\r\n            }\r\n\r\n            %switch-composite-thumb--x {\r\n                background: var-get($theme, 'thumb-on-disabled-color');\r\n            }\r\n        }\r\n\r\n        @if $variant == 'bootstrap' or $variant == 'fluent'{\r\n            %switch-composite--x {\r\n                border-color: var-get($theme, 'track-on-disabled-color');\r\n            }\r\n        }\r\n    }\r\n\r\n    %switch-ripple--focused {\r\n        background: var-get($theme, 'track-off-color');\r\n        transition: background .2s $ease-out-quad;\r\n        opacity: .12;\r\n\r\n        @if $theme-variant == 'dark' {\r\n            opacity: .24;\r\n        }\r\n    }\r\n\r\n    %switch-ripple--focused-checked {\r\n        background: var-get($theme, 'thumb-on-color');\r\n    }\r\n\r\n    %switch-ripple--focused-invalid {\r\n        background: var-get($theme, 'error-color-hover');\r\n    }\r\n\r\n    %switch-label {\r\n        display: inline-block;\r\n        color: var-get($theme, 'label-color');\r\n        cursor: pointer;\r\n        user-select: none;\r\n        word-wrap: break-all;\r\n\r\n        &:empty {\r\n            margin: 0;\r\n        }\r\n    }\r\n\r\n    %switch-label--before,\r\n    %switch-label--after {\r\n        &:empty {\r\n            margin: 0;\r\n        }\r\n    }\r\n\r\n    %switch-label--after {\r\n        margin-inline-start: $label-margin;\r\n    }\r\n\r\n    %switch-label--before {\r\n        order: -1;\r\n        margin-inline-end: $label-margin;\r\n    }\r\n\r\n    %switch-label--invalid {\r\n        color: var-get($theme, 'label-invalid-color');\r\n    }\r\n\r\n    %switch-label--disabled {\r\n        color: var-get($theme, 'label-disabled-color');\r\n    }\r\n\r\n    %switch-ripple--hover {\r\n        &::after {\r\n            position: absolute;\r\n            content: '';\r\n            opacity: .06;\r\n            inset: 0;\r\n\r\n            @if $theme-variant == 'dark' {\r\n                opacity: .12;\r\n            }\r\n        }\r\n    }\r\n\r\n    %switch-ripple--hover-unchecked {\r\n        &::after {\r\n            background: var-get($theme, 'track-off-color');\r\n        }\r\n    }\r\n\r\n    %switch-ripple--hover-checked {\r\n        &::after {\r\n            background: var-get($theme, 'thumb-on-color');\r\n        }\r\n    }\r\n\r\n    %switch-ripple--hover-invalid {\r\n        &::after {\r\n            background: var-get($theme, 'error-color-hover');\r\n        }\r\n    }\r\n\r\n    %switch-ripple--hover-checked-invalid {\r\n        &::after {\r\n            background: var-get($theme, 'thumb-on-color');\r\n        }\r\n    }\r\n\r\n    %switch-ripple--pressed {\r\n        &::after {\r\n            opacity: .12;\r\n\r\n            @if $theme-variant == 'dark' {\r\n                opacity: .24;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n/// Adds typography styles for the igx-switch component.\r\n/// Uses the 'subtitle-1' category from the typographic scale.\r\n/// @group typography\r\n/// @param {Map} $categories [(label: 'subtitle-1')] - The categories from the typographic scale used for type styles.\r\n@mixin switch-typography(\r\n    $categories: (label: 'subtitle-1')\r\n) {\r\n    $label: map.get($categories, 'label');\r\n\r\n    %switch-label {\r\n        @include type-style($label) {\r\n            margin-top: 0;\r\n            margin-bottom: 0;\r\n        }\r\n    }\r\n}\r\n","@use 'sass:map';\r\n@use 'sass:meta';\r\n@use '../../base' as *;\r\n@use '../ripple/ripple-theme' as *;\r\n@use '../ripple/ripple-component' as *;\r\n@use '../../themes/schemas' as *;\r\n\r\n////\r\n/// @group themes\r\n/// @access public\r\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\r\n////\r\n\r\n/// If only background color is specified,\r\n/// the idle item color will be assigned automatically to a contrasting color.\r\n/// @param {Map} $schema [$light-material-schema] - The schema used as basis for styling the component.\r\n/// @param {Color} $item-text-color [null] - The color used for the tab text color.\r\n/// @param {Color} $item-background [null] - The background color used for the tabs header.\r\n/// @param {Color} $item-hover-background [null] - The background used for the tabs on hover.\r\n/// @param {Color} $item-hover-color [null] - The text color used for the tabs on hover.\r\n/// @param {Color} $item-icon-color [null] - The color used for the tab icon.\r\n/// @param {Color} $item-active-icon-color [null] - The color used for the active tab icon.\r\n/// @param {Color} $item-hover-icon-color [null] - The color used for the tab icon on hover.\r\n/// @param {Color} $item-disabled-icon-color [null] - The color used for the disabled tab icon.\r\n/// @param {Color} $item-active-color [null] - The color used for the active tabs text.\r\n/// @param {Color} $item-active-background [null] - The color used for the active/focused tab background.\r\n/// @param {Color} $item-disabled-color [null] - The color used for the disabled tabs text.\r\n/// @param {Color} $indicator-color [null] - The color used for the active tab indicator.\r\n/// @param {Color} $button-color [null] - The color used for the button icon/text color.\r\n/// @param {Color} $button-hover-color [null] - The color used for the button icon/text color on hover.\r\n/// @param {Color} $button-disabled-color [null] - The color used for the disabled button icon/text.\r\n/// @param {Color} $button-background [null] - The color used for the button background.\r\n/// @param {Color} $button-hover-background [null] - The color used for the button background on hover.\r\n/// @param {List} $border-radius [null] - The border radius for the tabs.\r\n/// @param {Color} $border-color [null] - The border color of the tabs.\r\n/// @param {Color} $border-color--hover [null] - The border color of the tabs on hover.\r\n/// @param {Color} $tab-ripple-color [null] - The color used for the button background.\r\n/// @param {Color} $button-ripple-color [null] - The color used for the button background on hover.\r\n/// @requires $light-material-schema\r\n/// @example scss Set a custom background color\r\n///   $my-tabs-theme: tabs-theme(\r\n///      $item-background: orange\r\n///    );\r\n///   // Pass the theme to the css-vars() mixin\r\n///   @include css-vars($my-tabs-theme);\r\n@function tabs-theme(\r\n    $schema: $light-material-schema,\r\n    $item-text-color: null,\r\n    $item-background: null,\r\n    $item-hover-background: null,\r\n    $item-hover-color: null,\r\n    $item-icon-color: null,\r\n    $item-active-icon-color: null,\r\n    $item-hover-icon-color: null,\r\n    $item-disabled-icon-color: null,\r\n    $item-active-color: null,\r\n    $item-active-background: null,\r\n    $item-disabled-color: null,\r\n    $indicator-color: null,\r\n    $button-color: null,\r\n    $button-background: null,\r\n    $button-hover-background: null,\r\n    $button-hover-color: null,\r\n    $button-disabled-color: null,\r\n    $tab-ripple-color: null,\r\n    $button-ripple-color: null,\r\n    $border-radius: null,\r\n    $border-color: null,\r\n    $border-color--hover: null,\r\n) {\r\n    $name: 'igx-tabs';\r\n    $tabs-schema: ();\r\n\r\n    @if map.has-key($schema, 'tabs') {\r\n        $tabs-schema: map.get($schema, 'tabs');\r\n    } @else {\r\n        $tabs-schema: $schema;\r\n    }\r\n\r\n    $theme: digest-schema($tabs-schema);\r\n    $meta: map.get($theme, '_meta');\r\n\r\n    @if not($item-text-color) and $item-background {\r\n        @if meta.type-of($item-background) == 'color' {\r\n            $item-text-color: rgba(text-contrast($item-background), .54);\r\n        }\r\n    }\r\n\r\n    @if not($item-hover-color) and $item-background {\r\n        $item-hover-color: text-contrast($item-background);\r\n    }\r\n\r\n    @if not($item-hover-color) and $item-hover-background {\r\n        $item-hover-color: text-contrast($item-hover-background);\r\n    }\r\n\r\n    @if not($item-active-icon-color) and $item-active-background {\r\n        $item-active-icon-color: text-contrast($item-active-background);\r\n    }\r\n\r\n    @if not($item-active-icon-color) and $item-background {\r\n        $item-active-icon-color: text-contrast($item-background);\r\n    }\r\n\r\n    @if not($indicator-color) and $item-background {\r\n        $indicator-color: text-contrast($item-background);\r\n    }\r\n\r\n    @if not($item-active-color) and $item-active-icon-color {\r\n        $item-active-color: $item-active-icon-color;\r\n    }\r\n\r\n    // Button\r\n    @if not($button-color) and $item-background {\r\n        $button-color: text-contrast($item-background);\r\n    }\r\n\r\n    @if not($button-color) and $button-background {\r\n        $button-color: text-contrast($button-background);\r\n    }\r\n\r\n    @if not($button-color) and $item-background {\r\n        $button-background: transparent;\r\n    }\r\n\r\n    @if not($button-hover-color) and $button-hover-background {\r\n        $button-hover-color: text-contrast($button-hover-background);\r\n    }\r\n\r\n    @if not($button-hover-background) and $item-background {\r\n        $button-hover-color: text-contrast($item-background);\r\n    }\r\n\r\n    @if not($button-background) and $item-background {\r\n        @if meta.type-of($item-background) == 'color' and lightness($item-background) > 50 {\r\n            $button-background: transparent;\r\n        } @else {\r\n            $button-background: rgba(255, 255, 255 , .1);\r\n        }\r\n    }\r\n\r\n    @if not($button-hover-background) and $item-background {\r\n        @if meta.type-of($item-background) == 'color' and lightness($item-background) > 50 {\r\n            $button-hover-background: rgba(0, 0, 0, .05);\r\n        } @else {\r\n            $button-hover-background: rgba(255, 255, 255 , .14);\r\n        }\r\n    }\r\n\r\n    @if not($button-ripple-color) and $button-background {\r\n        @if meta.type-of($item-background) == 'color' and lightness($item-background) > 50 {\r\n            $button-ripple-color: rgba(0, 0, 0, .4);\r\n        } @else {\r\n            $button-ripple-color: rgba(255, 255, 255, .4);\r\n        }\r\n    }\r\n    // Button end\r\n\r\n    @if not($tab-ripple-color) and $item-active-background {\r\n        $tab-ripple-color: text-contrast($item-active-background);\r\n    }\r\n\r\n    @if not($tab-ripple-color) and $item-background {\r\n        $tab-ripple-color: text-contrast($item-background);\r\n    }\r\n\r\n    @if not($border-radius) {\r\n        $border-radius: border-radius(map.get($theme, 'border-radius')...);\r\n    }\r\n\r\n    @return extend($theme, (\r\n        name: $name,\r\n        item-text-color: $item-text-color,\r\n        item-background: $item-background,\r\n        item-hover-color: $item-hover-color,\r\n        item-hover-background: $item-hover-background,\r\n        item-icon-color: $item-icon-color,\r\n        item-active-icon-color: $item-active-icon-color,\r\n        item-hover-icon-color: $item-hover-icon-color,\r\n        item-disabled-icon-color: $item-disabled-icon-color,\r\n        item-active-color: $item-active-color,\r\n        item-active-background: $item-active-background,\r\n        item-disabled-color: $item-disabled-color,\r\n        indicator-color: $indicator-color,\r\n        button-color: $button-color,\r\n        button-background: $button-background,\r\n        button-hover-background:$button-hover-background,\r\n        button-hover-color:$button-hover-color,\r\n        button-disabled-color:$button-disabled-color,\r\n        tab-ripple-color: $tab-ripple-color,\r\n        button-ripple-color: $button-ripple-color,\r\n        border-color: $border-color,\r\n        border-radius: $border-radius,\r\n        _meta: map.merge(if($meta, $meta, ()), (\r\n            variant: map.get($schema, '_meta', 'theme')\r\n        )),\r\n    ));\r\n}\r\n\r\n/// @param {Map} $theme - The theme used to style the component.\r\n/// @requires ripple-theme\r\n/// @requires {mixin} ripple\r\n@mixin tabs($theme) {\r\n    @include css-vars($theme);\r\n\r\n    $variant: map.get($theme, '_meta', 'variant');\r\n    $not-bootstrap-theme: $variant != 'bootstrap';\r\n    $bootstrap-theme: $variant == 'bootstrap';\r\n    $indigo-theme: $variant == 'indigo-design';\r\n\r\n    $item-min-width: rem(90px);\r\n    $item-max-width: rem(360px);\r\n\r\n    $tabs-animation-function: cubic-bezier(.35, 0, .25, 1);\r\n\r\n    $item-padding: rem(11px) rem(16px);\r\n\r\n    $tabs-ripple-theme: ripple-theme(\r\n        $schema: $light-material-schema,\r\n        $color: var-get($theme, 'tab-ripple-color')\r\n    );\r\n\r\n    $button-ripple-theme: ripple-theme(\r\n        $schema: $light-material-schema,\r\n        $color: var-get($theme, 'button-ripple-color')\r\n    );\r\n\r\n    %tabs-header,\r\n    %tabs-header-button,\r\n    %tabs-header-item-inner,\r\n    %tabs-header-content {\r\n        display: flex;\r\n    }\r\n\r\n    %tabs-display {\r\n        display: flex;\r\n        flex-direction: column;\r\n        overflow: hidden;\r\n    }\r\n\r\n    %tabs-header {\r\n        overflow: hidden;\r\n        flex: 0 0 auto;\r\n        background: var-get($theme, 'item-background');\r\n        min-height: rem(42px);\r\n        z-index: 1;\r\n    }\r\n\r\n    %tabs-header-content {\r\n        flex: 1 1 auto;\r\n        overflow: hidden;\r\n        scroll-behavior: smooth;\r\n    }\r\n\r\n    %tabs-header-wrapper {\r\n        position: relative;\r\n        flex-grow: 1;\r\n\r\n        @if $bootstrap-theme {\r\n            &::after {\r\n                content: '';\r\n                position: absolute;\r\n                bottom: 0;\r\n                inset-inline-start: 0;\r\n                width: 100%;\r\n                height: rem(1px);\r\n                background: var-get($theme, 'border-color');\r\n                z-index: 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    %tabs-header-scroll {\r\n        display: flex;\r\n        height: 100%;\r\n    }\r\n\r\n    %tabs-header-button {\r\n        align-items: center;\r\n        justify-content: center;\r\n        z-index: 1;\r\n        border: none;\r\n        padding: 0;\r\n        min-width: rem(48px);\r\n        width: rem(48px);\r\n        cursor: pointer;\r\n        position: relative;\r\n        background: var-get($theme, 'button-background');\r\n        color: var-get($theme, 'button-color');\r\n        outline: 0;\r\n\r\n        &:hover {\r\n            background: var-get($theme, 'button-hover-background');\r\n            color: var-get($theme, 'button-hover-color');\r\n        }\r\n\r\n        &:focus {\r\n            outline: 0;\r\n            background: var-get($theme, 'button-hover-background');\r\n        }\r\n\r\n        &::-moz-focus-inner {\r\n            // remove focus dotted border in firefox\r\n            border: 0;\r\n        }\r\n\r\n        &:disabled {\r\n            color: var-get($theme, 'button-disabled-color');\r\n        }\r\n\r\n        &--none {\r\n            display: none;\r\n        }\r\n\r\n\r\n        @include ripple($button-ripple-theme);\r\n        @include css-vars($button-ripple-theme);\r\n\r\n        [dir='rtl'] & {\r\n            transform: scaleX(-1);\r\n        }\r\n    }\r\n\r\n    %tabs-header-item {\r\n        > * {\r\n            margin-inline-start: rem(12px);\r\n\r\n            &:first-child {\r\n                margin-inline-start: 0;\r\n            }\r\n        }\r\n        display: inline-flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        min-width: $item-min-width;\r\n        max-width: $item-max-width;\r\n        word-wrap: break-word;\r\n        // Flex basis & shrink are Needed for IE11\r\n        flex-basis: auto;\r\n        flex-shrink: 0;\r\n        padding: $item-padding;\r\n        overflow: hidden;\r\n        cursor: pointer;\r\n        position: relative;\r\n        user-select: none;\r\n        background: var-get($theme, 'item-background');\r\n        color: var-get($theme, 'item-text-color');\r\n        outline: 0;\r\n\r\n        igx-icon {\r\n            color: var-get($theme, 'item-icon-color');\r\n        }\r\n\r\n        @if $bootstrap-theme {\r\n            border: rem(1px) solid transparent;\r\n            border-start-start-radius: var-get($theme, 'border-radius');\r\n            border-start-end-radius: var-get($theme, 'border-radius');\r\n        }\r\n\r\n        @if $indigo-theme {\r\n            border-bottom: rem(1px) solid var-get($theme, 'border-color');\r\n        }\r\n\r\n        &::-moz-focus-inner {\r\n            border: 0;\r\n        }\r\n\r\n        &:focus {\r\n            background: var-get($theme, 'item-active-background');\r\n            color: var-get($theme, 'item-hover-color');\r\n            border-bottom-color: transparent;\r\n        }\r\n\r\n        &:hover {\r\n            background: var-get($theme, 'item-hover-background');\r\n            color: var-get($theme, 'item-hover-color');\r\n\r\n            @if $bootstrap-theme {\r\n                box-shadow: inset 0 0 0 rem(1px) var-get($theme, 'border-color--hover');\r\n            }\r\n        }\r\n\r\n        &:hover,\r\n        &:focus {\r\n            igx-icon {\r\n                color: var-get($theme, 'item-hover-icon-color');\r\n            }\r\n        }\r\n\r\n        @if $bootstrap-theme {\r\n            border-start-start-radius: var-get($theme, 'border-radius');\r\n            border-start-end-radius: var-get($theme, 'border-radius');\r\n        }\r\n\r\n        @if $not-bootstrap-theme {\r\n            transition: all .3s $tabs-animation-function;\r\n            border: rem(1px) solid var-get($theme, 'border-color');\r\n\r\n            &:hover,\r\n            &:focus {\r\n                border: rem(1px) solid var-get($theme, 'border-color--hover');\r\n            }\r\n        }\r\n\r\n        @if $indigo-theme {\r\n            border-top: transparent;\r\n            border-inline: transparent;\r\n\r\n            &:hover,\r\n            &:focus {\r\n                border-top: transparent;\r\n                border-inline: transparent;\r\n            }\r\n        }\r\n\r\n        @include ripple($tabs-ripple-theme);\r\n        @include css-vars($tabs-ripple-theme);\r\n    }\r\n\r\n    %tabs-header-item--selected {\r\n        outline: 0;\r\n        color: var-get($theme, 'item-active-color');\r\n\r\n        &:hover,\r\n        &:focus {\r\n            background: var-get($theme, 'item-active-background');\r\n            color: var-get($theme, 'item-active-color');\r\n\r\n            igx-icon {\r\n                color: var-get($theme, 'item-active-icon-color');\r\n            }\r\n        }\r\n\r\n        igx-icon {\r\n            color: var-get($theme, 'item-active-icon-color');\r\n        }\r\n\r\n        @if $bootstrap-theme {\r\n            background: var-get($theme, 'item-active-background');\r\n            position: relative;\r\n            box-shadow: inset 0 0 0 rem(1px) var-get($theme, 'border-color');\r\n\r\n            &::after {\r\n                content: '';\r\n                position: absolute;\r\n                bottom: 0;\r\n                inset-inline-start: 0;\r\n                width: 100%;\r\n                height: rem(1px);\r\n                background: var-get($theme, 'item-active-background');\r\n                z-index: 1;\r\n            }\r\n\r\n            &:hover {\r\n                box-shadow: inset 0 0 0 rem(1px) var-get($theme, 'border-color');\r\n            }\r\n        }\r\n    }\r\n\r\n    %tabs-header-item:focus,\r\n    %tabs-header-item--selected:focus {\r\n        @if $bootstrap-theme {\r\n            border: none;\r\n            box-shadow: inset 0 0 0 rem(2px) var-get($theme, 'item-hover-color');\r\n            border-radius: rem(4px);\r\n            z-index: 1;\r\n\r\n            &::after {\r\n                display: none;\r\n            }\r\n        }\r\n    }\r\n\r\n    %tabs-header-item--disabled {\r\n        outline: 0;\r\n        color: var-get($theme, 'item-disabled-color');\r\n        cursor: default;\r\n        pointer-events: none;\r\n\r\n        igx-icon {\r\n            color: var-get($theme, 'item-disabled-icon-color');\r\n        }\r\n    }\r\n\r\n    %tabs-header-item-inner {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        flex-direction: column;\r\n        text-align: center;\r\n\r\n        > [igxtabheaderlabel] {\r\n            @include line-clamp(2, true, true);\r\n        }\r\n\r\n        > [igxtabheadericon] {\r\n            margin-bottom: rem(8px);\r\n\r\n            &:last-child {\r\n                margin-bottom: 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    %tabs-header-active-indicator {\r\n        position: absolute;\r\n        bottom: 0;\r\n        // We need to explicitly set the default for IE 11\r\n        left: 0;\r\n        transform: translateX(0);\r\n        height: rem(2px);\r\n        min-width: $item-min-width;\r\n        background: var-get($theme, 'indicator-color');\r\n        transition: transform .3s $tabs-animation-function, width .2s $tabs-animation-function;\r\n        @if $bootstrap-theme {\r\n            display: none;\r\n        }\r\n    }\r\n\r\n    %tabs-panels {\r\n        position: relative;\r\n        overflow: hidden;\r\n        display: flex;\r\n        flex-direction: column;\r\n        flex: 1 1 auto;\r\n    }\r\n\r\n    %tabs-panel {\r\n        position: absolute;\r\n        inset: 0;\r\n        overflow-x: hidden;\r\n        overflow-y: auto;\r\n        flex: 1 1 auto;\r\n\r\n        &::-moz-focus-inner {\r\n            // remove focus dotted border in firefox\r\n            border: 0;\r\n        }\r\n\r\n        &:focus {\r\n            outline-width: 0;\r\n        }\r\n\r\n        &[tabindex='0'] {\r\n            position: relative;\r\n        }\r\n    }\r\n\r\n    %tabs-header-scroll--start {\r\n        justify-content: flex-start;\r\n    }\r\n\r\n    %tabs-header-scroll--end {\r\n        justify-content: flex-end;\r\n        min-width: max-content;\r\n    }\r\n\r\n    %tabs-header-scroll--center {\r\n        justify-content: center;\r\n        min-width: max-content;\r\n    }\r\n\r\n    %tabs-header-scroll--justify {\r\n        %tabs-header-item {\r\n            flex-basis: 0;\r\n            flex-grow: 1;\r\n            max-width: 100%;\r\n        }\r\n    }\r\n}\r\n\r\n/// Adds typography styles for the igx-tabs component.\r\n/// Uses the 'subtitle-2'\r\n/// category from the typographic scale.\r\n/// @group typography\r\n/// @param {Map} $categories [(label: 'button')] - The categories from the typographic scale used for type styles.\r\n@mixin tabs-typography($categories: (label: 'button')) {\r\n    $label: map.get($categories, 'label');\r\n\r\n    %tabs-header-item-inner > [igxtabheaderlabel]{\r\n        @include type-style($label) {\r\n            margin-top: 0;\r\n            margin-bottom: 0;\r\n        }\r\n    }\r\n}\r\n","@use 'sass:map';\r\n@use 'sass:meta';\r\n@use '../../base' as *;\r\n@use '../../themes/schemas' as *;\r\n\r\n////\r\n/// @group themes\r\n/// @access public\r\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\r\n////\r\n\r\n/// If only background color is specified, text/icon color\r\n/// will be assigned automatically to a contrasting color.\r\n/// Does ___not___ apply for disabled state colors.\r\n/// @param {Map} $schema [$light-material-schema] - The schema used as basis for styling the component.\r\n/// @param {Map} $elevations [null] - The elevations (shadows) map to be used.\r\n/// @param {Color} $text-color [null] - The text color of a open time picker.\r\n/// @param {Color} $hover-text-color [null] - The hover text color of a open time picker.\r\n/// @param {Color} $selected-text-color [null] -  The text color of a selected item in time picker.\r\n/// @param {Color} $active-item-background [null] - The background color for current item in focused column inside the time picker.\r\n/// @param {Color} $disabled-text-color [null] - The text color for disabled values.\r\n/// @param {Color} $disabled-item-background [null] - The background color for disabled values .\r\n/// @param {Color} $header-background [null] - The header background color of a time picker.\r\n/// @param {Color} $header-hour-text-color [null] - The header hour text color of a time picker.\r\n/// @param {Color} $header-time-period-color [null] - The header AM/PM text color of a time picker.\r\n/// @param {Color} $background-color [null] - The time-picker panel background color.\r\n/// @param {box-shadow} $modal-shadow [null] - The custom shadow to be used for the time picker in modal mode.\r\n/// @param {box-shadow} $dropdown-shadow [null] - The custom shadow to be used for the time picker in dropdown mode.\r\n/// @param {List} $border-radius [null] - The border radius used for the outline of the picker.\r\n/// @param {List} $active-item-border-radius [null] - The border radius used for the outline of the currently active item (hours, minutes, AM/PM).\r\n/// @requires $light-material-schema\r\n/// @example scss Change the background and text colors in  time picker\r\n///   $my-time-picker-theme: time-picker-theme(\r\n///     $text-color: white,\r\n///     $background-color: black\r\n///   );\r\n///   // Pass the theme to the css-vars() mixin\r\n///   @include css-vars($my-time-picker-theme);\r\n@function time-picker-theme(\r\n    $schema: $light-material-schema,\r\n    $elevations: null,\r\n\r\n    $border-radius: null,\r\n    $active-item-border-radius: null,\r\n\r\n    $text-color: null,\r\n    $hover-text-color: null,\r\n    $selected-text-color: null,\r\n    $active-item-background: null,\r\n    $disabled-text-color: null,\r\n    $disabled-item-background: null,\r\n    $header-background: null,\r\n    $header-hour-text-color: null,\r\n    $header-time-period-color: null,\r\n    $background-color: null,\r\n    $modal-shadow: null,\r\n    $dropdown-shadow: null\r\n) {\r\n    $name: 'igx-time-picker';\r\n    $selector: '.igx-time-picker';\r\n    $time-picker-schema: ();\r\n\r\n    @if map.has-key($schema, 'time-picker') {\r\n        $time-picker-schema: map.get($schema, 'time-picker');\r\n    } @else {\r\n        $time-picker-schema: $schema;\r\n    }\r\n\r\n    $theme: digest-schema($time-picker-schema);\r\n    $meta: map.get($theme, '_meta');\r\n\r\n    @if not($text-color) and $background-color {\r\n        $text-color: text-contrast($background-color);\r\n    }\r\n\r\n    @if not($header-hour-text-color) and $header-background {\r\n        $header-hour-text-color: text-contrast($header-background);\r\n    }\r\n\r\n    @if not($header-time-period-color) and $header-background {\r\n        @if meta.type-of($header-background) == 'color' {\r\n            $header-time-period-color: rgba(text-contrast($header-background), .8);\r\n        }\r\n    }\r\n\r\n    @if not($selected-text-color) and $active-item-background {\r\n        $selected-text-color: text-contrast($active-item-background);\r\n    }\r\n\r\n    @if not($active-item-background) and $background-color {\r\n        @if meta.type-of($background-color) == 'color' {\r\n            $active-item-background: rgba(text-contrast($background-color), .12);\r\n        }\r\n    }\r\n\r\n    @if not($disabled-text-color) and $disabled-item-background {\r\n        @if meta.type-of($disabled-item-background) == 'color' {\r\n            $disabled-text-color: rgba(text-contrast($disabled-item-background), .6);\r\n        }\r\n    }\r\n\r\n    @if not($modal-shadow) {\r\n        $elevation: map.get($time-picker-schema, 'modal-elevation');\r\n        $modal-shadow: elevation($elevation);\r\n    }\r\n\r\n    @if not($dropdown-shadow) {\r\n        $elevation: map.get($time-picker-schema, 'dropdown-elevation');\r\n        $dropdown-shadow: elevation($elevation);\r\n    }\r\n\r\n    @if not($border-radius) {\r\n        $border-radius: border-radius(map.get($theme, 'border-radius')...);\r\n    }\r\n\r\n    @if not($active-item-border-radius) {\r\n        $active-item-border-radius: border-radius(map.get($theme, 'active-item-border-radius')...);\r\n    }\r\n\r\n    @return extend($theme, (\r\n        name: $name,\r\n        selector: $selector,\r\n        text-color: $text-color,\r\n        hover-text-color: $hover-text-color,\r\n        selected-text-color: $selected-text-color,\r\n        active-item-background: $active-item-background,\r\n        disabled-text-color: $disabled-text-color,\r\n        disabled-item-background: $disabled-item-background,\r\n        header-background: $header-background,\r\n        header-hour-text-color: $header-hour-text-color,\r\n        header-time-period-color: $header-time-period-color,\r\n        background-color: $background-color,\r\n        modal-shadow: $modal-shadow,\r\n        dropdown-shadow: $dropdown-shadow,\r\n        border-radius: $border-radius,\r\n        active-item-border-radius: $active-item-border-radius,\r\n        _meta: map.merge(if($meta, $meta, ()), (\r\n            variant: map.get($schema, '_meta', 'theme')\r\n        )),\r\n    ));\r\n}\r\n\r\n/// @param {Map} $theme - The theme used to style the component.\r\n@mixin time-picker($theme) {\r\n    @include css-vars($theme);\r\n\r\n    $variant: map.get($theme, '_meta', 'variant');\r\n    $not-bootstrap-theme: $variant != 'bootstrap';\r\n\r\n    $vertical-header-width: rem(168px);\r\n\r\n    $picker-buttons-padding: map.get((\r\n        material: rem(8px),\r\n        fluent: rem(8px),\r\n        bootstrap: rem(16px)\r\n    ), $variant);\r\n\r\n    %time-picker-display {\r\n        display: flex;\r\n        flex-flow: column nowrap;\r\n        max-width: rem(340px);\r\n        min-width: rem(320px);\r\n        border-radius: var-get($theme, 'border-radius');\r\n        box-shadow: var-get($theme, 'modal-shadow');\r\n        overflow: hidden;\r\n    }\r\n\r\n    %time-picker-display--vertical {\r\n        flex-flow: row nowrap;\r\n        min-width: rem(540px);\r\n    }\r\n\r\n    %time-picker__main {\r\n        background: var-get($theme, 'background-color');\r\n        flex: 1 1 auto;\r\n    }\r\n\r\n    %time-picker--dropdown {\r\n        min-width: rem(200px);\r\n        box-shadow: var-get($theme, 'dropdown-shadow');\r\n    }\r\n\r\n    %time-picker__body {\r\n        display: flex;\r\n        padding: rem(10px) 0;\r\n        justify-content: center;\r\n    }\r\n\r\n    %time-picker-content {\r\n        width: 100%;\r\n        padding: 0;\r\n        color: inherit;\r\n        line-height: initial;\r\n    }\r\n\r\n    %time-picker-dialog-title {\r\n        display: none;\r\n    }\r\n\r\n    %time-picker-dialog-actions {\r\n        margin: 0;\r\n    }\r\n\r\n    %time-picker__hourList {\r\n        text-align: end;\r\n\r\n        [dir='rtl'] & {\r\n            order: 2;\r\n        }\r\n    }\r\n\r\n    %time-picker__minuteList {\r\n        text-align: center;\r\n\r\n        [dir='rtl'] & {\r\n            order: 1;\r\n        }\r\n    }\r\n\r\n    %time-picker__secondsList {\r\n        text-align: center;\r\n    }\r\n\r\n    %time-picker__ampmList {\r\n        display: flex;\r\n        flex-direction: column;\r\n        padding-top: rem(48px);\r\n\r\n        [dir='rtl'] & {\r\n            order: 3;\r\n        }\r\n    }\r\n\r\n    %time-picker__column {\r\n        max-width: rem(64px);\r\n        height: rem(325px);\r\n        padding: 0;\r\n        cursor: pointer;\r\n        display: flex;\r\n        flex-flow: column nowrap;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n        color: var-get($theme, 'text-color');\r\n        overflow: hidden;\r\n\r\n        &:focus,\r\n        &:active {\r\n            outline: none;\r\n        }\r\n    }\r\n\r\n    %time-picker__item {\r\n        width: rem(54px);\r\n        padding: rem(5px) rem(10px);\r\n        border-radius: var-get($theme, 'active-item-border-radius');\r\n        height: rem(48px);\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n\r\n        &:focus,\r\n        &:active {\r\n            outline: none;\r\n        }\r\n\r\n        &:hover {\r\n            color: var-get($theme, 'hover-text-color');\r\n        }\r\n    }\r\n\r\n    %time-picker__item--selected {\r\n        font-size: rem(24px);\r\n        color: var-get($theme, 'selected-text-color');\r\n    }\r\n\r\n    %time-picker__item--active {\r\n        background: var-get($theme, 'active-item-background');\r\n    }\r\n\r\n    %time-picker__item--disabled {\r\n        color: var-get($theme, 'disabled-text-color');\r\n        background: var-get($theme, 'disabled-item-background');\r\n        pointer-events: none;\r\n    }\r\n\r\n    %time-picker__header {\r\n        background: var-get($theme, 'header-background');\r\n        padding: rem(24px) rem(16px);\r\n    }\r\n\r\n    %time-picker__header-ampm {\r\n        color: var-get($theme, 'header-time-period-color');\r\n    }\r\n\r\n    %time-picker__header--vertical {\r\n        width: $vertical-header-width;\r\n    }\r\n\r\n    %time-picker__header-hour {\r\n        display: flex;\r\n        color: var-get($theme, 'header-hour-text-color');\r\n\r\n        [dir='rtl'] & {\r\n            flex-direction: row-reverse;\r\n            justify-content: flex-end;\r\n        }\r\n    }\r\n\r\n    %time-picker__header-ampm,\r\n    %time-picker__header-hour {\r\n        margin: 0;\r\n    }\r\n\r\n    %time-picker__buttons {\r\n        display: flex;\r\n        justify-content: flex-end;\r\n        @if $not-bootstrap-theme {\r\n            height: rem(52px);\r\n        }\r\n\r\n        padding: $picker-buttons-padding;\r\n\r\n        [igxButton] + [igxButton] {\r\n            margin-inline-start: rem(8px);\r\n        }\r\n    }\r\n}\r\n\r\n/// Adds typography styles for the igx-calendar component.\r\n/// Uses the 'h4', 'subtitle-1' and 'body-1'\r\n/// category from the typographic scale.\r\n/// @group typography\r\n/// @param {Map} $categories [(header-time-period: 'subtitle-1', header-hour: 'h4', content: 'body-1')] - The categories from the typographic scale used for type styles.\r\n@mixin time-picker-typography($categories: (\r\n    header-time-period: 'subtitle-1',\r\n    header-hour: 'h4',\r\n    content: 'body-1')\r\n) {\r\n    $time-period: map.get($categories, 'header-time-period');\r\n    $header-hour: map.get($categories, 'header-hour');\r\n    $content: map.get($categories, 'content');\r\n\r\n    %time-picker__header-ampm {\r\n        @include type-style($time-period);\r\n    }\r\n\r\n    %time-picker__header-hour {\r\n        @include type-style($header-hour) {\r\n            margin-top: 0;\r\n        }\r\n    }\r\n\r\n    %time-picker__column {\r\n        @include type-style($content) {\r\n            margin-top: 0;\r\n            margin-bottom: 0;\r\n        }\r\n    }\r\n}\r\n","@use 'sass:map';\r\n@use 'sass:math';\r\n@use '../../base' as *;\r\n@use '../../themes/schemas' as *;\r\n\r\n////\r\n/// @group themes\r\n/// @access public\r\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\r\n////\r\n\r\n/// @param {Map} $schema [$light-material-schema] - The schema used as basis for styling the component.\r\n///\r\n/// @param {Color} $step-background [null] - The background of the step header.\r\n/// @param {Color} $step-hover-background [null] - The background of the step header on hover.\r\n/// @param {Color} $step-focus-background [null] - The background of the step header on focus.\r\n/// @param {Color} $title-color [null] - The color of the step title.\r\n/// @param {Color} $title-hover-color [null] - The color of the step title on hover.\r\n/// @param {Color} $title-focus-color [null] - The color of the step title on focus.\r\n/// @param {Color} $subtitle-color [null] - The color of the step subtitle.\r\n/// @param {Color} $subtitle-hover-color [null] - The color of the step subtitle on hover.\r\n/// @param {Color} $subtitle-focus-color [null] - The color of the step subtitle on focus.\r\n/// @param {Color} $indicator-color [null] - The text color of the step indicator.\r\n/// @param {Color} $indicator-background [null] - The background color of the step indicator.\r\n/// @param {Color} $indicator-outline [null] - The outline color of the step indicator.\r\n///\r\n/// @param {Color} $invalid-step-background [null] - The background of the invalid step header.\r\n/// @param {Color} $invalid-step-hover-background [null] - The background of the invalid step header on hover.\r\n/// @param {Color} $invalid-step-focus-background [null] - The background of the invalid step header on focus.\r\n/// @param {Color} $invalid-title-color [null] - The color of the invalid step title.\r\n/// @param {Color} $invalid-title-hover-color [null] - The color of the invalid step title on hover.\r\n/// @param {Color} $invalid-title-focus-color [null] - The color of the invalid step title on focus.\r\n/// @param {Color} $invalid-subtitle-color [null] - The color of the invalid step subtitle.\r\n/// @param {Color} $invalid-subtitle-hover-color [null] - The color of the invalid step subtitle on hover.\r\n/// @param {Color} $invalid-subtitle-focus-color [null] - The color of the invalid step subtitle on focus.\r\n/// @param {Color} $invalid-indicator-color [null] - The color of the invalid step indicator.\r\n/// @param {Color} $invalid-indicator-background [null] - The background color of the invalid step indicator.\r\n/// @param {Color} $invalid-indicator-outline [null] - The outline color of the invalid step indicator.\r\n///\r\n/// @param {Color} $current-step-background [null] - The background of the current step header.\r\n/// @param {Color} $current-step-hover-background [null] - The background of the current step header on hover.\r\n/// @param {Color} $current-step-focus-background [null] - The background of the current step header on focus.\r\n/// @param {Color} $current-title-color [null] - The color of the current step title.\r\n/// @param {Color} $current-title-hover-color [null] - The color of the current step title on hover.\r\n/// @param {Color} $current-title-focus-color [null] - The color of the current step title on focus.\r\n/// @param {Color} $current-subtitle-color [null] - The color of the current step subtitle.\r\n/// @param {Color} $current-subtitle-hover-color [null] - The color of the current step subtitle on hover.\r\n/// @param {Color} $current-subtitle-focus-color [null] - The color of the current step subtitle on focus.\r\n/// @param {Color} $current-indicator-color [null] - The color of the current step indicator.\r\n/// @param {Color} $current-indicator-background [null] - The background color of the current step indicator.\r\n/// @param {Color} $current-indicator-outline [null] - The outline color of the current step indicator.\r\n///\r\n/// @param {Color} $complete-step-background [null] - The background of the complete step header.\r\n/// @param {Color} $complete-step-hover-background [null] - The background of the complete step header on hover.\r\n/// @param {Color} $complete-step-focus-background [null] - The background of the complete step header on focus.\r\n/// @param {Color} $complete-title-color [null] - The color of the complete step title.\r\n/// @param {Color} $complete-title-hover-color [null] - The color of the complete step title on hover.\r\n/// @param {Color} $complete-title-focus-color [null] - The color of the complete step title on focus.\r\n/// @param {Color} $complete-subtitle-color [null] - The color of the complete step subtitle.\r\n/// @param {Color} $complete-subtitle-hover-color [null] - The color of the complete step subtitle on hover.\r\n/// @param {Color} $complete-subtitle-focus-color [null] - The color of the complete step subtitle on focus.\r\n/// @param {Color} $complete-indicator-color [null] - The color of the completed step indicator.\r\n/// @param {Color} $complete-indicator-background [null] - The background color of the completed step indicator.\r\n/// @param {Color} $complete-indicator-outline [null] - The outline color of the completed step indicator.\r\n///\r\n/// @param {Color} $disabled-title-color [null] - The title color of the disabled step.\r\n/// @param {Color} $disabled-subtitle-color [null] - The subtitle color of the disabled step.\r\n/// @param {Color} $disabled-indicator-color [null] - The indicator color of the disabled step.\r\n/// @param {Color} $disabled-indicator-background [null] - The indicator background of the disabled step.\r\n/// @param {Color} $disabled-indicator-outline [null] - The indicator outline color of the disabled step.\r\n///\r\n/// @param {Color} $step-separator-color [null] - The separator border-color of between the steps.\r\n/// @param {Color} $complete-step-separator-color [null] - The separator border-color between the completed steps.\r\n///\r\n/// @param {Color} $step-separator-style [null] - The separator border-style of between the steps.\r\n/// @param {Color} $complete-step-separator-style [null] - The separator border-style between the completed steps.\r\n///\r\n/// @param {List} $border-radius-indicator [null] - The border-radius of the step indicator.\r\n/// @param {List} $border-radius-step-header [null] - The border-radius of the step header.\r\n///\r\n/// @requires $light-material-schema\r\n/// @example scss Set custom stepper colors\r\n///   $my-stepper-theme: stepper-theme($step-hover-background: red);\r\n///   // Pass the theme to the css-vars() mixin\r\n///   @include css-vars($my-stepper-theme);\r\n@function stepper-theme(\r\n    $schema: $light-material-schema,\r\n\r\n    $step-background: null,\r\n    $step-hover-background: null,\r\n    $step-focus-background: null,\r\n\r\n    $invalid-step-background: null,\r\n    $invalid-step-hover-background: null,\r\n    $invalid-step-focus-background: null,\r\n\r\n    $current-step-background: null,\r\n    $current-step-hover-background: null,\r\n    $current-step-focus-background: null,\r\n\r\n    $complete-step-background: null,\r\n    $complete-step-hover-background: null,\r\n    $complete-step-focus-background: null,\r\n\r\n    // Incomplete\r\n    $indicator-color: null,\r\n    $indicator-background: null,\r\n    $indicator-outline: null,\r\n\r\n    $title-color: null,\r\n    $title-hover-color: null,\r\n    $title-focus-color: null,\r\n\r\n    $subtitle-color: null,\r\n    $subtitle-hover-color: null,\r\n    $subtitle-focus-color: null,\r\n\r\n    // Invalid\r\n    $invalid-indicator-color: null,\r\n    $invalid-indicator-background: null,\r\n    $invalid-indicator-outline: null,\r\n\r\n    $invalid-title-color: null,\r\n    $invalid-title-hover-color: null,\r\n    $invalid-title-focus-color: null,\r\n\r\n    $invalid-subtitle-color: null,\r\n    $invalid-subtitle-hover-color: null,\r\n    $invalid-subtitle-focus-color: null,\r\n\r\n    // Current\r\n    $current-indicator-color: null,\r\n    $current-indicator-background: null,\r\n    $current-indicator-outline: null,\r\n\r\n    $current-title-color: null,\r\n    $current-title-hover-color: null,\r\n    $current-title-focus-color: null,\r\n\r\n    $current-subtitle-color: null,\r\n    $current-subtitle-hover-color: null,\r\n    $current-subtitle-focus-color: null,\r\n\r\n    // complete\r\n    $complete-indicator-color: null,\r\n    $complete-indicator-background: null,\r\n    $complete-indicator-outline: null,\r\n\r\n    $complete-title-color: null,\r\n    $complete-title-hover-color: null,\r\n    $complete-title-focus-color: null,\r\n\r\n    $complete-subtitle-color: null,\r\n    $complete-subtitle-hover-color: null,\r\n    $complete-subtitle-focus-color: null,\r\n\r\n    // Disabled\r\n    $disabled-indicator-color: null,\r\n    $disabled-indicator-background: null,\r\n    $disabled-indicator-outline: null,\r\n    $disabled-title-color: null,\r\n    $disabled-subtitle-color: null,\r\n\r\n    // Separator\r\n    $step-separator-color: null,\r\n    $complete-step-separator-color: null,\r\n\r\n    $step-separator-style: null,\r\n    $complete-step-separator-style: null,\r\n\r\n    // Border-radius\r\n    $border-radius-indicator: null,\r\n    $border-radius-step-header: null,\r\n) {\r\n    $name: 'igx-stepper';\r\n    $selector: 'igx-stepper';\r\n    $stepper-schema: ();\r\n\r\n    @if map.has-key($schema, 'stepper') {\r\n        $stepper-schema: map.get($schema, 'stepper');\r\n    } @else {\r\n        $stepper-schema: $schema;\r\n    }\r\n\r\n    $theme: digest-schema($stepper-schema);\r\n    $meta: map.get($theme, '_meta');\r\n\r\n    @if not($indicator-background) and $step-background {\r\n        $indicator-background: text-contrast($step-background);\r\n    }\r\n\r\n    @if not($indicator-color) and $indicator-background {\r\n        $indicator-color: text-contrast($indicator-background);\r\n    }\r\n\r\n    @if not($complete-indicator-color) and $complete-indicator-background {\r\n        $complete-indicator-color: text-contrast($complete-indicator-background);\r\n    }\r\n\r\n    @if not($invalid-indicator-color) and $invalid-indicator-background {\r\n        $invalid-indicator-color: text-contrast($invalid-indicator-background);\r\n    }\r\n\r\n    @if not($current-indicator-color) and $current-indicator-background {\r\n        $current-indicator-color: text-contrast($current-indicator-background);\r\n    }\r\n\r\n    @if not($title-color) and $step-background {\r\n        $title-color: text-contrast($step-background);\r\n    }\r\n\r\n    @if not($subtitle-color) and $step-background {\r\n        $subtitle-color: text-contrast($step-background);\r\n    }\r\n\r\n    @if not($title-hover-color) and $step-hover-background {\r\n        $title-hover-color: text-contrast($step-hover-background);\r\n    }\r\n\r\n    @if not($subtitle-hover-color) and $step-hover-background {\r\n        $subtitle-hover-color: text-contrast($step-hover-background);\r\n    }\r\n\r\n    @if not($title-focus-color) and $step-focus-background {\r\n        $title-focus-color: text-contrast($step-focus-background);\r\n    }\r\n\r\n    @if not($subtitle-focus-color) and $step-focus-background {\r\n        $subtitle-focus-color: text-contrast($step-focus-background);\r\n    }\r\n\r\n    @if not($border-radius-indicator) {\r\n        $border-radius-indicator: border-radius(map.get($theme, 'border-radius-indicator')...);\r\n    }\r\n\r\n    @if not($border-radius-step-header) {\r\n        $border-radius-step-header: border-radius(map.get($theme, 'border-radius-step-header')...);\r\n    }\r\n\r\n    @return extend($theme, (\r\n        name: $name,\r\n        selector: $selector,\r\n\r\n        // Incomplete\r\n        step-background: $step-background,\r\n        step-hover-background: $step-hover-background,\r\n        step-focus-background: $step-focus-background,\r\n        indicator-color: $indicator-color,\r\n        indicator-background: $indicator-background,\r\n        indicator-outline: $indicator-outline,\r\n        title-color: $title-color,\r\n        title-hover-color: $title-hover-color,\r\n        title-focus-color: $title-focus-color,\r\n        subtitle-color: $subtitle-color,\r\n        subtitle-hover-color: $subtitle-hover-color,\r\n        subtitle-focus-color: $subtitle-focus-color,\r\n\r\n        // Invalid\r\n        invalid-step-background: $invalid-step-background,\r\n        invalid-step-hover-background: $invalid-step-hover-background,\r\n        invalid-step-focus-background: $invalid-step-focus-background,\r\n        invalid-indicator-color: $invalid-indicator-color,\r\n        invalid-indicator-background: $invalid-indicator-background,\r\n        invalid-indicator-outline: $invalid-indicator-outline,\r\n        invalid-title-color: $invalid-title-color,\r\n        invalid-title-hover-color: $invalid-title-hover-color,\r\n        invalid-title-focus-color: $invalid-title-focus-color,\r\n        invalid-subtitle-color: $invalid-subtitle-color,\r\n        invalid-subtitle-hover-color: $invalid-subtitle-hover-color,\r\n        invalid-subtitle-focus-color: $invalid-subtitle-focus-color,\r\n\r\n        // Current\r\n        current-step-background: $current-step-background,\r\n        current-step-hover-background: $current-step-hover-background,\r\n        current-step-focus-background: $current-step-focus-background,\r\n        current-indicator-color: $current-indicator-color,\r\n        current-indicator-background: $current-indicator-background,\r\n        current-indicator-outline: $current-indicator-outline,\r\n        current-title-color: $current-title-color,\r\n        current-title-hover-color: $current-title-hover-color,\r\n        current-title-focus-color: $current-title-focus-color,\r\n        current-subtitle-color: $current-subtitle-color,\r\n        current-subtitle-hover-color: $current-subtitle-hover-color,\r\n        current-subtitle-focus-color: $current-subtitle-focus-color,\r\n\r\n        // Complete\r\n        complete-step-background: $complete-step-background,\r\n        complete-step-hover-background: $complete-step-hover-background,\r\n        complete-step-focus-background: $complete-step-focus-background,\r\n        complete-indicator-color: $complete-indicator-color,\r\n        complete-indicator-background: $complete-indicator-background,\r\n        complete-indicator-outline: $complete-indicator-outline,\r\n        complete-title-color: $complete-title-color,\r\n        complete-title-hover-color: $complete-title-hover-color,\r\n        complete-title-focus-color: $complete-title-focus-color,\r\n        complete-subtitle-color: $complete-subtitle-color,\r\n        complete-subtitle-hover-color: $complete-subtitle-hover-color,\r\n        complete-subtitle-focus-color: $complete-subtitle-focus-color,\r\n\r\n        // Disabled\r\n        disabled-indicator-color: $disabled-indicator-color,\r\n        disabled-indicator-background: $disabled-indicator-background,\r\n        disabled-indicator-outline: $disabled-indicator-outline,\r\n        disabled-title-color: $disabled-title-color,\r\n        disabled-subtitle-color: $disabled-subtitle-color,\r\n\r\n        // Separator\r\n        step-separator-color: $step-separator-color,\r\n        complete-step-separator-color: $complete-step-separator-color,\r\n        step-separator-style: $step-separator-style,\r\n        complete-step-separator-style: $complete-step-separator-style,\r\n\r\n        // Border-radius\r\n        border-radius-indicator: $border-radius-indicator,\r\n        border-radius-step-header: $border-radius-step-header,\r\n        _meta: map.merge(if($meta, $meta, ()), (\r\n            variant: map.get($schema, '_meta', 'theme')\r\n        )),\r\n    ));\r\n}\r\n\r\n/// @param {Map} $theme - The theme used to style the component.\r\n@mixin stepper($theme) {\r\n    @include css-vars($theme);\r\n\r\n    $variant: map.get($theme, '_meta', 'variant');\r\n\r\n    $indicator-size: map.get((\r\n        material: rem(24px),\r\n        fluent: rem(24px),\r\n        bootstrap: rem(40px),\r\n        indigo-design: rem(24px)\r\n    ), $variant);\r\n\r\n    $step-header-padding: map.get((\r\n        material: rem(24px),\r\n        fluent: rem(8px),\r\n        bootstrap: rem(24px),\r\n        indigo-design: rem(16px)\r\n    ), $variant);\r\n\r\n    $step-header-padding-simple: map.get((\r\n        material: rem(8px),\r\n        fluent: rem(8px),\r\n        bootstrap: rem(16px),\r\n        indigo-design: rem(8px)\r\n    ), $variant);\r\n\r\n    $step-body-padding: rem(16px);\r\n    $title-gap: rem(8px);\r\n    $indicator-gap: rem(4px);\r\n    $indicator-padding: rem(2px);\r\n    $v-line-indent: calc(#{$step-header-padding} + (#{$indicator-size} / 2));\r\n    $separator-position: 50%;\r\n\r\n    $outline-width: map.get((\r\n        material: rem(1px),\r\n        fluent: rem(1px),\r\n        bootstrap: rem(1px),\r\n        indigo-design: rem(2px)\r\n    ), $variant);\r\n\r\n    $separator-size: map.get((\r\n        material: rem(1px),\r\n        fluent: rem(1px),\r\n        bootstrap: rem(8px),\r\n        indigo-design: rem(2px)\r\n    ), $variant);\r\n\r\n    $separator-title-top: calc(100% - ((#{$indicator-size} / 2) + #{$step-header-padding} + (#{$separator-size} / 2)));\r\n    $separator-title-bottom: calc((#{$indicator-size} / 2) + #{$step-header-padding} - (#{$separator-size} / 2));\r\n\r\n    %stepper-display,\r\n    %igx-stepper__header,\r\n    %igx-stepper__body,\r\n    %igx-stepper__step {\r\n        display: flex;\r\n    }\r\n\r\n    %stepper-display {\r\n        flex-direction: column;\r\n        width: 100%;\r\n    }\r\n\r\n    %igx-stepper__header {\r\n        white-space: nowrap;\r\n        flex-direction: column;\r\n        width: 100%;\r\n        flex: none;\r\n    }\r\n\r\n    %igx-stepper__body {\r\n        position: relative;\r\n        flex-direction: column;\r\n        flex: 1 1 auto;\r\n    }\r\n\r\n    %stepper-display,\r\n    %igx-stepper__body,\r\n    %igx-stepper__step-header,\r\n    %igx-stepper__step-title-wrapper {\r\n        overflow: hidden;\r\n    }\r\n\r\n    %igx-stepper__step-title {\r\n        color: var-get($theme, 'title-color');\r\n    }\r\n\r\n    %igx-stepper__step-subtitle {\r\n        color: var-get($theme, 'subtitle-color');\r\n    }\r\n\r\n    %igx-stepper__step {\r\n        position: relative;\r\n        flex-direction: column;\r\n        align-content: center;\r\n        justify-content: center;\r\n        min-width: rem(100px);\r\n\r\n        &:focus {\r\n            outline: none;\r\n\r\n            %igx-stepper__step-title {\r\n                color: var-get($theme, 'title-focus-color');\r\n            }\r\n\r\n            %igx-stepper__step-subtitle {\r\n                color: var-get($theme, 'subtitle-focus-color');\r\n            }\r\n\r\n            %igx-stepper__step-header {\r\n                background: var-get($theme, 'step-focus-background');\r\n                color: var-get($theme, 'title-focus-color');\r\n\r\n                @if $variant == 'bootstrap' {\r\n                    box-shadow: inset 0 0 0 $outline-width var-get($theme, 'indicator-outline');\r\n                }\r\n            }\r\n\r\n            %igx-stepper__step-header--current {\r\n                background: var-get($theme, 'current-step-focus-background') !important;\r\n\r\n                %igx-stepper__step-title {\r\n                    color: var-get($theme, 'current-title-focus-color');\r\n                }\r\n\r\n                %igx-stepper__step-subtitle {\r\n                    color: var-get($theme, 'current-subtitle-focus-color');\r\n                }\r\n            }\r\n\r\n            %igx-stepper__step-header--invalid {\r\n                background: var-get($theme, 'invalid-step-focus-background');\r\n\r\n                %igx-stepper__step-title {\r\n                    color: var-get($theme, 'invalid-title-focus-color');\r\n                }\r\n\r\n                %igx-stepper__step-subtitle {\r\n                    color: var-get($theme, 'invalid-subtitle-focus-color');\r\n                }\r\n            }\r\n        }\r\n\r\n        &:first-of-type {\r\n            %igx-stepper__step-header {\r\n                &::before {\r\n                    visibility: hidden;\r\n                }\r\n            }\r\n        }\r\n\r\n        &:last-of-type {\r\n            %igx-stepper__step-content-wrapper {\r\n                &::before {\r\n                    display: none;\r\n                }\r\n            }\r\n\r\n            %igx-stepper__step-header {\r\n                &::after {\r\n                    visibility: hidden;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    %igx-stepper__step-header {\r\n        display: flex;\r\n        padding: $step-header-padding;\r\n        position: relative;\r\n        line-height: normal;\r\n        flex-direction: column;\r\n        align-items: flex-start;\r\n        gap: $title-gap;\r\n        cursor: pointer;\r\n        background: var-get($theme, 'step-background');\r\n        border-radius: var-get($theme, 'border-radius-step-header');\r\n\r\n        &:hover {\r\n            background: var-get($theme, 'step-hover-background');\r\n            color: var-get($theme, 'title-hover-color');\r\n        }\r\n\r\n        @if $variant != material {\r\n            .igx-ripple__inner {\r\n                display: none;\r\n            }\r\n        }\r\n    }\r\n\r\n    %igx-stepper__step-indicator {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        position: relative;\r\n        font-size: rem(12px);\r\n        height: $indicator-size;\r\n        width: $indicator-size;\r\n        white-space: nowrap;\r\n        border-radius: var-get($theme, 'border-radius-indicator');\r\n        color: var-get($theme, 'indicator-color');\r\n        background: var-get($theme, 'indicator-background');\r\n        box-shadow: 0 0 0 $outline-width var-get($theme, 'indicator-outline');\r\n\r\n        @if $variant != 'bootstrap' {\r\n            > igx-icon {\r\n                width: var(--igx-icon-size, #{calc(#{$indicator-size} - #{rem(6px)})});\r\n                height: var(--igx-icon-size, #{calc(#{$indicator-size} - #{rem(6px)})});\r\n                font-size: var(--igx-icon-size, #{calc(#{$indicator-size} - #{rem(6px)})});\r\n                color: inherit;\r\n            }\r\n        } @else if $variant == 'bootstrap' {\r\n            > igx-icon {\r\n                width: var(--igx-icon-size, #{rem(18px)});\r\n                height: var(--igx-icon-size, #{rem(18px)});\r\n                font-size: var(--igx-icon-size, #{rem(18px)});\r\n            }\r\n        }\r\n\r\n        div > igx-icon,\r\n        div > igx-avatar,\r\n        div > igx-circular-bar {\r\n            max-height: $indicator-size;\r\n            max-width: $indicator-size;\r\n        }\r\n    }\r\n\r\n    %igx-stepper__step-header--current {\r\n        background: var-get($theme, 'current-step-background') !important;\r\n        color: var-get($theme, 'current-title-color');\r\n\r\n        %igx-stepper__step-indicator {\r\n            color: var-get($theme, 'current-indicator-color') !important;\r\n            background: var-get($theme, 'current-indicator-background') !important;\r\n            box-shadow: 0 0 0 $outline-width var-get($theme, 'current-indicator-outline') !important;\r\n        }\r\n\r\n        %igx-stepper__step-title {\r\n            color: var-get($theme, 'current-title-color');\r\n        }\r\n\r\n        %igx-stepper__step-subtitle {\r\n            color: var-get($theme, 'current-subtitle-color');\r\n        }\r\n\r\n        &:hover {\r\n            background: var-get($theme, 'current-step-hover-background') !important;\r\n\r\n            %igx-stepper__step-title {\r\n                color: var-get($theme, 'current-title-hover-color');\r\n            }\r\n\r\n            %igx-stepper__step-subtitle {\r\n                color: var-get($theme, 'current-subtitle-hover-color');\r\n            }\r\n        }\r\n    }\r\n\r\n    %igx-stepper__step--disabled {\r\n        color: var-get($theme, 'disabled-title-color');\r\n        pointer-events: none;\r\n        cursor: default;\r\n\r\n        %igx-stepper__step-indicator {\r\n            color: var-get($theme, 'disabled-indicator-color');\r\n            background: var-get($theme, 'disabled-indicator-background');\r\n            box-shadow: 0 0 0 $outline-width var-get($theme, 'disabled-indicator-outline');\r\n        }\r\n\r\n        %igx-stepper__step-title {\r\n            color: var-get($theme, 'disabled-title-color');\r\n        }\r\n\r\n        %igx-stepper__step-subtitle {\r\n            color: var-get($theme, 'disabled-subtitle-color');\r\n        }\r\n    }\r\n\r\n    %igx-stepper__step-header--invalid {\r\n        background: var-get($theme, 'invalid-step-background');\r\n        color: var-get($theme, 'invalid-title-color');\r\n\r\n        %igx-stepper__step-indicator {\r\n            color: var-get($theme, 'invalid-indicator-color');\r\n            background: var-get($theme, 'invalid-indicator-background');\r\n            box-shadow: 0 0 0 $outline-width var-get($theme, 'invalid-indicator-outline');\r\n        }\r\n\r\n        %igx-stepper__step-title {\r\n            color: var-get($theme, 'invalid-title-color');\r\n        }\r\n\r\n        %igx-stepper__step-subtitle {\r\n            color: var-get($theme, 'invalid-subtitle-color');\r\n        }\r\n\r\n        &:hover {\r\n            background: var-get($theme, 'invalid-step-hover-background');\r\n\r\n            %igx-stepper__step-title {\r\n                color: var-get($theme, 'invalid-title-hover-color');\r\n            }\r\n\r\n            %igx-stepper__step-subtitle {\r\n                color: var-get($theme, 'invalid-subtitle-hover-color');\r\n            }\r\n        }\r\n    }\r\n\r\n    %igx-stepper__body-content {\r\n        display: block;\r\n        position: absolute;\r\n        inset: 0;\r\n        width: 100%;\r\n        height: 100%;\r\n        overflow-y: auto;\r\n        overflow-x: hidden;\r\n        z-index: -1;\r\n    }\r\n\r\n    %igx-stepper__step-content-wrapper,\r\n    %igx-stepper__body-content {\r\n        padding: $step-body-padding;\r\n    }\r\n\r\n    %igx-stepper__body-content--active {\r\n        z-index: 1;\r\n        position: relative;\r\n    }\r\n\r\n    %igx-stepper__step-content-wrapper {\r\n        margin-inline-start: $v-line-indent;\r\n        position: relative;\r\n        min-height: rem(32px);\r\n\r\n        &::before {\r\n            content: '';\r\n            position: absolute;\r\n            inset-inline-start: calc(-#{$separator-size} / 2);\r\n            top: calc(-#{$step-header-padding} + #{$title-gap});\r\n            bottom: calc(-#{$step-header-padding} + #{$title-gap});\r\n            width: $separator-size;\r\n            border-inline-start: $separator-size unquote(var-get($theme, 'step-separator-style')) var-get($theme, 'step-separator-color');\r\n        }\r\n    }\r\n\r\n    %igx-stepper__step-title-wrapper {\r\n        white-space: nowrap;\r\n        text-overflow: ellipsis;\r\n        min-width: rem(32px);\r\n\r\n        &:empty {\r\n            display: none;\r\n        }\r\n\r\n        > * {\r\n            display: block;\r\n            text-overflow: ellipsis;\r\n            white-space: nowrap;\r\n            overflow: hidden;\r\n        }\r\n    }\r\n\r\n    %igx-stepper__step--start,\r\n    %igx-stepper__step--end {\r\n        %igx-stepper__step-header {\r\n            flex-direction: row;\r\n            align-items: center;\r\n            //gap: $title-gap--horizontal;\r\n        }\r\n    }\r\n\r\n    %igx-stepper__step--start,\r\n    %igx-stepper__step--top {\r\n        %igx-stepper__step-title-wrapper {\r\n            order: -1;\r\n        }\r\n    }\r\n\r\n    %igx-stepper__step--completed {\r\n\r\n        %igx-stepper__step-header {\r\n            background: var-get($theme, 'complete-step-background');\r\n\r\n            &:hover {\r\n                background: var-get($theme, 'complete-step-hover-background');\r\n                %igx-stepper__step-title {\r\n                    color: var-get($theme, 'complete-title-hover-color');\r\n                }\r\n\r\n                %igx-stepper__step-subtitle {\r\n                    color: var-get($theme, 'complete-subtitle-hover-color');\r\n                }\r\n            }\r\n\r\n            &::after {\r\n                border-top-color: var-get($theme, 'complete-step-separator-color') !important;\r\n                border-top-style: unquote(var-get($theme, 'complete-step-separator-style')) !important;\r\n            }\r\n        }\r\n\r\n        %igx-stepper__step-indicator {\r\n            color: var-get($theme, 'complete-indicator-color');\r\n            background: var-get($theme, 'complete-indicator-background');\r\n            box-shadow: 0 0 0 $outline-width var-get($theme, 'complete-indicator-outline');\r\n        }\r\n\r\n        %igx-stepper__step-title {\r\n            color: var-get($theme, 'complete-title-color');\r\n        }\r\n\r\n        %igx-stepper__step-subtitle {\r\n            color: var-get($theme, 'complete-subtitle-color');\r\n        }\r\n\r\n        &:focus {\r\n            %igx-stepper__step-header {\r\n                background: var-get($theme, 'complete-step-focus-background');\r\n\r\n                %igx-stepper__step-title {\r\n                    color: var-get($theme, 'complete-title-focus-color');\r\n                }\r\n\r\n                %igx-stepper__step-subtitle {\r\n                    color: var-get($theme, 'complete-subtitle-focus-color');\r\n                }\r\n            }\r\n        }\r\n\r\n        %igx-stepper__step-content-wrapper {\r\n            &::before {\r\n                border-inline-start-style: unquote(var-get($theme, 'complete-step-separator-style'));\r\n                border-inline-start-color: var-get($theme, 'complete-step-separator-color');\r\n            }\r\n        }\r\n    }\r\n\r\n    %igx-stepper__step--completed + %igx-stepper__step {\r\n        &::before {\r\n            border-top-color: var-get($theme, 'complete-step-separator-color') !important;\r\n            border-top-style: unquote(var-get($theme, 'complete-step-separator-style')) !important;\r\n        }\r\n\r\n        %igx-stepper__step-header {\r\n            &::before {\r\n                border-top-color: var-get($theme, 'complete-step-separator-color') !important;\r\n                border-top-style: unquote(var-get($theme, 'complete-step-separator-style')) !important;\r\n            }\r\n        }\r\n    }\r\n\r\n    %igx-stepper__step--simple {\r\n        %igx-stepper__step-indicator {\r\n            min-width: $indicator-size;\r\n            min-height: $indicator-size;\r\n            width: initial;\r\n            height: initial;\r\n\r\n            div > igx-icon,\r\n            div > igx-avatar,\r\n            div > igx-circular-bar {\r\n                max-width: initial;\r\n                max-height: initial;\r\n            }\r\n        }\r\n    }\r\n\r\n    // HORIZONTAL MODE START\r\n    %igx-stepper--horizontal {\r\n        %igx-stepper__header {\r\n            flex-direction: row;\r\n        }\r\n\r\n        %igx-stepper__step {\r\n            overflow: hidden;\r\n            flex-direction: row;\r\n            flex-grow: 1;\r\n\r\n            &::before {\r\n                content: '';\r\n                width: auto;\r\n                min-width: rem(10px);\r\n                height: $separator-size;\r\n                flex: 1;\r\n                position: relative;\r\n                z-index: -1;\r\n                top: $separator-title-bottom;\r\n                border-top: $separator-size unquote(var-get($theme, 'step-separator-style')) var-get($theme, 'step-separator-color');\r\n            }\r\n\r\n            &:first-of-type {\r\n                flex-grow: 0;\r\n                min-width: 0;\r\n\r\n                &::before {\r\n                    display: none;\r\n                }\r\n            }\r\n        }\r\n\r\n        %igx-stepper__step-header {\r\n            display: flex;\r\n            flex-direction: row;\r\n            align-items: center;\r\n            justify-content: center;\r\n\r\n            &::before,\r\n            &::after {\r\n                content: '';\r\n                position: absolute;\r\n                z-index: -1;\r\n                height: $separator-size;\r\n                width: calc(50% - (#{$indicator-size} - #{$indicator-gap}));\r\n                top: $separator-title-bottom;\r\n                flex: 1;\r\n                border-top: $separator-size unquote(var-get($theme, 'step-separator-style')) var-get($theme, 'step-separator-color');\r\n            }\r\n\r\n            &::before {\r\n                inset-inline-start: 0;\r\n            }\r\n\r\n            &::after {\r\n                inset-inline-end: 0;\r\n            }\r\n        }\r\n\r\n        %igx-stepper__step--simple {\r\n            text-align: center;\r\n\r\n            %igx-stepper__step-header {\r\n                align-self: center;\r\n                padding: $step-header-padding-simple;\r\n                height: auto;\r\n\r\n                &::before,\r\n                &::after {\r\n                    display: none;\r\n                }\r\n            }\r\n\r\n            &%igx-stepper__step {\r\n                &::before {\r\n                    top: calc(50% - (#{$separator-size} / 2));\r\n                }\r\n            }\r\n        }\r\n\r\n        %igx-stepper__step-title-wrapper {\r\n            width: 100%;\r\n        }\r\n\r\n        %igx-stepper__step--top {\r\n            %igx-stepper__step-header {\r\n                justify-content: flex-end;\r\n\r\n                &::before,\r\n                &::after {\r\n                    top: $separator-title-top;\r\n                }\r\n            }\r\n\r\n            &%igx-stepper__step {\r\n                &::before {\r\n                    border-top: $separator-size unquote(var-get($theme, 'step-separator-style')) var-get($theme, 'step-separator-color');\r\n                    top: $separator-title-top;\r\n                }\r\n            }\r\n        }\r\n\r\n        %igx-stepper__step--bottom {\r\n            %igx-stepper__step-header {\r\n                justify-content: flex-start;\r\n            }\r\n        }\r\n\r\n        %igx-stepper__step--top,\r\n        %igx-stepper__step--bottom {\r\n            %igx-stepper__step-title-wrapper {\r\n                text-align: center;\r\n            }\r\n\r\n            %igx-stepper__step-header {\r\n                flex-direction: column;\r\n            }\r\n        }\r\n\r\n        %igx-stepper__step--start {\r\n            %igx-stepper__step-title-wrapper {\r\n                text-align: end;\r\n            }\r\n        }\r\n\r\n        %igx-stepper__step--start,\r\n        %igx-stepper__step--end {\r\n            %igx-stepper__step-indicator {\r\n                flex: 1 0 auto;\r\n            }\r\n\r\n            %igx-stepper__step-header {\r\n                @if $variant != 'fluent' {\r\n                    padding: calc(#{$step-header-padding} / 2);\r\n                }\r\n\r\n                &::before,\r\n                &::after {\r\n                    display: none;\r\n                }\r\n            }\r\n\r\n            &%igx-stepper__step {\r\n                &::before {\r\n                    top: calc(50% - (#{$separator-size} / 2));\r\n                }\r\n            }\r\n        }\r\n\r\n        %igx-stepper__step-content {\r\n            flex-grow: 1;\r\n\r\n            &:focus {\r\n                outline: none;\r\n            }\r\n\r\n            &::before {\r\n                display: none;\r\n            }\r\n        }\r\n\r\n        %igx-stepper__step-content-wrapper {\r\n            text-align: center;\r\n        }\r\n\r\n        %igx-stepper__body-content {\r\n            display: flex;\r\n        }\r\n    }\r\n    // HORIZONTAL MODE END\r\n}\r\n\r\n/// Adds typography styles for the igx-stepper component.\r\n/// Uses the 'body-2' category from the typographic scale.\r\n/// @group typography\r\n/// @param {Map} $categories [(title: 'body-2')] - The categories from the typographic scale used for type styles.\r\n@mixin stepper-typography(\r\n    $categories: (\r\n        title: 'body-2',\r\n        subtitle: 'caption'\r\n    )\r\n) {\r\n    $title: map.get($categories, 'title');\r\n    $subtitle: map.get($categories, 'subtitle');\r\n\r\n    %igx-stepper__step-title {\r\n        @include type-style($title) {\r\n            margin-top: 0;\r\n            margin-bottom: 0;\r\n        }\r\n    }\r\n\r\n    %igx-stepper__step-subtitle {\r\n        @include type-style($subtitle) {\r\n            margin-top: 0;\r\n            margin-bottom: 0;\r\n        }\r\n    }\r\n\r\n    %igx-stepper__step-header--current {\r\n        %igx-stepper__step-title {\r\n            font-weight: 600;\r\n        }\r\n    }\r\n}\r\n","@use 'sass:map';\r\n@use '../../base' as *;\r\n@use '../../themes/schemas' as *;\r\n\r\n////\r\n/// @group themes\r\n/// @access public\r\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\r\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\r\n////\r\n\r\n/// If only background color is specified,\r\n/// the text-color will be assigned automatically to a contrasting color.\r\n///\r\n/// @param {Map} $schema [$light-material-schema] - The schema used as basis for styling the component.\r\n///\r\n/// @param {Color} $background [null] - The background color used for the toast.\r\n/// @param {Color} $text-color [null] - The text-color used for the toast.\r\n///\r\n/// @param {List} $border-radius [null] - The border radius used for the toast component.\r\n/// @param {box-shadow} $shadow [null] - Sets a shadow to be used for the toast.\r\n///\r\n/// @requires $light-material-schema\r\n///\r\n/// @example scss Set a custom background color\r\n///   $my-toast-theme: toast-theme($background: green);\r\n///   // Pass the theme to the css-vars() mixin\r\n///   @include css-vars($my-toast-theme);\r\n@function toast-theme(\r\n    $schema: $light-material-schema,\r\n\r\n    $border-radius: null,\r\n    $background: null,\r\n    $text-color: null,\r\n    $shadow: null,\r\n) {\r\n    $name: 'igx-toast';\r\n    $toast-schema: ();\r\n\r\n    @if map.has-key($schema, 'toast') {\r\n        $toast-schema: map.get($schema, 'toast');\r\n    } @else {\r\n        $toast-schema: $schema;\r\n    }\r\n\r\n    $theme: digest-schema($toast-schema);\r\n    $meta: map.get($theme, '_meta');\r\n\r\n    @if not($shadow) {\r\n        $elevation: map.get($toast-schema, 'elevation');\r\n        $shadow: elevation($elevation);\r\n    }\r\n\r\n    @if not($text-color) and $background {\r\n        $text-color: text-contrast($background);\r\n    }\r\n\r\n    @if not($border-radius) {\r\n        $border-radius: border-radius(map.get($theme, 'border-radius')...);\r\n    }\r\n\r\n    @return extend($theme, (\r\n        name: $name,\r\n        background: $background,\r\n        border-radius: $border-radius,\r\n        text-color: $text-color,\r\n        shadow: $shadow,\r\n        _meta: map.merge(if($meta, $meta, ()), (\r\n            variant: map.get($schema, '_meta', 'theme')\r\n        )),\r\n    ));\r\n}\r\n\r\n/// Toast Component\r\n/// @param {Map} $theme - The theme used to style the component.\r\n@mixin toast($theme) {\r\n    @include css-vars($theme);\r\n    $variant: map.get($theme, '_meta', 'variant');\r\n\r\n    $width: rem(52px);\r\n    $margin: rem(42px) auto;\r\n\r\n    $padding: map.get((\r\n        'material': rem(16px) rem(24px),\r\n        'fluent': rem(16px) rem(24px),\r\n        'bootstrap': rem(12px),\r\n        'indigo-design': rem(14px) rem(24px)\r\n    ), $variant);\r\n\r\n    $border: map.get((\r\n        'material': none,\r\n        'fluent': none,\r\n        'bootstrap': rem(1px) solid color(null, 'gray', 300),\r\n        'indigo-design': none\r\n    ), $variant);\r\n\r\n    %igx-toast-display {\r\n        display: inline-flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        margin: $margin;\r\n        padding: $padding;\r\n        min-width: $width;\r\n        color: var-get($theme, 'text-color');\r\n        background: var-get($theme, 'background');\r\n        border: $border;\r\n        border-radius: var-get($theme, 'border-radius');\r\n        box-shadow: map.get($theme, 'shadow');\r\n        backdrop-filter: blur(10px);\r\n    }\r\n}\r\n\r\n/// Adds typography styles for the igx-toast component.\r\n/// Uses the 'body-2'\r\n/// category from the typographic scale.\r\n/// @group typography\r\n/// @param {Map} $categories [(text: 'body-2')] - The categories from the typographic scale used for type styles.\r\n@mixin toast-typography($categories: (text: 'body-2')) {\r\n    $text: map.get($categories, 'text');\r\n\r\n    %igx-toast-display,\r\n    %igx-toast-display > * {\r\n        @include type-style($text) {\r\n            margin: 0;\r\n        }\r\n    }\r\n}\r\n","@use 'sass:map';\r\n@use '../../base' as *;\r\n@use '../../themes/schemas' as *;\r\n\r\n////\r\n/// @group themes\r\n/// @access public\r\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\r\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\r\n////\r\n\r\n/// Returns a map containing all style properties related to the theming the tooltip directive.\r\n/// @param {Map} $schema [$light-material-schema] - The schema used as basis for styling the component.\r\n///\r\n/// @param {Color} $background [null] - The background color of the tooltip.\r\n/// @param {Color} $text-color [null] - The text color of the tooltip.\r\n///\r\n/// @param {List} $border-radius [null] - The border radius used for the tooltip component.\r\n///\r\n/// @requires $light-material-schema\r\n///\r\n/// @example scss Change the tooltip background\r\n///   $my-tooltip-theme: tooltip-theme($background: magenta);\r\n///   // Pass the theme to the css-vars() mixin\r\n///   @include css-vars($my-checkbox-theme);\r\n@function tooltip-theme(\r\n    $schema: $light-material-schema,\r\n\r\n    $border-radius: null,\r\n    $background: null,\r\n    $text-color: null\r\n) {\r\n    $name: 'igx-tooltip';\r\n    $selector: '.igx-tooltip--desktop, .igx-tooptip--mobile';\r\n    $tooltip-schema: ();\r\n\r\n    @if map.has-key($schema, 'tooltip') {\r\n        $tooltip-schema: map.get($schema, 'tooltip');\r\n    } @else {\r\n        $tooltip-schema: $schema;\r\n    }\r\n\r\n    $theme: digest-schema($tooltip-schema);\r\n\r\n    @if not($text-color) and $background {\r\n        $text-color: text-contrast($background);\r\n    }\r\n\r\n    @if not($border-radius) {\r\n        $border-radius: border-radius(map.get($theme, 'border-radius')...);\r\n    }\r\n\r\n    @return extend($theme, (\r\n        name: $name,\r\n        selector: $selector,\r\n        background: $background,\r\n        border-radius: $border-radius,\r\n        text-color: $text-color,\r\n    ));\r\n}\r\n\r\n/// @param {Map} $theme - The theme used to style the component.\r\n@mixin tooltip($theme) {\r\n    @include css-vars($theme);\r\n\r\n    %tooltip-display {\r\n        display: inline-flex;\r\n        justify-content: center;\r\n        flex-flow: column wrap;\r\n        background: var-get($theme, 'background');\r\n        color: var-get($theme, 'text-color');\r\n        border-radius: var-get($theme, 'border-radius');\r\n        margin: 0 auto;\r\n    }\r\n\r\n    %tooltip--desktop {\r\n        padding: 0 rem(8px);\r\n        min-height: rem(24px);\r\n    }\r\n\r\n    %tooltip--mobile {\r\n        padding: 0 rem(16px);\r\n        min-height: rem(32px);\r\n    }\r\n\r\n    %tooltip--hidden {\r\n        display: none;\r\n    }\r\n}\r\n\r\n/// Adds typography styles for the igx-tooltip component.\r\n/// Uses the 'body-2' category from the typographic scale for mobile tooltips and custom typography for desktop tooltips.\r\n/// @group typography\r\n/// @param {Map} $categories [(text-desktop: null, text-mobile: 'body-2')] - The categories from the typographic scale used for type styles.\r\n@mixin tooltip-typography(\r\n    $categories: (text-desktop: null, text-mobile: 'body-2')\r\n) {\r\n    $text-desktop: map.get($categories, 'text-desktop');\r\n    $text-mobile: map.get($categories, 'text-mobile');\r\n\r\n    %tooltip--mobile {\r\n        @include type-style($text-mobile);\r\n    }\r\n\r\n    @if $text-desktop != null {\r\n        %tooltip--desktop {\r\n            @include type-style($text-desktop);\r\n        }\r\n    } @else {\r\n        %tooltip--desktop {\r\n            font-size: rem(10px);\r\n            font-weight: 600;\r\n        }\r\n    }\r\n}\r\n","@use 'sass:map';\r\n@use 'sass:meta';\r\n@use '../../base' as *;\r\n@use '../../themes/schemas' as *;\r\n\r\n////\r\n/// @group themes\r\n/// @access public\r\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\r\n////\r\n\r\n/// Returns a map containing all style properties related to the theming of the tree component.\r\n/// @param {Map} $schema [$light-material-schema] - The schema used as basis for styling the component.\r\n/// @param {Color} background [null] - The background color used for the tree node.\r\n/// @param {Color} foreground [null] - The color used for the tree node content.\r\n/// @param {Color} background-selected [null] - The background color used for the selected tree node.\r\n/// @param {Color} foreground-selected [null] - The color used for the content of the selected tree node.\r\n/// @param {Color} background-active [null] - The background color used for the active tree node.\r\n/// @param {Color} foreground-active [null] - The color used for the content of the active tree node.\r\n/// @param {Color} background-active-selected [null] - The background color used for the active selected tree node.\r\n/// @param {Color} foreground-active-selected [null] - The color used for the content of the active selected tree node.\r\n/// @param {Color} background-disabled [null] - The background color used for the tree node in disabled state.\r\n/// @param {Color} foreground-disabled [null] - The color used for the content of the disabled tree node.\r\n/// @param {Color} drop-area-color [null] - The background color used for the tree node drop aria.\r\n/// @param {Color} border-color [null] - The outline shadow color used for tree node in focus state.\r\n/// @requires $light-material-schema\r\n///\r\n/// @example scss Change the tree background\r\n///   $my-tree-theme: tree-theme($background: magenta);\r\n///   // Pass the theme to the css-vars() mixin\r\n///   @include css-vars($my-tree-theme);\r\n@function tree-theme(\r\n    $schema: $light-material-schema,\r\n    $background: null,\r\n    $background-selected: null,\r\n    $background-active: null,\r\n    $background-active-selected: null,\r\n    $background-disabled: null,\r\n    $foreground: null,\r\n    $foreground-selected: null,\r\n    $foreground-active: null,\r\n    $foreground-active-selected: null,\r\n    $foreground-disabled: null,\r\n    $drop-area-color: null,\r\n    $border-color: null,\r\n) {\r\n    $name: 'igx-tree';\r\n    $tree-schema: ();\r\n\r\n    @if map.has-key($schema, 'tree') {\r\n        $tree-schema: map.get($schema, 'tree');\r\n    } @else {\r\n        $tree-schema: $schema;\r\n    }\r\n\r\n    $theme: digest-schema($tree-schema);\r\n    $meta: map.get($theme, '_meta');\r\n\r\n    @if not($foreground) and $background {\r\n        $foreground: text-contrast($background);\r\n    }\r\n\r\n    @if not($foreground-selected) and $background-selected {\r\n        $foreground-selected: text-contrast($background-selected);\r\n    }\r\n\r\n    @if not($foreground-active) and $background-active {\r\n        $foreground-active: text-contrast($background-active);\r\n    }\r\n\r\n    @if not($foreground-active-selected) and $background-active-selected {\r\n        $foreground-active-selected: text-contrast($background-active-selected);\r\n    }\r\n\r\n    @return extend($theme, (\r\n        name: $name,\r\n        background: $background,\r\n        foreground: $foreground,\r\n        background-selected: $background-selected,\r\n        foreground-selected: $foreground-selected,\r\n        background-active: $background-active,\r\n        foreground-active: $foreground-active,\r\n        background-active-selected: $background-active-selected,\r\n        foreground-active-selected: $foreground-active-selected,\r\n        background-disabled: $background-disabled,\r\n        foreground-disabled: $foreground-disabled,\r\n        drop-area-color: $drop-area-color,\r\n        border-color: $border-color,\r\n        _meta: map.merge(if($meta, $meta, ()), (\r\n            variant: map.get($schema, '_meta', 'theme')\r\n        )),\r\n    ));\r\n}\r\n\r\n/// @param {Map} $theme - The theme used to style the component.\r\n@mixin tree($theme) {\r\n    @include css-vars($theme);\r\n\r\n    $variant: map.get($theme, '_meta', 'variant');\r\n    $indigo-theme: $variant == 'indigo-design';\r\n\r\n    $node-indent: (\r\n        comfortable: rem(24px),\r\n        cosy: rem(16px),\r\n        compact: rem(12px)\r\n    );\r\n\r\n    $node-height: (\r\n        comfortable: rem(50px),\r\n        cosy: rem(40px),\r\n        compact: rem(32px)\r\n    );\r\n\r\n    $icon-size: rem(24px);\r\n    $icon-space: rem(8px);\r\n\r\n    $drop-indicator-width: (\r\n        comfortable: calc(100% - ((#{map.get($node-indent, 'comfortable')} * 2) + (#{$icon-size} + #{$icon-space}))),\r\n        cosy: calc(100% - ((#{map.get($node-indent, 'cosy')} * 2) + (#{$icon-size} + #{$icon-space}))),\r\n        compact: calc(100% - ((#{map.get($node-indent, 'compact')} * 2) + (#{$icon-size} + #{$icon-space})))\r\n    );\r\n\r\n    %tree-display {\r\n        display: block;\r\n        z-index: 0;\r\n        overflow-y: auto;\r\n    }\r\n\r\n    %tree-node,\r\n    %node-wrapper,\r\n    %node-toggle-button,\r\n    %node-content,\r\n    %node-select {\r\n        display: flex;\r\n    }\r\n\r\n    %tree-node {\r\n        flex-direction: column;\r\n    }\r\n\r\n    %node-wrapper,\r\n    %node-toggle-button,\r\n    %node-select {\r\n        align-items: center;\r\n    }\r\n\r\n    %node-toggle-button,\r\n    %node-select {\r\n        margin-inline-end: $icon-space;\r\n    }\r\n\r\n    %node-content,\r\n    %node-toggle-button,\r\n    %node-select {\r\n        z-index: 1;\r\n    }\r\n\r\n    %node-toggle-button--hidden {\r\n        visibility: hidden;\r\n    }\r\n\r\n    %node-wrapper {\r\n        --component-size: var(--ig-size, var(--ig-size-large));\r\n        --size: #{sizable(#{map.get($node-height, 'compact')}, #{map.get($node-height, 'cosy')}, #{map.get($node-height, 'comfortable')})};\r\n        min-height: var(--size);\r\n        padding-inline: pad-inline(map.get($node-indent, 'compact'), map.get($node-indent, 'cosy'), map.get($node-indent, 'comfortable'));\r\n        padding-block: 0;\r\n        position: relative;\r\n        background: var-get($theme, 'background');\r\n        color: var-get($theme, 'foreground');\r\n\r\n        // We need this here, since we count on it to calculate the width of the tree drop indicator\r\n        igx-icon {\r\n            width: var(--igx-icon-size, #{$icon-size});\r\n            height: var(--igx-icon-size, #{$icon-size});\r\n            font-size: var(--igx-icon-size, #{$icon-size});\r\n        }\r\n\r\n        [dir='rtl'] & {\r\n            igx-icon {\r\n                transform: scaleX(-1);\r\n            }\r\n        }\r\n\r\n        &::after {\r\n            content: '';\r\n            position: absolute;\r\n            top: 0;\r\n            inset-inline-start: 0;\r\n            width: 100%;\r\n            height: 100%;\r\n            background: transparent;\r\n            z-index: 0;\r\n        }\r\n\r\n        &:hover {\r\n            &::after {\r\n                background: var-get($theme, 'hover-color');\r\n            }\r\n        }\r\n\r\n        &:focus {\r\n            outline-width: 0;\r\n        }\r\n\r\n        igx-circular-bar {\r\n            width: $icon-size;\r\n            height: $icon-size;\r\n        }\r\n\r\n        &--cosy {\r\n            --component-size: var(--ig-size, var(--ig-size-medium));\r\n\r\n            %node-spacer {\r\n                --component-size: var(--ig-size, var(--ig-size-medium));\r\n            }\r\n\r\n            %node-drop-indicator {\r\n                inset-inline-end: map.get($node-indent, 'cosy');\r\n                width: map.get($drop-indicator-width, 'cosy');\r\n            }\r\n\r\n            igx-circular-bar {\r\n                width: calc(#{$icon-size} - 4px);\r\n                height: calc(#{$icon-size} - 4px);\r\n            }\r\n        }\r\n\r\n        &--compact {\r\n            --component-size: var(--ig-size, var(--ig-size-small));\r\n\r\n            %node-spacer {\r\n                --component-size: var(--ig-size, var(--ig-size-small));\r\n            }\r\n\r\n            %node-drop-indicator {\r\n                inset-inline-end: map.get($node-indent, 'compact');\r\n                width: map.get($drop-indicator-width, 'compact');\r\n            }\r\n\r\n            igx-circular-bar {\r\n                width: calc(#{$icon-size} - 6px);\r\n                height: calc(#{$icon-size} - 6px);\r\n            }\r\n        }\r\n    }\r\n\r\n    %node-wrapper--selected {\r\n        background: var-get($theme, 'background-selected');\r\n        color: var-get($theme, 'foreground-selected');\r\n    }\r\n\r\n    %node-wrapper--active {\r\n        background: var-get($theme, 'background-active');\r\n        color: var-get($theme, 'foreground-active');\r\n    }\r\n\r\n    %indigo-opacity {\r\n        $bg-active: map.get($theme, 'background-active');\r\n\r\n        @if ($indigo-theme) {\r\n            @if meta.type-of($bg-active) == 'color' and lightness($bg-active) < 50 {\r\n                opacity: .8;\r\n            } @else {\r\n                opacity: .3;\r\n            }\r\n        }\r\n    }\r\n\r\n    %node-wrapper--active-selected {\r\n        background: var-get($theme, 'background-active-selected');\r\n        color: var-get($theme, 'foreground-active-selected');\r\n    }\r\n\r\n    %node-wrapper--focused {\r\n        box-shadow: inset 0 0 0 rem(1px) var-get($theme, 'border-color');\r\n    }\r\n\r\n    %node-wrapper--disabled {\r\n        background: var-get($theme, 'background-disabled') !important;\r\n        color: var-get($theme, 'foreground-disabled') !important;\r\n\r\n        box-shadow: none !important;\r\n\r\n        pointer-events: none;\r\n\r\n        &::after {\r\n            display: none;\r\n        }\r\n\r\n        %node-toggle-button {\r\n            color: var-get($theme, 'foreground-disabled') !important;\r\n        }\r\n    }\r\n\r\n    %node-spacer {\r\n        --component-size: var(--ig-size, var(--ig-size-large));\r\n        --size: #{sizable(#{map.get($node-indent, 'compact')}, #{map.get($node-indent, 'cosy')}, #{map.get($node-indent, 'comfortable')})};\r\n        width: var(--size);\r\n        display: inline-block;\r\n    }\r\n\r\n    %node-content {\r\n        display: block;\r\n        align-items: center;\r\n        flex: 1;\r\n        @include ellipsis();\r\n    }\r\n\r\n    %node-toggle-button {\r\n        justify-content: center;\r\n        cursor: pointer;\r\n        user-select: none;\r\n        min-width: $icon-size\r\n    }\r\n\r\n    %node-drop-indicator {\r\n        display: flex;\r\n        visibility: hidden;\r\n        position: absolute;\r\n        inset-inline-end: map.get($node-indent, 'comfortable');\r\n        bottom: 0;\r\n        width: map.get($drop-indicator-width, 'comfortable');\r\n\r\n        > div {\r\n            flex: 1;\r\n            height: rem(1px);\r\n            background: var-get($theme, 'drop-area-color');\r\n        }\r\n    }\r\n\r\n    %node-group {\r\n        overflow: hidden;\r\n    }\r\n}\r\n\r\n/// Adds typography styles for the igx-tree component.\r\n/// Uses the 'subtitle-1' category from the typographic scale.\r\n/// @group typography\r\n/// @param {Map} $categories [(label: 'subtitle-1')] - The categories from the typographic scale used for type styles.\r\n@mixin tree-typography(\r\n    $categories: (label: 'body-2')\r\n) {\r\n    $text: map.get($categories, 'label');\r\n\r\n    %node-content {\r\n        @include type-style($text)\r\n    }\r\n}\r\n","@use 'sass:list';\r\n@use 'sass:meta';\r\n@use 'sass:string';\r\n@use '../schemas' as *;\r\n@use '../../base' as *;\r\n@use '../../components' as *;\r\n@use 'igniteui-theming/sass/color' as *;\r\n@use 'igniteui-theming/sass/elevations' as *;\r\n@use 'igniteui-theming/sass/elevations/presets' as elevations;\r\n@use 'igniteui-theming/sass/utils' as *;\r\n@use 'igniteui-theming/sass/themes' as *;\r\n@use 'igniteui-theming/sass/themes/charts' as *;\r\n\r\n////\r\n/// @group themes\r\n/// @access public\r\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\r\n////\r\n\r\n/// Default noop handler for theme map transforms\r\n/// @access private\r\n@function theme-noop($arg) { @return $arg; }\r\n\r\n/// Generates an Ignite UI for Angular global theme.\r\n/// @param {Map} $palette - An palette to be used by the global theme.\r\n/// @param {Map} $schema [$light-material-schema] - The schema used as basis for styling the components.\r\n/// @param {List} $exclude [( )] - A list of igx components to be excluded from the global theme styles.\r\n/// @param {Number} $roundness [null] - Sets the global roundness factor (the value can be any decimal fraction between 0 and 1) for all components.\r\n/// @param {Boolean} $elevation [true] - Turns on/off elevations for all components in the theme.\r\n/// @param {Map} $elevations [$elevations] - The elevation map to be used by all component themes.\r\n/// @requires $light-material-schema\r\n/// @requires {function} is-component\r\n/// @requires {function} is-used\r\n@mixin theme(\r\n    $palette,\r\n    $schema: $light-material-schema,\r\n    $exclude: (),\r\n    $roundness: null,\r\n    $elevation: true,\r\n    $elevations: elevations.$material-elevations,\r\n) {\r\n    @include theme-internal(\r\n        $palette: $palette,\r\n        $schema: $schema,\r\n        $exclude: $exclude,\r\n        $roundness: $roundness,\r\n        $elevation: $elevation,\r\n        $elevations: $elevations\r\n    )\r\n}\r\n\r\n/// Generates an Ignite UI for Angular global theme.\r\n/// @access private\r\n/// @param {Map} $palette - An palette to be used by the global theme.\r\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the components.\r\n/// @param {List} $exclude [( )] - A list of igx components to be excluded from the global theme styles.\r\n/// @param {Number} $roundness [null] - Sets the global roundness factor (the value can be any decimal fraction between 0 and 1) for all components.\r\n/// @param {Boolean} $elevation [true] - Turns on/off elevations for all components in the theme.\r\n/// @param {Map} $elevations [$elevations] - The elevation map to be used by all component themes.\r\n/// @requires $light-material-schema\r\n/// @requires {function} is-component\r\n/// @requires {function} is-used\r\n@mixin theme-internal(\r\n    $palette,\r\n    $schema: $light-material-schema,\r\n    $exclude: (),\r\n    $roundness: null,\r\n    $elevation: true,\r\n    $elevations: elevations.$material-elevations,\r\n    $theme-handler: meta.get-function('theme-noop'),\r\n) {\r\n    // Stores all excluded component styles\r\n    $excluded: ();\r\n    $scope: if(is-root(), ':root', '&');\r\n\r\n    #{$scope} {\r\n        --ig-size-small: 1;\r\n        --ig-size-medium: 2;\r\n        --ig-size-large: 3;\r\n\r\n        --ig-spacing-small: 1;\r\n        --ig-spacing-medium: 1;\r\n        --ig-spacing-large: 1;\r\n\r\n        --ig-spacing-inline-small: 1;\r\n        --ig-spacing-inline-medium: 1;\r\n        --ig-spacing-inline-large: 1;\r\n\r\n        --ig-spacing-block-small: 1;\r\n        --ig-spacing-block-medium: 1;\r\n        --ig-spacing-block-large: 1;\r\n    }\r\n\r\n    @if not(list.index($exclude, 'palette')) {\r\n        @include palette($palette);\r\n    }\r\n\r\n    @if not(list.index($exclude, 'elevations')) {\r\n        @include elevations($elevations);\r\n    }\r\n\r\n    @if $elevation == false {\r\n        #{$scope} {\r\n            --ig-elevation-factor: 0;\r\n        }\r\n    }\r\n\r\n    @if $roundness {\r\n        #{$scope} {\r\n            --ig-radius-factor: #{$roundness};\r\n        }\r\n    }\r\n\r\n    @if list.length($exclude) > 0 {\r\n        $excluded: is-component($exclude);\r\n    }\r\n\r\n    @if is-used('igx-ripple', $exclude) {\r\n        $ripple-theme-map: ripple-theme(\r\n            $schema: $schema,\r\n        );\r\n        $ripple-theme-map: meta.call($theme-handler, $ripple-theme-map);\r\n        @include ripple($ripple-theme-map);\r\n    }\r\n\r\n    @if is-used('igx-avatar', $exclude) {\r\n        $avatar-theme-map: avatar-theme(\r\n            $schema: $schema,\r\n        );\r\n        $avatar-theme-map: meta.call($theme-handler, $avatar-theme-map);\r\n        @include avatar($avatar-theme-map);\r\n    }\r\n\r\n    @if is-used('igx-action-strip', $exclude) {\r\n        $action-strip-theme-map: action-strip-theme(\r\n            $schema: $schema,\r\n        );\r\n        $action-strip-theme-map: meta.call($theme-handler, $action-strip-theme-map);\r\n        @include action-strip($action-strip-theme-map);\r\n    }\r\n\r\n    @if is-used('igx-badge', $exclude) {\r\n        $badge-theme-map: badge-theme(\r\n            $schema: $schema,\r\n        );\r\n        $badge-theme-map: meta.call($theme-handler, $badge-theme-map);\r\n        @include badge($badge-theme-map);\r\n    }\r\n\r\n    @if is-used('igx-bottom-nav', $exclude) {\r\n        $bottom-nav-theme-map: bottom-nav-theme(\r\n            $schema: $schema,\r\n        );\r\n        $bottom-nav-theme-map: meta.call($theme-handler, $bottom-nav-theme-map);\r\n        @include bottom-nav($bottom-nav-theme-map);\r\n    }\r\n\r\n    @if is-used('igx-button', $exclude) {\r\n        $button-theme-map: button-theme(\r\n            $schema: $schema,\r\n        );\r\n        $button-theme-map: meta.call($theme-handler, $button-theme-map);\r\n        @include button($button-theme-map);\r\n    }\r\n\r\n    @if is-used('igx-button-group', $exclude) {\r\n        $button-group-theme-map: button-group-theme(\r\n            $schema: $schema,\r\n        );\r\n        $button-group-theme-map: meta.call($theme-handler, $button-group-theme-map);\r\n        @include button-group($button-group-theme-map);\r\n    }\r\n\r\n    @if is-used('igx-banner', $exclude) {\r\n        $banner-theme-map: banner-theme(\r\n            $schema: $schema,\r\n        );\r\n        $banner-theme-map: meta.call($theme-handler, $banner-theme-map);\r\n        @include banner($banner-theme-map);\r\n    }\r\n\r\n    @if is-used('igx-calendar', $exclude) {\r\n        $calendar-theme-map: calendar-theme(\r\n            $schema: $schema,\r\n        );\r\n        $calendar-theme-map: meta.call($theme-handler, $calendar-theme-map);\r\n        @include calendar($calendar-theme-map);\r\n    }\r\n\r\n    @if is-used('igx-card', $exclude) {\r\n        $card-theme-map: card-theme(\r\n            $schema: $schema,\r\n        );\r\n        $card-theme-map: meta.call($theme-handler, $card-theme-map);\r\n        @include card($card-theme-map);\r\n    }\r\n\r\n    @if is-used('igx-carousel', $exclude) {\r\n        $carousel-theme-map: carousel-theme(\r\n            $schema: $schema,\r\n        );\r\n        $carousel-theme-map: meta.call($theme-handler, $carousel-theme-map);\r\n        @include carousel($carousel-theme-map);\r\n    }\r\n\r\n    @if is-used('igx-splitter', $exclude) {\r\n        $splitter-theme-map: splitter-theme(\r\n            $schema: $schema,\r\n        );\r\n        $splitter-theme-map: meta.call($theme-handler, $splitter-theme-map);\r\n        @include splitter($splitter-theme-map);\r\n    }\r\n\r\n    @if is-used('data-chart', $exclude) {\r\n        $data-chart-theme-map: data-chart-theme(\r\n            $schema: $schema,\r\n        );\r\n        $data-chart-theme-map: meta.call($theme-handler, $data-chart-theme-map);\r\n        @include  css-vars($data-chart-theme-map);\r\n    }\r\n\r\n    @if is-used('doughnut-chart', $exclude) {\r\n        $doughnut-chart-theme-map: doughnut-chart-theme(\r\n            $schema: $schema,\r\n        );\r\n        $doughnut-chart-theme-map: meta.call($theme-handler, $doughnut-chart-theme-map);\r\n        @include  css-vars($doughnut-chart-theme-map);\r\n    }\r\n\r\n    @if is-used('linear-gauge', $exclude) {\r\n        $linear-gauge-theme-map: linear-gauge-theme(\r\n            $schema: $schema,\r\n        );\r\n        $linear-gauge-theme-map: meta.call($theme-handler, $linear-gauge-theme-map);\r\n        @include  css-vars($linear-gauge-theme-map);\r\n    }\r\n\r\n    @if is-used('radial-gauge', $exclude) {\r\n        $radial-gauge-theme-map: radial-gauge-theme(\r\n            $schema: $schema,\r\n        );\r\n        $radial-gauge-theme-map: meta.call($theme-handler, $radial-gauge-theme-map);\r\n        @include  css-vars($radial-gauge-theme-map);\r\n    }\r\n\r\n    @if is-used('financial-chart', $exclude) {\r\n        $financial-chart-theme-map: financial-chart-theme(\r\n            $schema: $schema,\r\n        );\r\n        $financial-chart-theme-map: meta.call($theme-handler, $financial-chart-theme-map);\r\n        @include  css-vars($financial-chart-theme-map);\r\n    }\r\n\r\n    @if is-used('bullet-graph', $exclude) {\r\n        $bullet-graph-theme-map: bullet-graph-theme(\r\n            $schema: $schema,\r\n        );\r\n        $bullet-graph-theme-map: meta.call($theme-handler, $bullet-graph-theme-map);\r\n        @include  css-vars($bullet-graph-theme-map);\r\n    }\r\n\r\n    @if is-used('category-chart', $exclude) {\r\n        $category-chart-theme-map: category-chart-theme(\r\n            $schema: $schema,\r\n        );\r\n        $category-chart-theme-map: meta.call($theme-handler, $category-chart-theme-map);\r\n        @include  css-vars($category-chart-theme-map);\r\n    }\r\n\r\n    @if is-used('geo-map', $exclude) {\r\n        $geo-map-theme-map: geo-map-theme(\r\n            $schema: $schema,\r\n        );\r\n        $geo-map-theme-map: meta.call($theme-handler, $geo-map-theme-map);\r\n        @include  css-vars($geo-map-theme-map);\r\n    }\r\n\r\n    @if is-used('pie-chart', $exclude) {\r\n        $pie-chart-theme-map: pie-chart-theme(\r\n            $schema: $schema,\r\n        );\r\n        $pie-chart-theme-map: meta.call($theme-handler, $pie-chart-theme-map);\r\n        @include  css-vars($pie-chart-theme-map);\r\n    }\r\n\r\n    @if is-used('sparkline', $exclude) {\r\n        $sparkline-theme-map: sparkline-theme(\r\n            $schema: $schema,\r\n        );\r\n        $sparkline-theme-map: meta.call($theme-handler, $sparkline-theme-map);\r\n        @include  css-vars($sparkline-theme-map);\r\n    }\r\n\r\n    @if is-used('funnel-chart', $exclude) {\r\n        $funnel-chart-theme-map: funnel-chart-theme(\r\n            $schema: $schema,\r\n        );\r\n        $funnel-chart-theme-map: meta.call($theme-handler, $funnel-chart-theme-map);\r\n        @include  css-vars($funnel-chart-theme-map);\r\n    }\r\n\r\n    @if is-used('shape-chart', $exclude) {\r\n        $shape-chart-theme-map: shape-chart-theme(\r\n            $schema: $schema,\r\n        );\r\n        $shape-chart-theme-map: meta.call($theme-handler, $shape-chart-theme-map);\r\n        @include  css-vars($shape-chart-theme-map);\r\n    }\r\n\r\n    @if is-used('igx-checkbox', $exclude) {\r\n        $checkbox-theme-map: checkbox-theme(\r\n            $schema: $schema,\r\n        );\r\n        $checkbox-theme-map: meta.call($theme-handler, $checkbox-theme-map);\r\n        @include checkbox($checkbox-theme-map);\r\n    }\r\n\r\n    @if is-used('igx-chip', $exclude) {\r\n        $chip-theme-map: chip-theme(\r\n            $schema: $schema,\r\n        );\r\n        $chip-theme-map: meta.call($theme-handler, $chip-theme-map);\r\n        @include chip($chip-theme-map);\r\n    }\r\n\r\n    @if is-used('igx-column-actions', $exclude) {\r\n        $column-actions-theme-map: column-actions-theme(\r\n            $schema: $schema,\r\n        );\r\n        $column-actions-theme-map: meta.call($theme-handler, $column-actions-theme-map);\r\n        @include column-actions($column-actions-theme-map);\r\n    }\r\n\r\n    @if is-used('igx-combo', $exclude) {\r\n        $combo-theme-map: combo-theme(\r\n            $schema: $schema,\r\n        );\r\n        $combo-theme-map: meta.call($theme-handler, $combo-theme-map);\r\n        @include combo($combo-theme-map);\r\n    }\r\n\r\n    @if is-used('igx-select', $exclude) {\r\n        $select-theme-map: select-theme(\r\n            $schema: $schema,\r\n        );\r\n        $select-theme-map: meta.call($theme-handler, $select-theme-map);\r\n        @include select($select-theme-map);\r\n    }\r\n\r\n    @if is-used('igx-date-picker', $exclude) {\r\n        $calendar-theme-map: calendar-theme(\r\n            $schema: $schema,\r\n        );\r\n        $calendar-theme-map: meta.call($theme-handler, $calendar-theme-map);\r\n        @include date-picker($calendar-theme-map);\r\n    }\r\n\r\n    @if is-used('igx-date-range-picker', $exclude) {\r\n        $date-range-picker-theme-map: date-range-picker-theme(\r\n            $schema: $schema,\r\n        );\r\n        $date-range-picker-theme-map: meta.call($theme-handler, $date-range-picker-theme-map);\r\n        @include date-range-picker($date-range-picker-theme-map);\r\n    }\r\n\r\n    @if is-used('igx-dialog', $exclude) {\r\n        $dialog-theme-map: dialog-theme(\r\n            $schema: $schema,\r\n        );\r\n        $dialog-theme-map: meta.call($theme-handler, $dialog-theme-map);\r\n        @include dialog($dialog-theme-map);\r\n    }\r\n\r\n    @if is-used('igx-divider', $exclude) {\r\n        $divider-theme-map: divider-theme(\r\n            $schema: $schema,\r\n        );\r\n        $divider-theme-map: meta.call($theme-handler, $divider-theme-map);\r\n        @include divider($divider-theme-map);\r\n    }\r\n\r\n    @if is-used('igc-dockmanager', $exclude) {\r\n        $dock-manager-theme-map: dock-manager-theme(\r\n            $schema: $schema,\r\n        );\r\n        $dock-manager-theme-map: meta.call($theme-handler, $dock-manager-theme-map);\r\n        @include dock-manager($dock-manager-theme-map);\r\n    }\r\n\r\n    @if is-used('igc-rating', $exclude) {\r\n        $rating-theme-map: rating-theme(\r\n            $schema: $schema,\r\n        );\r\n        $rating-theme-map: meta.call($theme-handler, $rating-theme-map);\r\n        @include rating($rating-theme-map);\r\n    }\r\n\r\n    @if is-used('igx-drop-down', $exclude) {\r\n        $drop-down-theme-map: drop-down-theme(\r\n            $schema: $schema,\r\n        );\r\n        $drop-down-theme-map: meta.call($theme-handler, $drop-down-theme-map);\r\n        @include drop-down($drop-down-theme-map);\r\n    }\r\n\r\n    @if is-used('igx-expansion-panel', $exclude) {\r\n        $expansion-panel-theme-map: expansion-panel-theme(\r\n            $schema: $schema,\r\n        );\r\n        $expansion-panel-theme-map: meta.call($theme-handler, $expansion-panel-theme-map);\r\n        @include expansion-panel($expansion-panel-theme-map);\r\n    }\r\n\r\n    @if is-used('igx-grid', $exclude) {\r\n        $grid-theme-map: grid-theme(\r\n            $schema: $schema,\r\n        );\r\n        $grid-theme-map: meta.call($theme-handler, $grid-theme-map);\r\n        @include grid($grid-theme-map);\r\n    }\r\n\r\n    @if is-used('igx-grid-summary', $exclude) {\r\n        $grid-summary-theme-map: grid-summary-theme(\r\n            $schema: $schema,\r\n        );\r\n        $grid-summary-theme-map: meta.call($theme-handler, $grid-summary-theme-map);\r\n        @include grid-summary($grid-summary-theme-map);\r\n    }\r\n\r\n    @if is-used('igx-grid-toolbar', $exclude) {\r\n        $grid-toolbar-theme-map: grid-toolbar-theme(\r\n            $schema: $schema,\r\n        );\r\n        $grid-toolbar-theme-map: meta.call($theme-handler, $grid-toolbar-theme-map);\r\n        @include grid-toolbar($grid-toolbar-theme-map);\r\n    }\r\n\r\n    @if is-used('igx-pivot-data-selector', $exclude) {\r\n        $pivot-data-selector-theme-map: pivot-data-selector-theme(\r\n            $schema: $schema,\r\n        );\r\n        $pivot-data-selector-theme-map: meta.call($theme-handler, $pivot-data-selector-theme-map);\r\n        @include pivot-data-selector($pivot-data-selector-theme-map);\r\n    }\r\n\r\n    @if is-used('igx-highlight', $exclude) {\r\n        $highlight-theme-map: highlight-theme(\r\n            $schema: $schema,\r\n        );\r\n        $highlight-theme-map: meta.call($theme-handler, $highlight-theme-map);\r\n        @include highlight($highlight-theme-map);\r\n    }\r\n\r\n    @if is-used('igx-icon', $exclude) {\r\n        $icon-theme-map: icon-theme(\r\n            $schema: $schema,\r\n        );\r\n        $icon-theme-map: meta.call($theme-handler, $icon-theme-map);\r\n        @include icon($icon-theme-map);\r\n    }\r\n\r\n    @if is-used('igx-input-group', $exclude) {\r\n        $input-group-theme-map: input-group-theme(\r\n            $schema: $schema,\r\n        );\r\n        $input-group-theme-map: meta.call($theme-handler, $input-group-theme-map);\r\n        @include input-group($input-group-theme-map);\r\n    }\r\n\r\n    @if is-used('igx-list', $exclude) {\r\n        $list-theme-map: list-theme(\r\n            $schema: $schema,\r\n        );\r\n        $list-theme-map: meta.call($theme-handler, $list-theme-map);\r\n        @include list($list-theme-map);\r\n    }\r\n\r\n    @if is-used('igx-navbar', $exclude) {\r\n        $navbar-theme-map: navbar-theme(\r\n            $schema: $schema,\r\n        );\r\n        $navbar-theme-map: meta.call($theme-handler, $navbar-theme-map);\r\n        @include navbar($navbar-theme-map);\r\n    }\r\n\r\n    @if is-used('igx-nav-drawer', $exclude) {\r\n        $navdrawer-theme-map: navdrawer-theme(\r\n            $schema: $schema,\r\n        );\r\n        $navdrawer-theme-map: meta.call($theme-handler, $navdrawer-theme-map);\r\n        @include navdrawer($navdrawer-theme-map);\r\n    }\r\n\r\n    @if is-used('igx-overlay', $exclude) {\r\n        $overlay-theme-map: overlay-theme(\r\n            $schema: $schema,\r\n        );\r\n        $overlay-theme-map: meta.call($theme-handler, $overlay-theme-map);\r\n        @include overlay($overlay-theme-map);\r\n    }\r\n\r\n    @if is-used('igx-paginator', $exclude) {\r\n        $paginator-theme-map: paginator-theme(\r\n            $schema: $schema,\r\n        );\r\n        $paginator-theme-map: meta.call($theme-handler, $paginator-theme-map);\r\n        @include paginator($paginator-theme-map);\r\n    }\r\n\r\n    @if is-used('igx-circular-bar', $exclude) {\r\n        $progress-circular-theme-map: progress-circular-theme(\r\n            $schema: $schema,\r\n        );\r\n        $progress-circular-theme-map: meta.call($theme-handler, $progress-circular-theme-map);\r\n        @include progress-circular($progress-circular-theme-map);\r\n    }\r\n\r\n    @if is-used('igx-linear-bar', $exclude) {\r\n        $progress-linear-theme-map: progress-linear-theme(\r\n            $schema: $schema,\r\n        );\r\n        $progress-linear-theme-map: meta.call($theme-handler, $progress-linear-theme-map);\r\n        @include progress-linear($progress-linear-theme-map);\r\n    }\r\n\r\n    @if is-used('igx-radio', $exclude) {\r\n        $radio-theme-map: radio-theme(\r\n            $schema: $schema,\r\n        );\r\n        $radio-theme-map: meta.call($theme-handler, $radio-theme-map);\r\n        @include radio($radio-theme-map);\r\n    }\r\n\r\n    @if is-used('igx-query-builder', $exclude) {\r\n        $query-builder-theme-map: query-builder-theme(\r\n            $schema: $schema,\r\n        );\r\n        $query-builder-theme-map: meta.call($theme-handler, $query-builder-theme-map);\r\n        @include query-builder($query-builder-theme-map);\r\n    }\r\n\r\n    @if is-used('ig-scrollbar', $exclude) {\r\n        $scrollbar-theme-map: scrollbar-theme(\r\n            $schema: $schema,\r\n        );\r\n        $scrollbar-theme-map: meta.call($theme-handler, $scrollbar-theme-map);\r\n        @include scrollbar($scrollbar-theme-map);\r\n    }\r\n\r\n    @if is-used('igx-slider', $exclude) {\r\n        $slider-theme-map: slider-theme(\r\n            $schema: $schema,\r\n        );\r\n        $slider-theme-map: meta.call($theme-handler, $slider-theme-map);\r\n        @include slider($slider-theme-map);\r\n    }\r\n\r\n    @if is-used('igx-snackbar', $exclude) {\r\n        $snackbar-theme-map: snackbar-theme(\r\n            $schema: $schema,\r\n        );\r\n        $snackbar-theme-map: meta.call($theme-handler, $snackbar-theme-map);\r\n        @include snackbar($snackbar-theme-map);\r\n    }\r\n\r\n    @if is-used('igx-switch', $exclude) {\r\n        $switch-theme-map: switch-theme(\r\n            $schema: $schema,\r\n        );\r\n        $switch-theme-map: meta.call($theme-handler, $switch-theme-map);\r\n        @include switch($switch-theme-map);\r\n    }\r\n\r\n    @if is-used('igx-tabs', $exclude) {\r\n        $tabs-theme-map: tabs-theme(\r\n            $schema: $schema,\r\n        );\r\n        $tabs-theme-map: meta.call($theme-handler, $tabs-theme-map);\r\n        @include tabs($tabs-theme-map);\r\n    }\r\n\r\n    @if is-used('igx-stepper', $exclude) {\r\n        $stepper-theme-map: stepper-theme(\r\n            $schema: $schema,\r\n        );\r\n        $stepper-theme-map: meta.call($theme-handler, $stepper-theme-map);\r\n        @include stepper($stepper-theme-map);\r\n    }\r\n\r\n    @if is-used('igx-toast', $exclude) {\r\n        $toast-theme-map: toast-theme(\r\n            $schema: $schema,\r\n        );\r\n        $toast-theme-map: meta.call($theme-handler, $toast-theme-map);\r\n        @include toast($toast-theme-map);\r\n    }\r\n\r\n    @if is-used('igx-tooltip', $exclude) {\r\n        $tooltip-theme-map: tooltip-theme(\r\n            $schema: $schema,\r\n        );\r\n        $tooltip-theme-map: meta.call($theme-handler, $tooltip-theme-map);\r\n        @include tooltip($tooltip-theme-map);\r\n    }\r\n\r\n    @if is-used('igx-time-picker', $exclude) {\r\n        $time-picker-theme-map: time-picker-theme(\r\n            $schema: $schema,\r\n        );\r\n        $time-picker-theme-map: meta.call($theme-handler, $time-picker-theme-map);\r\n        @include time-picker($time-picker-theme-map);\r\n    }\r\n\r\n    @if is-used('igx-tree', $exclude) {\r\n        $tree-theme-map: tree-theme(\r\n            $schema: $schema,\r\n        );\r\n        $tree-theme-map: meta.call($theme-handler, $tree-theme-map);\r\n        @include tree($tree-theme-map);\r\n    }\r\n\r\n    @if is-used('igx-watermark', $exclude) {\r\n        $watermark-theme-map: watermark-theme(\r\n            $schema: $schema,\r\n        );\r\n        $watermark-theme-map: meta.call($theme-handler, $watermark-theme-map);\r\n        @include watermark($watermark-theme-map);\r\n    }\r\n\r\n    @if list.length($dropped-themes) > 0 {\r\n        @warn string.unquote('You have excluded the following components from the theme: \"#{$dropped-themes}\".');\r\n    }\r\n}\r\n\r\n/// A wrapper around the theme mixin. Creates a global material theme that can be used with light backgrounds.\r\n/// @param {Map} $palette - An palette to be used by the global theme.\r\n/// @param {List} $exclude [( )] - A list of ig components to be excluded from the global theme styles.\r\n/// @see {mixin} theme\r\n@mixin light-theme(\r\n    $palette,\r\n    $exclude: (),\r\n    $roundness: null,\r\n    $elevation: true,\r\n) {\r\n    $gray: color($palette, 'gray');\r\n    $surface: color($palette, 'surface');\r\n\r\n    $light-palette: palette(\r\n        $primary: color($palette, 'primary'),\r\n        $secondary: color($palette, 'secondary'),\r\n        $info: color($palette, 'info'),\r\n        $success: color($palette, 'success'),\r\n        $warn: color($palette, 'warn'),\r\n        $error: color($palette, 'error'),\r\n        $surface: if($surface != #fff, $surface, #fff),\r\n        $gray: if($gray != #9e9e9e, $gray, #000),\r\n    );\r\n\r\n    @include theme(\r\n        $palette: $light-palette,\r\n        $schema: $light-material-schema,\r\n        $exclude: $exclude,\r\n        $roundness: $roundness,\r\n        $elevation: $elevation,\r\n    );\r\n}\r\n\r\n/// A wrapper around the theme mixin. Creates a global material theme that can be used with dark backgrounds.\r\n/// @param {Map} $palette - An palette to be used by the global theme.\r\n/// @param {List} $exclude [( )] - A list of igx components to be excluded from the global theme styles.\r\n/// @see {mixin} theme\r\n@mixin dark-theme(\r\n    $palette,\r\n    $exclude: (),\r\n    $roundness: null,\r\n    $elevation: true,\r\n) {\r\n    $gray: color($palette, 'gray');\r\n    $surface: color($palette, 'surface');\r\n\r\n    $dark-palette: palette(\r\n        $primary: color($palette, 'primary'),\r\n        $secondary: color($palette, 'secondary'),\r\n        $info: color($palette, 'info'),\r\n        $success: color($palette, 'success'),\r\n        $warn: color($palette, 'warn'),\r\n        $error: color($palette, 'error'),\r\n        $surface: if($surface != #fff, $surface, #222),\r\n        $gray: if($gray != #9e9e9e, $gray, #fff),\r\n    );\r\n\r\n    @include theme(\r\n        $palette: $dark-palette,\r\n        $schema: $dark-material-schema,\r\n        $exclude: $exclude,\r\n        $roundness: $roundness,\r\n        $elevation: $elevation,\r\n    );\r\n}\r\n","@use 'sass:map';\n@use 'sass:list';\n@use 'sass:meta';\n@use 'sass:math';\n@use 'sass:color';\n@use 'sass:string';\n@use '../utils/meta' as *;\n\n////\n/// @package theming\n////\n\n// Generates CSS variables for a base color\n// @access private\n@mixin _base($color, $shade, $value) {\n    @if $shade == 500 {\n        $_type: meta.type-of($value);\n\n        @if $_type == 'color' {\n            --ig-#{$color}-h: #{math.round(color.hue($value))};\n            --ig-#{$color}-s: #{math.round(color.saturation($value))};\n            --ig-#{$color}-l: #{math.round(color.lightness($value))};\n            --ig-#{$color}-a: #{color.alpha($value)};\n        }\n\n        // Cover handmade palettes with hsl values for base color\n        @if $_type == 'list' and list.length($value) == 3 {\n            --ig-#{$color}-h: #{list.nth($value, 1)};\n            --ig-#{$color}-s: #{list.nth($value, 2)};\n            --ig-#{$color}-l: #{list.nth($value, 3)};\n            --ig-#{$color}-a: 1;\n        }\n    }\n}\n\n// Generates CSS variables for a shade color\n// @access private\n@mixin _shade($color, $shade, $value, $contrast) {\n    $_shade: meta.type-of($shade) == 'string';\n    $_hsl: if($_shade, string.index($shade, 'hsl'), false);\n    $_contrast: if($_shade, string.index($shade, 'contrast'), false);\n\n    @if $_hsl {\n        $variant: string.slice($shade, 1, string.index($shade, '-hsl') - 1);\n\n        --ig-#{$color}-#{$variant}: #{$value};\n    }\n\n    @if not($_hsl) and not($_contrast) {\n        --ig-#{$color}-#{$shade}: #{$value};\n    }\n\n    @if $_contrast and $contrast {\n        --ig-#{$color}-#{$shade}: #{$value};\n    }\n}\n\n/// Generates CSS variables for a given palette.\n/// @access public\n/// @group Palettes\n/// @param {Map} $palette - The palette used to generate CSS variables.\n/// @param {Boolean} $contrast [true] - Specify if contrast colors should be included.\n/// @example scss Generate css variables for a palette\n///    $palette: palette($primary: red, $secondary: blue, $gray: #000);\n///    @include palette($palette);\n/// @require {function} is-root\n@mixin palette($palette, $contrast: true) {\n    $scope: if(is-root(), ':root', '&');\n\n    #{$scope} {\n        @each $color, $shades in map.remove($palette, '_meta') {\n            @each $shade, $value in $shades {\n                @include _base($color, $shade, $value);\n                @include _shade($color, $shade, $value, $contrast);\n            }\n        }\n    }\n}\n","@use '../utils/meta' as *;\n\n////\n/// @package theming\n/// @group Elevations\n////\n\n/// Generates CSS variables for a given elevations map.\n/// @access public\n/// @param {Map} $elevations - The elevations map to use to generate CSS variables.\n/// @example scss Generate CSS variables for elevations.\n///   $elevations: (\n///       small: box-shadow(0 .125rem .25rem rgba(0 0 0 / 75%)),\n///       medium: box-shadow(0 .25rem .5rem rgba(0 0 0 / 85%)),\n///       large: box-shadow(0 .75rem 1rem rgba(0 0 0 / 95%))\n///   );\n///   :root {\n///       @include elevations($elevations);\n///   }\n/// @require {function} is-root\n@mixin elevations($elevations) {\n    $scope: if(is-root(), ':root', '&');\n\n    #{$scope} {\n        @each $level, $shadow in $elevations {\n            --ig-elevation-#{$level}: #{$shadow};\n        }\n    }\n}\n\n/// Includes box-shadow styles for an elevation by name\n/// @access public\n/// @param {String} $name - The name of the shadow.\n/// @example scss Include a box shadow by its name.\n///   .my-class {\n///     @include elevation(small);\n///   }\n@mixin elevation($name) {\n    box-shadow: var(--ig-elevation-#{$name});\n}\n","@use 'sass:map';\r\n@use '../../base' as *;\r\n@use '../../themes/schemas' as *;\r\n\r\n////\r\n/// @group themes\r\n/// @access public\r\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\r\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\r\n////\r\n\r\n/// @param {Map} $schema [$light-material-schema] - The schema used as basis for styling the component.\r\n/// @param {Color} $color [null] - The color of the ripple.\r\n/// @requires $light-material-schema\r\n/// @example scss Change the color\r\n///   $my-ripple-theme: igx-ripple-theme($color: yellow);\r\n///   // Pass the theme to the css-vars() mixin\r\n///   @include css-vars($my-ripple-theme);\r\n@function ripple-theme(\r\n    $schema: $light-material-schema,\r\n    $color: null\r\n) {\r\n    $name: 'igx-ripple';\r\n    $selector: '[igxRipple]';\r\n\r\n    $ripple-schema: ();\r\n\r\n    @if map.has-key($schema, 'ripple') {\r\n        $ripple-schema: map.get($schema, 'ripple');\r\n    } @else {\r\n        $ripple-schema: $schema;\r\n    }\r\n\r\n    $theme: digest-schema($ripple-schema);\r\n\r\n    @return extend($theme, (\r\n        name: $name,\r\n        selector: $selector,\r\n        color: $color\r\n    ));\r\n}\r\n\r\n/// @param {Map} $theme - The theme used to style the component.\r\n@mixin ripple($theme) {\r\n    @include css-vars($theme);\r\n\r\n    %igx-ripple-display {\r\n        display: block;\r\n        position: absolute;\r\n        border-radius: border-radius(50%);\r\n        background: var-get($theme, 'color');\r\n        pointer-events: none;\r\n        transform-origin: center;\r\n        transform: translate3d(0, 0, 0) scale(0);\r\n        will-change: opacity, transform;\r\n        opacity: .5;\r\n        margin: 0 !important;\r\n        border: none !important;\r\n    }\r\n\r\n    %igx-ripple-wrapper {\r\n        overflow: hidden;\r\n    }\r\n}\r\n","@use 'sass:map';\r\n@use '../../base' as *;\r\n@use '../../themes/schemas' as *;\r\n@use 'igniteui-theming/sass/animations/easings' as *;\r\n\r\n////\r\n/// @group themes\r\n/// @access public\r\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\r\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\r\n////\r\n\r\n/// If only background color is specified, text/icon color will be assigned automatically to a contrasting color.\r\n/// @param {Map} $schema [$light-material-schema] - The schema used as basis for styling the component.\r\n/// @param {Color} $color [null] - The text color used of the avatar.\r\n/// @param {Color} $background [null] - The background color used of the avatar.\r\n/// @param {Number} $border-radius [null] - The border-radius used of the avatar.\r\n/// @param {Number} $size [null] - The size of the avatar.\r\n/// @requires $light-material-schema\r\n///\r\n/// @example scss Change the background and icon colors in icon avatars\r\n///   $my-avatar-theme: avatar-theme($icon-background: black, $icon-color: white);\r\n///   // Pass the theme to the css-vars() mixin\r\n///   @include css-vars($my-avatar-theme);\r\n@function avatar-theme(\r\n    $schema: $light-material-schema,\r\n    $background: null,\r\n    $color: null,\r\n    $border-radius: null,\r\n    $size: null,\r\n) {\r\n    $name: 'igx-avatar';\r\n    $avatar-schema: ();\r\n\r\n    @if map.has-key($schema, 'avatar') {\r\n        $avatar-schema: map.get($schema, 'avatar');\r\n    } @else {\r\n        $avatar-schema: $schema;\r\n    }\r\n\r\n    $theme: digest-schema($avatar-schema);\r\n    $meta: map.get($theme, '_meta');\r\n\r\n    @if not($color) and $background {\r\n        $color: text-contrast($background);\r\n    }\r\n\r\n    @if not($border-radius) {\r\n        $border-radius: border-radius(map.get($theme, 'border-radius')...);\r\n    }\r\n\r\n    @if not($size) {\r\n        $size: sizable(#{rem(40px)}, #{rem(64px)}, #{rem(88px)});\r\n    }\r\n\r\n    @return extend($theme, (\r\n        name: $name,\r\n        background: $background,\r\n        color: $color,\r\n        border-radius: $border-radius,\r\n        size: $size,\r\n        _meta: map.merge(if($meta, $meta, ()), (\r\n            variant: map.get($schema, '_meta', 'theme')\r\n        )),\r\n    ));\r\n}\r\n\r\n/// @param {Map} $theme - The theme used to style the component.\r\n@mixin avatar($theme) {\r\n    @include css-vars($theme);\r\n\r\n    $variant: map.get($theme, '_meta', 'variant');\r\n    $bootstrap-theme: $variant == 'bootstrap';\r\n\r\n    $box-shadow: map.get((\r\n        material: null,\r\n        fluent: null,\r\n        bootstrap: 0 0 0 rem(3px) var-get($theme, 'background'),\r\n        indigo-design: null,\r\n    ), $variant);\r\n\r\n    %igx-avatar-outline {\r\n        position: absolute;\r\n        content: '';\r\n        width: 100%;\r\n        height: 100%;\r\n        border-radius: inherit;\r\n        opacity: .5;\r\n    }\r\n\r\n    %igx-avatar-display {\r\n        position: relative;\r\n        display: inline-flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        user-select: none;\r\n        color: var-get($theme, 'color');\r\n        background: var-get($theme, 'background');\r\n        vertical-align: middle;\r\n        border-radius: var-get($theme, 'border-radius');\r\n        outline-style: none;\r\n        flex-shrink: 0;\r\n        width: var-get($theme, 'size');\r\n        height: var-get($theme, 'size');\r\n\r\n        &::after {\r\n            box-shadow: none;\r\n            @if $bootstrap-theme {\r\n                @extend %igx-avatar-outline;\r\n            }\r\n            transition: box-shadow .15s $in-out-quad;\r\n        }\r\n\r\n        &:focus::after {\r\n            box-shadow: $box-shadow;\r\n        }\r\n    }\r\n\r\n    %igx-avatar-image {\r\n        width: 100%;\r\n        height: 100%;\r\n        border-radius: inherit;\r\n        background-size: cover;\r\n        background-repeat: no-repeat;\r\n        background-position: center;\r\n    }\r\n\r\n    %igx-avatar--circle {\r\n        --igx-avatar-border-radius: #{rem(44px)};\r\n    }\r\n\r\n    %igx-avatar--rounded {\r\n        --igx-avatar-border-radius: #{rem(8px)};\r\n\r\n        @if $variant == 'bootstrap' {\r\n            --igx-avatar-border-radius: #{rem(4px)};\r\n        }\r\n    }\r\n\r\n    %igx-avatar--initials {\r\n        text-transform: uppercase;\r\n        font-size: calc(#{var-get($theme, 'size')} / 2);\r\n        line-height: calc(#{var-get($theme, 'size')} / 2);\r\n    }\r\n\r\n    %igx-avatar--small,\r\n    %igx-avatar-initials--small {\r\n        --component-size: var(--ig-size, var(--ig-size-small));\r\n    }\r\n\r\n    %igx-avatar--medium,\r\n    %igx-avatar-initials--medium {\r\n        --component-size: var(--ig-size, var(--ig-size-medium));\r\n    }\r\n\r\n    %igx-avatar--large,\r\n    %igx-avatar-initials--large {\r\n        --component-size: var(--ig-size, var(--ig-size-large));\r\n    }\r\n}\r\n","@use 'sass:map';\r\n@use '../../base' as *;\r\n@use '../../themes/schemas' as *;\r\n\r\n////\r\n/// @group themes\r\n/// @access public\r\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\r\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\r\n////\r\n\r\n/// If only background color is specified, text/icon color will be assigned automatically to a contrasting color.\r\n/// @param {Map} $schema [$light-material-schema] - The schema used as basis for styling the component.\r\n///\r\n/// @param {Color} $icon-color [null] - The color used for the actions icons.\r\n/// @param {Color} $background [null] - The color used for the action strip component content background.\r\n/// @param {Color} $actions-background [null] - The color used for the actions background.\r\n/// @param {Color} $delete-action [null] - The color used for the delete icon in action strip component.\r\n/// @param {List} $actions-border-radius [null] - The border radius used for actions container inside action strip component.\r\n///\r\n/// @example scss Change the background and icon colors in action strip\r\n///   $my-action-strip-theme: action-strip-theme($background: black);\r\n///   // Pass the theme to the css-vars() mixin\r\n///   @include css-vars($my-action-strip-theme);\r\n@function action-strip-theme(\r\n    $schema: $light-material-schema,\r\n\r\n    $background: null,\r\n    $actions-background: null,\r\n    $icon-color: null,\r\n    $delete-action: null,\r\n    $actions-border-radius: null,\r\n) {\r\n    $name: 'igx-action-strip';\r\n    $action-strip-schema: ();\r\n\r\n    @if map.has-key($schema, 'action-strip') {\r\n        $action-strip-schema: map.get($schema, 'action-strip');\r\n    } @else {\r\n        $action-strip-schema: $schema;\r\n    }\r\n\r\n    $theme: digest-schema($action-strip-schema);\r\n    $meta: map.get($theme, '_meta');\r\n\r\n    @if not($icon-color) and $actions-background {\r\n        $icon-color: text-contrast($actions-background);\r\n    }\r\n\r\n    @if not($actions-border-radius) {\r\n        $actions-border-radius: border-radius(map.get($theme, 'actions-border-radius')...);\r\n    }\r\n\r\n    @return extend($theme, (\r\n        name: $name,\r\n        background: $background,\r\n        actions-background: $actions-background,\r\n        icon-color: $icon-color,\r\n        delete-action: $delete-action,\r\n        actions-border-radius: $actions-border-radius,\r\n        _meta: map.merge(if($meta, $meta, ()), (\r\n            variant: map.get($schema, '_meta', 'theme')\r\n        )),\r\n    ));\r\n}\r\n\r\n/// @param {Map} $theme - The theme used to style the component.\r\n@mixin action-strip($theme) {\r\n    @include css-vars($theme);\r\n\r\n    $padding-inline: (\r\n        comfortable: rem(24px),\r\n        cosy: rem(16px),\r\n        compact: rem(12px)\r\n    );\r\n\r\n    $variant: map.get($theme, '_meta', 'variant');\r\n\r\n    %igx-action-strip-display {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: flex-end;\r\n        position: absolute;\r\n        width: 100%;\r\n        height: 100%;\r\n        pointer-events: none;\r\n        top: 0;\r\n        inset-inline-start: 0;\r\n        background: var-get($theme, 'background');\r\n        color: inherit;\r\n        padding-inline: pad-inline(map.get($padding-inline, 'compact'), map.get($padding-inline, 'cosy'), map.get($padding-inline, 'comfortable'));\r\n        padding-block: 0;\r\n        z-index: 9999;\r\n    }\r\n\r\n    %action-icons-density {\r\n        [igxButton='icon'] {\r\n            width: rem(28px);\r\n            height: rem(28px);\r\n\r\n            igx-icon {\r\n                width: var(--igx-icon-size, #{rem(14px)});\r\n                height: var(--igx-icon-size, #{rem(14px)});\r\n                font-size: var(--igx-icon-size, #{rem(14px)});\r\n            }\r\n        }\r\n    }\r\n\r\n    %igx-action-strip--cosy,\r\n    %igx-action-strip--compact {\r\n        @extend %action-icons-density;\r\n    }\r\n\r\n    %igx-action-strip__editing-actions,\r\n    %igx-action-strip__pinning-actions {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n    }\r\n\r\n    %igx-action-strip__menu-item {\r\n        [igxLabel] {\r\n            cursor: pointer;\r\n        }\r\n\r\n        igx-icon {\r\n            width: var(--igx-icon-size, rem(18px));\r\n            height: var(--igx-icon-size, rem(18px));\r\n            font-size: var(--igx-icon-size, rem(18px));\r\n        }\r\n\r\n        igx-icon + [igxLabel] {\r\n            margin-inline-start: rem(12px);\r\n        }\r\n\r\n        &%igx-drop-down__item--cosy {\r\n            igx-icon + [igxLabel] {\r\n                margin-inline-start: rem(10px);\r\n            }\r\n        }\r\n\r\n        &%igx-drop-down__item--compact {\r\n            igx-icon + [igxLabel] {\r\n                margin-inline-start: rem(8px);\r\n            }\r\n        }\r\n    }\r\n\r\n    %igx-action-strip__menu-item--danger {\r\n        color: color($color: 'error');\r\n\r\n        &:hover {\r\n            color: color($color: 'error');\r\n        }\r\n    }\r\n\r\n    %igx-action-strip__menu-button {\r\n        display: flex;\r\n        align-items: center;\r\n    }\r\n\r\n    %igx-action-strip__actions {\r\n        display: inline-flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        pointer-events: all;\r\n        position: relative;\r\n        color: var-get($theme, 'icon-color');\r\n        border-radius: var-get($theme, 'actions-border-radius');\r\n        background: var-get($theme, 'actions-background');\r\n        max-height: rem(36px);\r\n\r\n        &:last-child {\r\n            margin-inline-end: 0;\r\n        }\r\n\r\n        igx-icon {\r\n            color: var-get($theme, 'icon-color');\r\n        }\r\n\r\n        [igxButton='icon'] {\r\n            igx-icon {\r\n                color: var-get($theme, 'icon-color');\r\n            }\r\n\r\n            @if $variant == 'indigo-design' or $variant == 'fluent' {\r\n                border-radius: var-get($theme, 'actions-border-radius');\r\n            }\r\n        }\r\n    }\r\n\r\n    %igx-action-strip__editing-actions {\r\n        > [igxButton] {\r\n            margin-inline-start: rem(4px);\r\n\r\n            &:first-of-type {\r\n                margin-inline-start: 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    %igx-action-strip__delete {\r\n        igx-icon {\r\n            color: var-get($theme, 'delete-action');\r\n        }\r\n    }\r\n}\r\n","@use '../../base' as *;\r\n@use '../../themes/schemas' as *;\r\n@use 'sass:map';\r\n\r\n////\r\n/// @group themes\r\n/// @access public\r\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\r\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\r\n////\r\n\r\n/// If only background color is specified, text/icon color\r\n/// will be assigned automatically to a contrasting color.\r\n///\r\n/// @param {Map} $schema [$light-material-schema] - The schema used as basis for styling the component.\r\n/// @param {Map} $elevations [null] - The elevations (shadows) map to be used.\r\n/// @param {Color} $icon-color [null] - The icon color used.\r\n/// @param {Color} $text-color [null] - The text color used.\r\n/// @param {Color} $border-color [null] - The border color used.\r\n/// @param {Number} $border-width [null] - The border width of the badge component.\r\n/// @param {Color} $background-color [null] - The background color used.\r\n/// @param {box-shadow} $shadow [null] - Sets a shadow to be used for the badge.\r\n/// @param {Number} $border-radius [null] - The border radius used for badge component.\r\n///\r\n/// @requires $light-material-schema\r\n///\r\n/// @example scss Change the text and icon colors in a badge\r\n///   $my-badge-theme: badge-theme($icon-color: black, $background-color: white);\r\n///   // Pass the theme to the css-vars() mixin\r\n///   @include css-vars($my-badge-theme);\r\n@function badge-theme(\r\n    $schema: $light-material-schema,\r\n    $elevations: null,\r\n\r\n    $icon-color: null,\r\n    $text-color: null,\r\n\r\n    $border-color: null,\r\n    $border-radius: null,\r\n    $border-width: null,\r\n\r\n    $background-color: null,\r\n    $shadow: null,\r\n) {\r\n    $name: 'igx-badge';\r\n    $badge-schema: ();\r\n\r\n    @if map.has-key($schema, 'badge') {\r\n        $badge-schema: map.get($schema, 'badge');\r\n    } @else {\r\n        $badge-schema: $schema;\r\n    }\r\n\r\n    $theme: digest-schema($badge-schema);\r\n\r\n    @if not($icon-color) and $background-color {\r\n        $icon-color: text-contrast($background-color);\r\n    }\r\n\r\n    @if not($text-color) and $background-color {\r\n        $text-color: text-contrast($background-color);\r\n    }\r\n\r\n    @if not($shadow) {\r\n        $elevation: map.get($badge-schema, 'elevation');\r\n        $shadow: elevation($elevation);\r\n    }\r\n\r\n    @if not($border-radius) {\r\n        $border-radius: border-radius(map.get($theme, 'border-radius')...);\r\n    }\r\n\r\n    @return extend($theme, (\r\n        name: $name,\r\n        icon-color: $icon-color,\r\n        text-color: $text-color,\r\n        border-color: $border-color,\r\n        border-radius: $border-radius,\r\n        background-color: $background-color,\r\n        shadow: $shadow,\r\n        border-width: $border-width\r\n    ));\r\n}\r\n\r\n/// @param {Map} $theme - The theme used to style the component.\r\n@mixin badge($theme) {\r\n    @include css-vars($theme);\r\n\r\n    $badge-font-weight: normal;\r\n\r\n    $badge-value-padding: rem(4px);\r\n    $border-type: solid;\r\n\r\n    %igx-badge-display {\r\n        --size: #{rem(22px)};\r\n        --font-size: calc(var(--size) / 2);\r\n        --icon-font-size: #{rem(12px)};\r\n\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        min-width: var(--size);\r\n        min-height: var(--size);\r\n        font-size: var(--font-size);\r\n        font-weight: $badge-font-weight;\r\n        color: var-get($theme, 'text-color');\r\n        line-height: 1;\r\n        background: var-get($theme, 'background-color');\r\n        border-radius: calc(var(--size) / 2);\r\n        box-shadow: var-get($theme, 'shadow');\r\n        border-width: var-get($theme, 'border-width');\r\n        border-color: var-get($theme, 'border-color');\r\n        border-style: $border-type;\r\n        overflow: hidden;\r\n\r\n        igx-icon {\r\n            display: inline-flex;\r\n            justify-content: center;\r\n            align-items: center;\r\n            width: var(--igx-icon-size, #{var(--size) - rem(2px)});\r\n            height: var(--igx-icon-size, #{var(--size) - rem(2px)});\r\n            font-size: var(--igx-icon-size, #{var(--icon-font-size)});\r\n            font-weight: $badge-font-weight;\r\n            color: var-get($theme, 'icon-color');\r\n        }\r\n    }\r\n\r\n    %igx-badge--square {\r\n        border-radius: var-get($theme, 'border-radius');\r\n    }\r\n\r\n    %igx-badge-value {\r\n        white-space: nowrap;\r\n        padding: $badge-value-padding;\r\n    }\r\n\r\n    %igx-badge--success {\r\n        background: color($color: 'success');\r\n    }\r\n\r\n    %igx-badge--info {\r\n        background: color($color: 'info');\r\n    }\r\n\r\n    %igx-badge--warn {\r\n        background: color($color: 'warn');\r\n    }\r\n\r\n    %igx-badge--error {\r\n        background: color($color: 'error');\r\n    }\r\n\r\n    %igx-badge--hidden {\r\n        visibility: hidden;\r\n    }\r\n}\r\n","@use 'sass:map';\r\n@use 'sass:meta';\r\n@use '../../base' as *;\r\n@use '../../themes/schemas' as *;\r\n@use 'igniteui-theming/sass/animations/easings' as *;\r\n\r\n////\r\n/// @group themes\r\n/// @access public\r\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\r\n////\r\n\r\n/// If only background color is specified, text/icon color\r\n/// will be assigned automatically to a contrasting color.\r\n/// Does ___not___ apply for disabled state colors.\r\n/// @param {Map} $schema [$light-material-schema] - The schema used as basis for styling the component.\r\n/// @param {Map} $elevations [null] - The elevations (shadows) map to be used.\r\n///\r\n/// @param {box-shadow} $shadow [null] - The shadow to be applied for the button group.\r\n/// @param {Color} $item-text-color [null]- The text color for button group items.\r\n/// @param {Color} $item-background [null] - The background color for button group items .\r\n/// @param {Color} $item-border-color [null] - The border color between button group items.\r\n/// @param {Color} $item-disabled-border [null] - The border color for a disabled item in the button group.\r\n///\r\n/// @param {Color} $item-hover-text-color [null] - The hover text color for button group items.\r\n/// @param {Color} $item-hover-background [null] - The hover background color for button group items.\r\n///\r\n/// @param {Color} $disabled-text-color [null]- The text/icon color for a disabled item in the button group.\r\n/// @param {Color} $disabled-background-color [null] - The background color for a disabled item in the button group.\r\n/// @param {Color} $item-disabled-border [null] - The border color for a disabled item in the button group.\r\n///\r\n/// @param {Color} $item-selected-text-color [null]- The text color for a selected item in the button group.\r\n/// @param {Color} $item-selected-background [null] - The background color for a selected item in the button group.\r\n/// @param {Color} $item-selected-border-color [null] - The border color for a selected item from the button group.\r\n/// @param {Color} $item-selected-hover-background [null] - The background color for a selected item in hover or focus state in the button group.\r\n/// @param {Color} $selected-shadow-color [null] - The outline color of focused/selected button group items.\r\n/// @param {Color} $idle-shadow-color [null] - The outline color of focused button group items.\r\n///\r\n/// @param {List} $border-radius [null] - The border radius used for button-group component.\r\n///\r\n/// @requires $light-material-schema\r\n///\r\n/// @example scss Change the background, text, and border colors\r\n///   $my-button-group-theme: button-group-theme(\r\n///     $item-text-color: white,\r\n///     $item-background: rgba(0, 0, 0, .8),\r\n///     $item-border-color: #dadada\r\n///   );\r\n///   // Pass the theme to the css-vars() mixin\r\n///   @include css-vars($my-button-group-theme);\r\n@function button-group-theme(\r\n    $schema: $light-material-schema,\r\n    $elevations: null,\r\n\r\n    $shadow: null,\r\n    $item-text-color: null,\r\n    $item-background: null,\r\n    $item-border-color: null,\r\n    $item-disabled-border: null,\r\n    $border-radius: null,\r\n\r\n    $item-hover-text-color: null,\r\n    $item-hover-background: null,\r\n    $idle-shadow-color: null,\r\n\r\n    $disabled-text-color: null,\r\n    $disabled-background-color: null,\r\n\r\n    $item-selected-text-color: null,\r\n    $item-selected-background: null,\r\n    $item-selected-border-color: null,\r\n    $item-selected-hover-background: null,\r\n    $selected-shadow-color: null\r\n) {\r\n    $name: 'igx-button-group';\r\n    $selector: 'igx-buttongroup';\r\n    $button-group-schema: ();\r\n\r\n    @if map.has-key($schema, 'button-group') {\r\n        $button-group-schema: map.get($schema, 'button-group');\r\n    } @else {\r\n        $button-group-schema: $schema;\r\n    }\r\n\r\n    $theme: digest-schema($button-group-schema);\r\n    $meta: map.get($theme, '_meta');\r\n\r\n    $border: rem(1px) solid map.get($theme, 'item-selected-border-color');\r\n\r\n    @if not($item-text-color) and $item-background {\r\n        @if meta.type-of($item-background) == 'color' {\r\n            $item-text-color: text-contrast($item-background);\r\n        }\r\n    }\r\n\r\n    @if not($item-hover-text-color) and $item-hover-background {\r\n        @if meta.type-of($item-hover-background) == 'color' {\r\n            $item-hover-text-color: text-contrast($item-hover-background);\r\n        }\r\n    }\r\n\r\n    @if not($item-selected-background) and $item-background {\r\n        @if meta.type-of($item-background) == 'color' {\r\n            $item-selected-text-color: text-contrast($item-background);\r\n        }\r\n    }\r\n\r\n    @if not($idle-shadow-color) and $selected-shadow-color {\r\n        @if meta.type-of($selected-shadow-color) == 'color' {\r\n            $idle-shadow-color: $selected-shadow-color;\r\n        }\r\n    }\r\n\r\n    @if not($selected-shadow-color) and $idle-shadow-color {\r\n        @if meta.type-of($idle-shadow-color) == 'color' {\r\n            $selected-shadow-color: $idle-shadow-color;\r\n        }\r\n    }\r\n\r\n    @if not($item-selected-text-color) and $item-selected-background {\r\n        @if meta.type-of($item-selected-background) == 'color' {\r\n            $item-selected-text-color: text-contrast($item-selected-background);\r\n        }\r\n    }\r\n\r\n    @if map.get($button-group-schema, 'elevation') > 0 {\r\n        $border: none;\r\n    }\r\n\r\n    @if not($shadow) {\r\n        $elevation: map.get($button-group-schema, 'elevation');\r\n        $shadow: elevation($elevation);\r\n    }\r\n\r\n    @if not($border-radius) {\r\n        $border-radius: border-radius(map.get($theme, 'border-radius')...);\r\n    }\r\n\r\n    @return extend($theme, (\r\n        name: $name,\r\n        selector: $selector,\r\n        item-text-color: $item-text-color,\r\n        item-background: $item-background,\r\n        item-border-color: $item-border-color,\r\n        item-disabled-border: $item-disabled-border,\r\n        border-radius: $border-radius,\r\n        item-hover-text-color: $item-hover-text-color,\r\n        item-hover-background: $item-hover-background,\r\n        disabled-text-color:$disabled-text-color,\r\n        disabled-background-color:$disabled-background-color,\r\n        item-selected-text-color: $item-selected-text-color,\r\n        item-selected-background: $item-selected-background,\r\n        item-selected-border-color: $item-selected-border-color,\r\n        item-selected-hover-background: $item-selected-hover-background,\r\n        border: $border,\r\n        shadow: $shadow,\r\n        idle-shadow-color: $idle-shadow-color,\r\n        selected-shadow-color: $selected-shadow-color,\r\n        _meta: map.merge(if($meta, $meta, ()), (\r\n            variant: map.get($schema, '_meta', 'theme')\r\n        )),\r\n    ));\r\n}\r\n\r\n\r\n/// @param {Map} $theme - The theme used to style the component.\r\n@mixin button-group($theme) {\r\n    @include css-vars($theme);\r\n    $group-item-min-width: rem(24px);\r\n    $group-item-border-thickness: rem(1px);\r\n    $group-items-margin: rem(10px, 16px);\r\n    $transition: all 140ms $in-out-quad;\r\n\r\n    $variant: map.get($theme, '_meta', 'variant');\r\n    $bootstrap-theme: $variant == 'bootstrap';\r\n    $indigo-theme: $variant == 'indigo-design';\r\n\r\n    %igx-group-display {\r\n        display: flex;\r\n        box-shadow: var-get($theme, 'shadow');\r\n        transition: $transition;\r\n        border-radius: var-get($theme, 'border-radius');\r\n\r\n        button {\r\n            // The margin here is required to fix a bug in Safari #7858\r\n            margin-top: 0;\r\n            margin-inline-end: 0;\r\n            margin-bottom: 0;\r\n        }\r\n    }\r\n\r\n    %igx-group-item {\r\n        border: $group-item-border-thickness solid var-get($theme, 'item-border-color');\r\n        color: var-get($theme, 'item-text-color');\r\n        background: var-get($theme, 'item-background');\r\n        min-width: $group-item-min-width;\r\n        display: flex;\r\n        flex: 1 0 0%;\r\n        justify-content: center;\r\n        align-items: center;\r\n        text-decoration: none;\r\n        cursor: pointer;\r\n        user-select: none;\r\n        position: relative;\r\n        z-index: 0;\r\n        transition: $transition;\r\n\r\n        &[igxButton] {\r\n            border-radius: 0;\r\n            border-color: var-get($theme, 'item-border-color');\r\n\r\n            @if $bootstrap-theme {\r\n                margin: 0 !important;\r\n                border: none;\r\n            }\r\n        }\r\n\r\n        &:not(:nth-child(0)) {\r\n            margin-inline-start: rem(-1px);\r\n        }\r\n\r\n        &:first-of-type {\r\n            border-start-start-radius: var-get($theme, 'border-radius');\r\n            border-end-start-radius: var-get($theme, 'border-radius');\r\n        }\r\n\r\n        &:last-of-type {\r\n            border-start-end-radius: var-get($theme, 'border-radius');\r\n            border-end-end-radius: var-get($theme, 'border-radius');\r\n        }\r\n\r\n        &[igxButton][disabled='true'] {\r\n            color: var-get($theme, 'disabled-text-color');\r\n            background: var-get($theme, 'disabled-background-color');\r\n            border-color: var-get($theme, 'item-disabled-border');\r\n        }\r\n\r\n        &:hover,\r\n        &:focus {\r\n            color: var-get($theme, 'item-hover-text-color');\r\n            background: var-get($theme, 'item-hover-background');\r\n        }\r\n\r\n        &:focus {\r\n            @if $bootstrap-theme or $indigo-theme {\r\n                box-shadow: 0 0 0 rem(3px) var-get($theme, 'idle-shadow-color');\r\n            }\r\n\r\n            @if $indigo-theme {\r\n                z-index: 2;\r\n            }\r\n        }\r\n    }\r\n\r\n    %igx-group-item-vertical {\r\n        &:not(:nth-child(0)) {\r\n            margin-top: rem(-1px);\r\n            margin-inline-start: 0;\r\n        }\r\n\r\n        &:first-of-type {\r\n            border-start-start-radius: var-get($theme, 'border-radius');\r\n            border-start-end-radius: var-get($theme, 'border-radius');\r\n            border-end-start-radius: 0;\r\n            border-end-end-radius: 0;\r\n        }\r\n\r\n        &:last-of-type {\r\n            border-start-start-radius: 0;\r\n            border-start-end-radius: 0;\r\n            border-end-start-radius: var-get($theme, 'border-radius');\r\n            border-end-end-radius: var-get($theme, 'border-radius');\r\n        }\r\n    }\r\n\r\n    %igx-group-item-selected {\r\n        color: var-get($theme, 'item-selected-text-color');\r\n        background: var-get($theme, 'item-selected-background');\r\n        border-color: var-get($theme, 'item-selected-border-color');\r\n        position: relative;\r\n        z-index: 1;\r\n\r\n        &:hover,\r\n        &:focus {\r\n            color: var-get($theme, 'item-selected-text-color');\r\n            background: var-get($theme, 'item-selected-hover-background');\r\n        }\r\n\r\n        &:focus {\r\n            z-index: 3;\r\n        }\r\n\r\n        @if $indigo-theme {\r\n            &:focus {\r\n                box-shadow: 0 0 0 rem(3px) var-get($theme, 'selected-shadow-color');\r\n            }\r\n        }\r\n\r\n        &[igxButton] {\r\n            border-color: var-get($theme, 'item-selected-border-color');\r\n        }\r\n\r\n        &[igxButton][disabled='true'] {\r\n            position: relative;\r\n\r\n            &::before {\r\n                position: absolute;\r\n                content: '';\r\n                top: 0;\r\n                bottom: 0;\r\n                inset-inline-end: 0;\r\n                inset-inline-start: 0;\r\n                background: color($color: 'gray', $variant: 500, $opacity: .12);\r\n            }\r\n        }\r\n    }\r\n\r\n    %igx-group-vertical {\r\n        flex-flow: column;\r\n    }\r\n\r\n    %igx-group-item-content {\r\n        display: flex;\r\n        align-items: center;\r\n        flex-flow: row nowrap;\r\n        min-width: 0;\r\n\r\n        * ~ * {\r\n            margin-inline-start: $group-items-margin;\r\n        }\r\n    }\r\n\r\n    %igx-button-group__button-text {\r\n        width: 100%;\r\n        @include ellipsis();\r\n    }\r\n}\r\n","/* stylelint-disable keyframes-name-pattern */\n@use 'sass:list';\n@use 'sass:map';\n@use 'sass:string';\n\n////\n/// @package theming\n/// @group animations\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n////\n\n$keyframes: () !default;\n\n/// Registers a keyframes animation in the keyframes registry.\n/// @param {String} $name - The name of the keyframes animation.\n@mixin keyframes($name) {\n    $keyframe: map.has-key($keyframes, $name);\n\n    @if not($keyframe) {\n        $keyframe: string.unique-id();\n        $keyframes: map.merge($keyframes, (#{$name}: $keyframe)) !global;\n\n        @at-root {\n            @keyframes #{$name} {\n                @content;\n            }\n        }\n    }\n}\n\n/// Animates an element.\n/// @param {List} $animate - The list of animation properties.\n/// @example scss - Animating an element\n///  @include fade-in(); // include the 'fade-in' keyframes animation mixin\n///\n///  .bozo {\n///     @include animation('fade-in' .3s ease-out);\n///  }\n@mixin animation($animate...) {\n    $max: list.length($animate);\n    $animations: '';\n\n    @for $i from 1 through $max {\n        $animations: #{$animations + list.nth($animate, $i)};\n\n        @if $i < $max {\n            $animations: #{$animations + ', '};\n        }\n    }\n\n    animation: #{$animations};\n}\n","@use '../mixins' as *;\n\n////\n/// @package theming\n/// @group animations\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n////\n\n/// @requires {mixin} keyframes\n@mixin scale-in-center {\n    @include keyframes(scale-in-center) {\n        0% {\n            transform: scale(0);\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(1);\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-in-bl {\n    @include keyframes(scale-in-bl) {\n        0% {\n            transform: scale(0);\n            transform-origin: 0% 100%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(1);\n            transform-origin: 0% 100%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-in-ver-center {\n    @include keyframes(scale-in-ver-center) {\n        0% {\n            transform: scaleY(0);\n            opacity: 1;\n        }\n\n        100% {\n            transform: scaleY(1);\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-in-top {\n    @include keyframes(scale-in-top) {\n        0% {\n            transform: scale(0);\n            transform-origin: 50% 0%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(1);\n            transform-origin: 50% 0%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-in-left {\n    @include keyframes(scale-in-left) {\n        0% {\n            transform: scale(0);\n            transform-origin: 0% 50%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(1);\n            transform-origin: 0% 50%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-in-ver-top {\n    @include keyframes(scale-in-ver-top) {\n        0% {\n            transform: scaleY(0);\n            transform-origin: 100% 0%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scaleY(1);\n            transform-origin: 100% 0%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-in-tr {\n    @include keyframes(scale-in-tr) {\n        0% {\n            transform: scale(0);\n            transform-origin: 100% 0%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(1);\n            transform-origin: 100% 0%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-in-tl {\n    @include keyframes(scale-in-tl) {\n        0% {\n            transform: scale(0);\n            transform-origin: 0% 0%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(1);\n            transform-origin: 0% 0%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-in-ver-bottom {\n    @include keyframes(scale-in-ver-bottom) {\n        0% {\n            transform: scaleY(0);\n            transform-origin: 0% 100%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scaleY(1);\n            transform-origin: 0% 100%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-in-right {\n    @include keyframes(scale-in-right) {\n        0% {\n            transform: scale(0);\n            transform-origin: 100% 50%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(1);\n            transform-origin: 100% 50%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-in-hor-center {\n    @include keyframes(scale-in-hor-center) {\n        0% {\n            transform: scaleX(0);\n            opacity: 1;\n        }\n\n        100% {\n            transform: scaleX(1);\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-in-br {\n    @include keyframes(scale-in-br) {\n        0% {\n            transform: scale(0);\n            transform-origin: 100% 100%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(1);\n            transform-origin: 100% 100%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-in-hor-left {\n    @include keyframes(scale-in-hor-left) {\n        0% {\n            transform: scaleX(0);\n            transform-origin: 0% 0%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scaleX(1);\n            transform-origin: 0% 0%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-in-bottom {\n    @include keyframes(scale-in-bottom) {\n        0% {\n            transform: scale(0);\n            transform-origin: 50% 100%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(1);\n            transform-origin: 50% 100%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-in-hor-right {\n    @include keyframes(scale-in-hor-right) {\n        0% {\n            transform: scaleX(0);\n            transform-origin: 100% 100%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scaleX(1);\n            transform-origin: 100% 100%;\n            opacity: 1;\n        }\n    }\n}\n","@use '../mixins' as *;\n\n////\n/// @package theming\n/// @group animations\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n////\n\n/// @requires {mixin} keyframes\n@mixin scale-out-center {\n    @include keyframes(scale-out-center) {\n        0% {\n            transform: scale(1);\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(0);\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-out-bl {\n    @include keyframes(scale-out-bl) {\n        0% {\n            transform: scale(1);\n            transform-origin: 0% 100%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(0);\n            transform-origin: 0% 100%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-out-vertical {\n    @include keyframes(scale-out-vertical) {\n        0% {\n            transform: scaleY(1);\n            opacity: 1;\n        }\n\n        100% {\n            transform: scaleY(0);\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-out-top {\n    @include keyframes(scale-out-top) {\n        0% {\n            transform: scale(1);\n            transform-origin: 50% 0%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(0);\n            transform-origin: 50% 0%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-out-left {\n    @include keyframes(scale-out-left) {\n        0% {\n            transform: scale(1);\n            transform-origin: 0% 50%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(0);\n            transform-origin: 0% 50%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-out-ver-top {\n    @include keyframes(scale-out-ver-top) {\n        0% {\n            transform: scaleY(1);\n            transform-origin: 100% 0%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scaleY(0);\n            transform-origin: 100% 0%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-out-tr {\n    @include keyframes(scale-out-tr) {\n        0% {\n            transform: scale(1);\n            transform-origin: 100% 0%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(0);\n            transform-origin: 100% 0%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-out-tl {\n    @include keyframes(scale-out-tl) {\n        0% {\n            transform: scale(1);\n            transform-origin: 0 0;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(0);\n            transform-origin: 0 0;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-out-ver-bottom {\n    @include keyframes(scale-out-ver-bottom) {\n        0% {\n            transform: scaleY(1);\n            transform-origin: 0% 100%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scaleY(0);\n            transform-origin: 0% 100%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-out-right {\n    @include keyframes(scale-out-right) {\n        0% {\n            transform: scale(1);\n            transform-origin: 100% 50%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(0);\n            transform-origin: 100% 50%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-out-horizontal {\n    @include keyframes(scale-out-horizontal) {\n        0% {\n            transform: scaleX(1);\n            opacity: 1;\n        }\n\n        100% {\n            transform: scaleX(0);\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-out-br {\n    @include keyframes(scale-out-br) {\n        0% {\n            transform: scale(1);\n            transform-origin: 100% 100%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(0);\n            transform-origin: 100% 100%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-out-hor-left {\n    @include keyframes(scale-out-hor-left) {\n        0% {\n            transform: scaleX(1);\n            transform-origin: 0 0;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scaleX(0);\n            transform-origin: 0 0;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-out-bottom {\n    @include keyframes(scale-out-bottom) {\n        0% {\n            transform: scale(1);\n            transform-origin: 50% 100%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(0);\n            transform-origin: 50% 100%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-out-hor-right {\n    @include keyframes(scale-out-hor-right) {\n        0% {\n            transform: scaleX(1);\n            transform-origin: 100% 100%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scaleX(0);\n            transform-origin: 100% 100%;\n            opacity: 1;\n        }\n    }\n}\n","@use 'sass:map';\r\n@use 'sass:meta';\r\n@use '../../base' as *;\r\n@use '../../themes/schemas' as *;\r\n@use 'igniteui-theming/sass/animations' as *;\r\n\r\n////\r\n/// @group themes\r\n/// @access public\r\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\r\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\r\n////\r\n\r\n/// @param {Map} $schema [$light-material-schema] - The schema used as basis for styling the component.\r\n/// @param {Map} $elevations [null] - The elevations (shadows) map to be used.\r\n/// @param {Color} $slide-background [null] - The slide background color.\r\n/// @param {Color} $button-background [null] - The previous/next buttons idle background color.\r\n/// @param {Color} $button-hover-background [null] - The previous/next buttons hover background color.\r\n/// @param {Color} $button-disabled-background [null] - The previous/next buttons disabled background color.\r\n/// @param {Color} $button-arrow-color [null] - The previous/next buttons idle arrow color.\r\n/// @param {Color} $button-hover-arrow-color [null] - The previous/next buttons hover arrow color.\r\n/// @param {Color} $button-disabled-arrow-color [null] - The previous/next buttons disabled arrow color.\r\n/// @param {Color} $indicator-dot-color [null] - The idle indicator dot color.\r\n/// @param {Color} $indicator-border-color [null] - The idle indicator border color.\r\n/// @param {Color} $indicator-active-dot-color [null] - The active indicator dot color.\r\n/// @param {Color} $indicator-active-border-color [null] - The active indicator border color.\r\n/// @param {box-shadow} $button-shadow [null] - Shadow underneath the previous/next buttons.\r\n///\r\n/// @param {List} $border-radius [null] - The border radius used for carousel component.\r\n///\r\n/// @requires $light-material-schema\r\n///\r\n/// @example scss Change the previous/next button colors\r\n///   $my-carousel-theme: carousel-theme(\r\n///     $button-background: black,\r\n///     $button-hover-background: white\r\n///   );\r\n///   // Pass the carousel theme to the css-vars() mixin\r\n///   @include css-vars($my-carousel-theme);\r\n@function carousel-theme(\r\n    $schema: $light-material-schema,\r\n    $elevations: null,\r\n\r\n    $border-radius: null,\r\n    $button-shadow: null,\r\n\r\n    $slide-background: null,\r\n\r\n    $button-background: null,\r\n    $button-hover-background: null,\r\n    $button-disabled-background: null,\r\n    $button-arrow-color: null,\r\n    $button-hover-arrow-color: null,\r\n    $button-disabled-arrow-color: null,\r\n\r\n    $indicator-dot-color: null,\r\n    $indicator-border-color: null,\r\n    $indicator-active-dot-color: null,\r\n    $indicator-active-border-color: null,\r\n){\r\n    $name: 'igx-carousel';\r\n    $carousel-schema: ();\r\n\r\n    @if map.has-key($schema, 'carousel') {\r\n        $carousel-schema: map.get($schema, 'carousel');\r\n    } @else {\r\n        $carousel-schema: $schema;\r\n    }\r\n\r\n    $theme: digest-schema($carousel-schema);\r\n    $meta: map.get($theme, '_meta');\r\n\r\n    @if not($button-shadow) {\r\n        $button-elevation: map.get($carousel-schema, 'button-elevation');\r\n        $button-shadow: elevation($button-elevation);\r\n    }\r\n\r\n    @if not($button-arrow-color) and $button-background {\r\n        $button-arrow-color: text-contrast($button-background);\r\n    }\r\n\r\n    @if not($button-hover-arrow-color) and $button-hover-background {\r\n        $button-hover-arrow-color: text-contrast($button-hover-background);\r\n    }\r\n\r\n    @if not($button-disabled-arrow-color) and $button-disabled-background {\r\n        @if meta.type-of($button-disabled-background) == 'color' {\r\n            $button-disabled-arrow-color: rgba(text-contrast($button-disabled-background), .3);\r\n        }\r\n    }\r\n\r\n    @if not($border-radius){\r\n        $border-radius: border-radius(map.get($theme, 'border-radius')...);\r\n    }\r\n\r\n    @return extend($theme, (\r\n        name: $name,\r\n\r\n        slide-background: $slide-background,\r\n\r\n        border-radius: $border-radius,\r\n        button-shadow: $button-shadow,\r\n\r\n        button-background: $button-background,\r\n        button-disabled-background: $button-disabled-background,\r\n        button-hover-background: $button-hover-background,\r\n        button-arrow-color: $button-arrow-color,\r\n        button-hover-arrow-color: $button-hover-arrow-color,\r\n        button-disabled-arrow-color: $button-disabled-arrow-color,\r\n\r\n        indicator-dot-color: $indicator-dot-color,\r\n        indicator-border-color: $indicator-border-color,\r\n        indicator-active-dot-color: $indicator-active-dot-color,\r\n        indicator-active-border-color: $indicator-active-border-color,\r\n        _meta: map.merge(if($meta, $meta, ()), (\r\n            variant: map.get($schema, '_meta', 'theme')\r\n        )),\r\n    ));\r\n}\r\n\r\n/// @param {Map} $theme - The theme used to style the component.\r\n@mixin carousel($theme) {\r\n    @include css-vars($theme);\r\n    @include scale-in-center();\r\n    @include scale-out-center();\r\n\r\n    $carousel-arrow-margin: 0 rem(16px);\r\n    $carousel-indicators-margin: rem(16px) 0;\r\n    $carousel-indicators-padding: 0;\r\n    $carousel-indicator-margin: 0 rem(5px);\r\n    $indicator-border-style: rem(2px) solid;\r\n\r\n    $variant: map.get($theme, '_meta', 'variant');\r\n    $not-bootstrap-theme: $variant != 'bootstrap';\r\n\r\n    %igx-carousel-display {\r\n        display: flex;\r\n        position: relative;\r\n        justify-content: center;\r\n        width: 100%;\r\n        height: 100%;\r\n        align-items: center;\r\n        flex-flow: column nowrap;\r\n    }\r\n\r\n    %igx-nav-arrow {\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        width: rem(46px);\r\n        height: rem(46px);\r\n        cursor: pointer;\r\n        @if $not-bootstrap-theme {\r\n            border-radius: border-radius(50%);\r\n        } @else {\r\n            border-radius: var-get($theme, 'border-radius');\r\n        }\r\n\r\n        outline-style: none;\r\n        transition: all .15s ease-in-out;\r\n        color: var-get($theme, 'button-arrow-color');\r\n        background: var-get($theme, 'button-background');\r\n        box-shadow: var-get($theme, 'button-shadow');\r\n    }\r\n\r\n    %igx-nav-arrow--disabled {\r\n        background: var-get($theme, 'button-disabled-background');\r\n        color: var-get($theme, 'button-disabled-arrow-color');\r\n        pointer-events: none;\r\n        box-shadow: none;\r\n\r\n        igx-icon {\r\n            color: currentColor;\r\n        }\r\n    }\r\n\r\n    %igx-nav-arrow--hover {\r\n        color: var-get($theme, 'button-hover-arrow-color');\r\n        background: var-get($theme, 'button-hover-background');\r\n    }\r\n\r\n    %igx-carousel-arrow {\r\n        margin: $carousel-arrow-margin;\r\n        position: absolute;\r\n        top: 50%;\r\n        transform: translateY(-50%);\r\n        z-index: 3;\r\n        outline: none;\r\n        user-select: none;\r\n    }\r\n\r\n    %igx-carousel-arrow--next {\r\n        inset-inline-end: 0;\r\n    }\r\n\r\n    %igx-carousel-arrow--prev {\r\n        inset-inline-start: 0;\r\n    }\r\n\r\n    %igx-carousel-arrow--next,\r\n    %igx-carousel-arrow--prev {\r\n        [dir='rtl'] & {\r\n            transform: scaleX(-1);\r\n        }\r\n    }\r\n\r\n    %igx-carousel-indicators {\r\n        position: absolute;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        margin: $carousel-indicators-margin;\r\n        padding: $carousel-indicators-padding;\r\n        list-style: none;\r\n        z-index: 10;\r\n        inset-inline-start: 50%;\r\n        transform: translateX(-50%);\r\n\r\n        [dir='rtl'] & {\r\n            transform: translateX(50%);\r\n        }\r\n    }\r\n\r\n    %igx-carousel-indicators--bottom {\r\n        bottom: 0;\r\n    }\r\n\r\n    %igx-carousel-indicators--top {\r\n        top: 0;\r\n    }\r\n\r\n    %igx-carousel-indicators-label {\r\n        align-items: center;\r\n        // TODO: this should be wrapped in carousel typogrpahy\r\n        font-size: rem(16px);\r\n    }\r\n\r\n    %igx-carousel-indicator {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        margin: $carousel-indicator-margin;\r\n        cursor: pointer;\r\n    }\r\n\r\n    %igx-nav-dot {\r\n        position: relative;\r\n        width: rem(12px);\r\n        height: rem(12px);\r\n        text-indent: rem(-9999px);\r\n\r\n        @if $variant != 'indigo-design' {\r\n            border: $indicator-border-style;\r\n            border-color: var-get($theme, 'indicator-border-color');\r\n            box-shadow: elevation(1);\r\n            opacity: .7;\r\n        }\r\n\r\n        border-radius: border-radius(50%);\r\n        transition: all .15s $ease-out-quad;\r\n\r\n        &::after {\r\n            @if $variant != 'indigo-design' {\r\n                @include animation('scale-out-center' .15s $ease-out-quad forwards);\r\n            }\r\n            content: '';\r\n            position: absolute;\r\n            @if $variant != 'indigo-design' {\r\n                inset: rem(1px);\r\n            } @else {\r\n                inset: 0;\r\n            }\r\n            border-radius: inherit;\r\n            background: var-get($theme, 'indicator-dot-color');\r\n        }\r\n\r\n        &:hover {\r\n            opacity: 1;\r\n        }\r\n    }\r\n\r\n    %igx-nav-dot--active {\r\n        @if $variant != 'indigo-design' {\r\n            border: $indicator-border-style;\r\n            border-color: var-get($theme, 'indicator-active-border-color');\r\n        }\r\n\r\n        opacity: 1;\r\n\r\n        &::after {\r\n            background: var-get($theme, 'indicator-active-dot-color');\r\n            @if $variant != 'indigo-design' {\r\n                @include animation('scale-in-center' .15s $ease-out-quad forwards);\r\n            }\r\n        }\r\n    }\r\n\r\n    %igx-carousel-slide-wrapper {\r\n        position: relative;\r\n        width: 100%;\r\n        height: inherit;\r\n        overflow: hidden;\r\n        outline-style: none;\r\n        border-radius: var-get($theme, 'border-radius');\r\n        min-height: rem(300px);\r\n        min-width: rem(300px);\r\n    }\r\n\r\n    %igx-carousel-slide {\r\n        position: absolute;\r\n        width: 100%;\r\n        height: 100%;\r\n        inset: 0;\r\n        z-index: -1;\r\n        background: var-get($theme, 'slide-background');\r\n        visibility: hidden;\r\n    }\r\n\r\n    %igx-carousel-slide--previous {\r\n        z-index: 1;\r\n        visibility: visible;\r\n    }\r\n\r\n    %igx-carousel-slide--current {\r\n        z-index: 2;\r\n        visibility: visible;\r\n    }\r\n\r\n    %igx-carousel-slide img {\r\n        width: inherit;\r\n        height: inherit;\r\n        object-fit: cover;\r\n        touch-action: none;\r\n        pointer-events: none;\r\n    }\r\n}\r\n","@use 'sass:map';\r\n@use '../../base' as *;\r\n@use '../../themes/schemas' as *;\r\n@use 'igniteui-theming/sass/animations/easings' as *;\r\n\r\n////\r\n/// @group themes\r\n/// @access public\r\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\r\n///\r\n/// @param {Map} $schema [$light-material-schema] - The schema used as basis for styling the component.\r\n/// @param {Map} $elevations [null] - The elevations (shadows) map to be used.\r\n///\r\n/// @param {Color} $bar-color [null] - The background color of the bar.\r\n/// @param {Color} $handle-color [null] - The color for the bar drag handle.\r\n/// @param {Color} $expander-color [null] - The color for the arrow expander's.\r\n/// @param {List} $border-radius [null] - the border radios of the splitter bar drag handle\r\n/// @param {Color} $focus-color [null] - The color used for focused splitter bar.\r\n/// @param {Number} $size [null] - The size of the splitter, its width for vertical and height for horizontal splitter.\r\n/// @requires $light-material-schema\r\n/// @example scss Set a custom expander color\r\n///   $my-splitter-theme: splitter-theme($expander-color: red);\r\n///   // Pass the theme to the css-vars() mixin\r\n///   @include css-vars($my-splitter-them);\r\n@function splitter-theme(\r\n    $schema: $light-material-schema,\r\n    $elevations: null,\r\n\r\n    $bar-color: null,\r\n    $handle-color: null,\r\n    $expander-color: null,\r\n    $border-radius: null,\r\n    $focus-color: null,\r\n    $size: null\r\n) {\r\n    $name: 'igx-splitter';\r\n    $splitter-schema: ();\r\n\r\n    @if map.has-key($schema, 'splitter') {\r\n        $splitter-schema: map.get($schema, 'splitter');\r\n    } @else {\r\n        $splitter-schema: $schema;\r\n    }\r\n\r\n    $theme: digest-schema($splitter-schema);\r\n    $meta: map.get($theme, '_meta');\r\n\r\n    @if not($handle-color) and $bar-color {\r\n        $handle-color: text-contrast($bar-color);\r\n    }\r\n\r\n    @if not($expander-color) and $bar-color {\r\n        $expander-color: text-contrast($bar-color);\r\n    }\r\n\r\n    @if not($border-radius) {\r\n        $border-radius: border-radius(map.get($theme, 'border-radius')...);\r\n    }\r\n\r\n    @return extend($theme, (\r\n        name: $name,\r\n        bar-color: $bar-color,\r\n        handle-color: $handle-color,\r\n        expander-color: $expander-color,\r\n        border-radius: $border-radius,\r\n        focus-color: $focus-color,\r\n        size: $size,\r\n        _meta: map.merge(if($meta, $meta, ()), (\r\n            variant: map.get($schema, '_meta', 'theme')\r\n        )),\r\n    ));\r\n}\r\n\r\n/// @param {Map} $theme - The theme used to style the component.\r\n@mixin splitter($theme) {\r\n    @include css-vars($theme);\r\n    $splitter-color: var-get($theme, 'bar-color');\r\n    $hitbox-size: rem(4px);\r\n    $debug-hitbox: false;\r\n    $hitbox-debug-color: rgba(coral, .24);\r\n\r\n    $variant: map.get($theme, '_meta', 'variant');\r\n\r\n    %igx-splitter-base {\r\n        &[aria-orientation='horizontal'] {\r\n            [dir='rtl'] & {\r\n                flex-direction: row-reverse !important;\r\n            }\r\n        }\r\n    }\r\n\r\n    %handle-area {\r\n        position: absolute;\r\n        content: '';\r\n        width: 100%;\r\n        height: $hitbox-size;\r\n        background: if($debug-hitbox, $hitbox-debug-color, transparent);\r\n    }\r\n\r\n    %handle-area--vertical {\r\n        width: $hitbox-size;\r\n        height: 100%;\r\n    }\r\n\r\n    %igx-splitter-bar {\r\n        position: relative;\r\n        display: flex;\r\n        flex-grow: 1;\r\n        justify-content: center;\r\n        align-items: center;\r\n        background: $splitter-color;\r\n        border: rem(1px) solid $splitter-color;\r\n        z-index: 99;\r\n        opacity: .68;\r\n        transition: opacity .15s $out-quad !important;\r\n\r\n        &::before {\r\n            @extend %handle-area;\r\n            top: 100%;\r\n        }\r\n\r\n        &::after {\r\n            @extend %handle-area;\r\n            bottom: 100%;\r\n        }\r\n\r\n        &:hover {\r\n            transition: all .25s ease-out;\r\n            opacity: 1;\r\n        }\r\n    }\r\n\r\n    %igx-splitter-bar--focus {\r\n        // Remove the default browser outline styles\r\n        outline: transparent solid rem(1px);\r\n        box-shadow: inset 0 0 0 rem(1px) var-get($theme, 'focus-color');\r\n\r\n        @if $variant == 'indigo-design' {\r\n            background: var-get($theme, 'focus-color');\r\n        }\r\n    }\r\n\r\n    %igx-splitter-bar--vertical {\r\n        flex-direction: column;\r\n        height: 100%;\r\n\r\n        &::before {\r\n            @extend %handle-area--vertical;\r\n            top: 0;\r\n            right: 100%;\r\n        }\r\n\r\n        &::after {\r\n            @extend %handle-area--vertical;\r\n            top: 0;\r\n            left: 100%;\r\n        }\r\n    }\r\n\r\n    %igx-splitter-handle {\r\n        background: var-get($theme, 'handle-color');\r\n        border-radius: var-get($theme, 'border-radius');\r\n    }\r\n\r\n    %igx-splitter-handle--horizontal {\r\n        width: 25%;\r\n        height: var-get($theme, 'size');\r\n        margin: 0 rem(48px);\r\n    }\r\n\r\n    %igx-splitter-handle--vertical {\r\n        width: var-get($theme, 'size');\r\n        height: 25%;\r\n        margin: rem(48px) 0;\r\n    }\r\n\r\n    %igx-splitter-hitbox {\r\n        position: absolute;\r\n        content: '';\r\n        background: if($debug-hitbox, $hitbox-debug-color, transparent);\r\n    }\r\n\r\n    %igx-splitter-expander {\r\n        position: relative;\r\n        width: 0;\r\n        height: 0;\r\n        border-inline-end: var-get($theme, 'size') solid transparent;\r\n        border-inline-start: var-get($theme, 'size') solid transparent;\r\n        cursor: pointer;\r\n        z-index: 1;\r\n    }\r\n\r\n    %igx-splitter-expander--start {\r\n        border-bottom: var-get($theme, 'size') solid var-get($theme, 'expander-color');\r\n\r\n        &::before {\r\n            @extend %igx-splitter-hitbox;\r\n            top: calc(100% - #{map.get($theme, 'size')});\r\n            left: calc(100% - (#{map.get($theme, 'size')} * 2));\r\n            width: calc(#{map.get($theme, 'size')} * 4);\r\n            height: calc(#{map.get($theme, 'size')} * 3);\r\n        }\r\n    }\r\n\r\n    %igx-splitter-expander--end {\r\n        border-bottom: unset;\r\n        border-top: var-get($theme, 'size') solid var-get($theme, 'expander-color');\r\n\r\n        &::before {\r\n            @extend %igx-splitter-hitbox;\r\n            top: calc(100% - (#{map.get($theme, 'size')} * 2));\r\n            left: calc(100% - (#{map.get($theme, 'size')} * 2));\r\n            width: calc(#{map.get($theme, 'size')} * 4);\r\n            height: calc(#{map.get($theme, 'size')} * 3);\r\n        }\r\n    }\r\n\r\n    %igx-splitter-expander--start-vertical {\r\n        border-top: var-get($theme, 'size') solid transparent;\r\n        border-inline-end: var-get($theme, 'size') solid var-get($theme, 'expander-color');\r\n        border-bottom: var-get($theme, 'size') solid transparent;\r\n        border-inline-start: unset;\r\n\r\n        &::before {\r\n            @extend %igx-splitter-hitbox;\r\n            top: calc(100% - (#{map.get($theme, 'size')} * 2));\r\n            left: calc(100% - (#{map.get($theme, 'size')} * 2));\r\n            width: calc(#{map.get($theme, 'size')} * 3);\r\n            height: calc(#{map.get($theme, 'size')} * 4);\r\n        }\r\n    }\r\n\r\n    %igx-splitter-expander--end-vertical {\r\n        border-top: var-get($theme, 'size') solid transparent;\r\n        border-inline-end: unset;\r\n        border-bottom: var-get($theme, 'size') solid transparent;\r\n        border-inline-start: var-get($theme, 'size') solid var-get($theme, 'expander-color');\r\n\r\n        &::before {\r\n            @extend %igx-splitter-hitbox;\r\n            left: calc(100% - (#{map.get($theme, 'size')} * 2));\r\n            top: calc(100% - (#{map.get($theme, 'size')} * 2));\r\n            height: calc(#{map.get($theme, 'size')} * 4);\r\n            width: calc(#{map.get($theme, 'size')} * 3);\r\n        }\r\n    }\r\n}\r\n","@use '../mixins' as *;\n\n////\n/// @package theming\n/// @group animations\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n////\n\n/// @requires {mixin} keyframes\n@mixin scale-up-center {\n    @include keyframes(scale-up-center) {\n        0% {\n            transform: scale(0.5);\n        }\n\n        100% {\n            transform: scale(1);\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-up-bl {\n    @include keyframes(scale-up-bl) {\n        0% {\n            transform: scale(0.5);\n            transform-origin: 0% 100%;\n        }\n\n        100% {\n            transform: scale(1);\n            transform-origin: 0% 100%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-up-ver-center {\n    @include keyframes(scale-up-ver-center) {\n        0% {\n            transform: scaleY(0.4);\n        }\n\n        100% {\n            transform: scaleY(1);\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-up-top {\n    @include keyframes(scale-up-top) {\n        0% {\n            transform: scale(0.5);\n            transform-origin: 50% 0%;\n        }\n\n        100% {\n            transform: scale(1);\n            transform-origin: 50% 0%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-up-left {\n    @include keyframes(scale-up-left) {\n        0% {\n            transform: scale(0.5);\n            transform-origin: 0% 50%;\n        }\n\n        100% {\n            transform: scale(1);\n            transform-origin: 0% 50%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-up-ver-top {\n    @include keyframes(scale-up-ver-top) {\n        0% {\n            transform: scaleY(0.4);\n            transform-origin: 100% 0%;\n        }\n\n        100% {\n            transform: scaleY(1);\n            transform-origin: 100% 0%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-up-tr {\n    @include keyframes(scale-up-tr) {\n        0% {\n            transform: scale(0.5);\n            transform-origin: 100% 0%;\n        }\n\n        100% {\n            transform: scale(1);\n            transform-origin: 100% 0%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-up-tl {\n    @include keyframes(scale-up-tl) {\n        0% {\n            transform: scale(0.5);\n            transform-origin: 0% 0%;\n        }\n\n        100% {\n            transform: scale(1);\n            transform-origin: 0% 0%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-up-ver-bottom {\n    @include keyframes(scale-up-ver-bottom) {\n        0% {\n            transform: scaleY(0.4);\n            transform-origin: 0% 100%;\n        }\n\n        100% {\n            transform: scaleY(1);\n            transform-origin: 0% 100%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-up-right {\n    @include keyframes(scale-up-right) {\n        0% {\n            transform: scale(0.5);\n            transform-origin: 100% 50%;\n        }\n\n        100% {\n            transform: scale(1);\n            transform-origin: 100% 50%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-up-hor-center {\n    @include keyframes(scale-up-hor-center) {\n        0% {\n            transform: scaleX(0.4);\n        }\n\n        100% {\n            transform: scaleX(1);\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-up-br {\n    @include keyframes(scale-up-br) {\n        0% {\n            transform: scale(0.5);\n            transform-origin: 100% 100%;\n        }\n\n        100% {\n            transform: scale(1);\n            transform-origin: 100% 100%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-up-hor-left {\n    @include keyframes(scale-up-hor-left) {\n        0% {\n            transform: scaleX(0.4);\n            transform-origin: 0% 0%;\n        }\n\n        100% {\n            transform: scaleX(1);\n            transform-origin: 0% 0%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-up-bottom {\n    @include keyframes(scale-up-bottom) {\n        0% {\n            transform: scale(0.5);\n            transform-origin: 50% 100%;\n        }\n\n        100% {\n            transform: scale(1);\n            transform-origin: 50% 100%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-up-hor-right {\n    @include keyframes(scale-up-hor-right) {\n        0% {\n            transform: scaleX(0.4);\n            transform-origin: 100% 100%;\n        }\n\n        100% {\n            transform: scaleX(1);\n            transform-origin: 100% 100%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-down-center {\n    @include keyframes(scale-down-center) {\n        0% {\n            transform: scale(1);\n        }\n\n        100% {\n            transform: scale(0.5);\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-down-bl {\n    @include keyframes(scale-down-bl) {\n        0% {\n            transform: scale(1);\n            transform-origin: 0% 100%;\n        }\n\n        100% {\n            transform: scale(0.5);\n            transform-origin: 0% 100%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-down-ver-center {\n    @include keyframes(scale-down-ver-center) {\n        0% {\n            transform: scaleY(1);\n        }\n\n        100% {\n            transform: scaleY(0.3);\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-down-top {\n    @include keyframes(scale-down-top) {\n        0% {\n            transform: scale(1);\n            transform-origin: 50% 0%;\n        }\n\n        100% {\n            transform: scale(0.5);\n            transform-origin: 50% 0%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-down-left {\n    @include keyframes(scale-down-left) {\n        0% {\n            transform: scale(1);\n            transform-origin: 0% 50%;\n        }\n\n        100% {\n            transform: scale(0.5);\n            transform-origin: 0% 50%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-down-ver-top {\n    @include keyframes(scale-down-ver-top) {\n        0% {\n            transform: scaleY(1);\n            transform-origin: 100% 0%;\n        }\n\n        100% {\n            transform: scaleY(0.3);\n            transform-origin: 100% 0%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-down-tr {\n    @include keyframes(scale-down-tr) {\n        0% {\n            transform: scale(1);\n            transform-origin: 100% 0%;\n        }\n\n        100% {\n            transform: scale(0.5);\n            transform-origin: 100% 0%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-down-tl {\n    @include keyframes(scale-down-tl) {\n        0% {\n            transform: scale(1);\n            transform-origin: 0% 0%;\n        }\n\n        100% {\n            transform: scale(0.5);\n            transform-origin: 0% 0%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-down-ver-top-bottom {\n    @include keyframes(scale-down-ver-to-bottom) {\n        0% {\n            transform: scaleY(1);\n            transform-origin: 0% 100%;\n        }\n\n        100% {\n            transform: scaleY(0.3);\n            transform-origin: 0% 100%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-down-right {\n    @include keyframes(scale-down-right) {\n        0% {\n            transform: scale(1);\n            transform-origin: 100% 50%;\n        }\n\n        100% {\n            transform: scale(0.5);\n            transform-origin: 100% 50%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-down-hor-center {\n    @include keyframes(scale-down-hor-center) {\n        0% {\n            transform: scaleX(1);\n        }\n\n        100% {\n            transform: scaleX(0.3);\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-down-br {\n    @include keyframes(scale-down-br) {\n        0% {\n            transform: scale(1);\n            transform-origin: 100% 100%;\n        }\n\n        100% {\n            transform: scale(0.5);\n            transform-origin: 100% 100%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-down-hor-left {\n    @include keyframes(scale-down-hor-left) {\n        0% {\n            transform: scaleX(1);\n            transform-origin: 0% 0%;\n        }\n\n        100% {\n            transform: scaleX(0.3);\n            transform-origin: 0% 0%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-down-bottom {\n    @include keyframes(scale-down-bottom) {\n        0% {\n            transform: scale(1);\n            transform-origin: 50% 100%;\n        }\n\n        100% {\n            transform: scale(0.5);\n            transform-origin: 50% 100%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-down-hor-right {\n    @include keyframes(scale-down-hor-right) {\n        0% {\n            transform: scaleX(1);\n            transform-origin: 100% 100%;\n        }\n\n        100% {\n            transform: scaleX(0.3);\n            transform-origin: 100% 100%;\n        }\n    }\n}\n\n/// @param {number} $start-scale [.5] - The scale to start the animation from.\n/// @param {number} $end-scale [1] - The scale to end the animation at.\n/// @requires {mixin} keyframes\n@mixin scale-in-out($start-scale: 0.5, $end-scale: 1) {\n    @include keyframes(scale-in-out) {\n        50% {\n            transform: scale($start-scale);\n            transform-origin: 50% 50%;\n        }\n\n        100% {\n            transform: scale($end-scale);\n            transform-origin: 50% 50%;\n        }\n    }\n}\n","@use 'sass:map';\r\n@use '../../base' as *;\r\n@use '../../themes/schemas' as *;\r\n\r\n////\r\n/// @group themes\r\n/// @access public\r\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\r\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\r\n////\r\n\r\n/// @param {Map} $schema [$light-material-schema] - The schema used as basis for styling the component.\r\n/// @param {Color} $search-separator-border-color [null] - The combo search box separator color.\r\n/// @param {Color} $empty-list-placeholder-color [null] - The combo placeholder text color.\r\n/// @param {Color} $empty-list-background [null] - The combo list background color.\r\n/// @param {Color} $toggle-button-background [null] - The combo toggle button background color.\r\n/// @param {Color} $toggle-button-background-focus [null] - The combo toggle button background color when the combo is focused in material box variant.\r\n/// @param {Color} $toggle-button-background-focus--border [null] - The combo toggle button background color when the combo is focused in material border variant.\r\n/// @param {Color} $toggle-button-background-disabled [null] - The combo toggle button background color when the combo is disabled.\r\n/// @param {Color} $toggle-button-foreground [null] - The combo toggle button foreground color.\r\n/// @param {Color} $toggle-button-foreground-focus [null] - The combo toggle button foreground color when the combo is focused.\r\n/// @param {Color} $toggle-button-foreground-disabled [null] - The combo toggle button foreground color when the combo is disabled.\r\n/// @param {Color} $toggle-button-foreground-filled [null] - The combo toggle button foreground color when the combo is filled.\r\n/// @param {Color} $clear-button-background [null] - The combo clear button background color.\r\n/// @param {Color} $clear-button-background-focus [null] - The combo clear button background color when the combo is focused.\r\n/// @param {Color} $clear-button-foreground [null] - The combo clear button foreground color.\r\n/// @param {Color} $clear-button-foreground-focus [null] - The combo clear button foreground color when the combo is focused.\r\n/// @requires $light-material-schema\r\n/// @example scss Change the combo empty list background\r\n///   $my-combo-theme: igx-checkbox-theme($empty-list-background);\r\n///   // Pass the theme to the css-vars mixin\r\n///   @include css-vars($my-combo-theme);\r\n@function combo-theme(\r\n    $schema: $light-material-schema,\r\n    $search-separator-border-color: null,\r\n    $empty-list-placeholder-color: null,\r\n    $empty-list-background: null,\r\n    $toggle-button-background: null,\r\n    $toggle-button-background-focus: null,\r\n    $toggle-button-background-disabled: null,\r\n    $toggle-button-foreground: null,\r\n    $toggle-button-foreground-focus: null,\r\n    $toggle-button-foreground-disabled: null,\r\n    $toggle-button-background-focus--border: null,\r\n    $clear-button-background: null,\r\n    $clear-button-background-focus: null,\r\n    $clear-button-foreground: null,\r\n    $clear-button-foreground-focus: null,\r\n    $toggle-button-foreground-filled: null,\r\n) {\r\n    $name: 'igx-combo';\r\n    $selector: 'igx-combo, igx-simple-combo';\r\n\r\n    $combo-schema: ();\r\n\r\n    @if map.has-key($schema, 'combo') {\r\n        $combo-schema: map.get($schema, 'combo');\r\n    } @else {\r\n        $combo-schema: $schema;\r\n    }\r\n\r\n    $theme: digest-schema($combo-schema);\r\n    $meta: map.get($theme, '_meta');\r\n\r\n    @return extend($theme, (\r\n        name: $name,\r\n        selector: $selector,\r\n        search-separator-border-color: $search-separator-border-color,\r\n        empty-list-placeholder-color: $empty-list-placeholder-color,\r\n        empty-list-background: $empty-list-background,\r\n        toggle-button-background: $toggle-button-background,\r\n        toggle-button-background-focus: $toggle-button-background-focus,\r\n        toggle-button-background-disabled: $toggle-button-background-disabled,\r\n        toggle-button-foreground: $toggle-button-foreground,\r\n        toggle-button-foreground-focus: $toggle-button-foreground-focus,\r\n        toggle-button-foreground-disabled: $toggle-button-foreground-disabled,\r\n        toggle-button-foreground-filled: $toggle-button-foreground-filled,\r\n        toggle-button-background-focus--border: $toggle-button-background-focus--border,\r\n        clear-button-background: $clear-button-background,\r\n        clear-button-background-focus: $clear-button-background-focus,\r\n        clear-button-foreground: $clear-button-foreground,\r\n        clear-button-foreground-focus: $clear-button-foreground-focus,\r\n        _meta: map.merge(if($meta, $meta, ()), (\r\n            variant: map.get($schema, '_meta', 'theme')\r\n        )),\r\n    ));\r\n}\r\n\r\n/// @param {Map} $theme - The theme used to style the component.\r\n@mixin combo($theme) {\r\n    @include css-vars($theme);\r\n\r\n    $variant: map.get($theme, '_meta', 'variant');\r\n\r\n    %igx-combo {\r\n        position: relative;\r\n        display: block;\r\n    }\r\n\r\n    %igx-combo__checkbox {\r\n        margin-inline-end: rem(8);\r\n    }\r\n\r\n    %igx-combo__drop-down {\r\n        position: absolute;\r\n        width: 100%;\r\n\r\n        .igx-drop-down {\r\n            width: 100%;\r\n        }\r\n    }\r\n\r\n    %igx-combo__search {\r\n        padding-inline: pad-inline(rem(16px));\r\n        padding-block: pad-block(rem(8px));\r\n        margin: 0 !important;\r\n        z-index: 26;\r\n        border-bottom: rem(1px) dashed var-get($theme, 'search-separator-border-color');\r\n\r\n        .igx-input-group__bundle {\r\n            padding-block-start: 0;\r\n            height: auto;\r\n        }\r\n\r\n        igx-input-group {\r\n            --ig-size: var(--ig-size-small);\r\n        }\r\n    }\r\n\r\n    %igx-combo__case-icon,\r\n    %igx-combo__case-icon--active {\r\n        .igx-icon {\r\n            width: rem(16px);\r\n            height: rem(16px);\r\n            font-size: rem(16px);\r\n        }\r\n    }\r\n\r\n    // The wrapping element here is needed\r\n    // in order to override the !important rule of .igx-icon--inactive.\r\n    %igx-combo__case-icon {\r\n        .igx-icon {\r\n            // Important is needed since the .igx-icon--inactive has !important\r\n            color: color($color: 'gray', $variant: 600) !important;\r\n        }\r\n    }\r\n\r\n    %igx-combo__case-icon--active {\r\n        .igx-icon {\r\n            color: color($color: 'primary')\r\n        }\r\n    }\r\n\r\n    %igx-combo__content {\r\n        position: relative;\r\n        overflow: hidden;\r\n\r\n        &:focus {\r\n            outline: transparent;\r\n        }\r\n    }\r\n\r\n    %igx-combo__add {\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: center;\r\n        align-items: center;\r\n        position: relative;\r\n        padding: rem(16px);\r\n        gap: rem(16px);\r\n        background: var-get($theme, 'empty-list-background');\r\n    }\r\n\r\n    %igx-combo__add-item {\r\n        height: auto !important;\r\n        background: var-get($theme, 'empty-list-background') !important;\r\n        justify-content: center !important;\r\n    }\r\n\r\n    %igx-combo__empty {\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        width: 100%;\r\n        color: var-get($theme, 'empty-list-placeholder-color');\r\n        padding: 0 rem(24px);\r\n        font-size: rem(13px);\r\n    }\r\n\r\n    @if $variant == 'bootstrap' {\r\n        .igx-input-group--disabled {\r\n            %igx-combo__toggle-button {\r\n                border-inline-start-width: rem(1px);\r\n                border-inline-start-style: solid;\r\n                border-inline-start-color: inherit;\r\n            }\r\n        }\r\n\r\n        igx-suffix:not(.igx-combo__clear-button) + %igx-combo__toggle-button {\r\n            border-inline-start-width: rem(1px);\r\n            border-inline-start-style: solid;\r\n            border-inline-start-color: inherit;\r\n        }\r\n\r\n        .igx-input-group__bundle::after {\r\n            height: rem(1px) !important;\r\n        }\r\n    }\r\n\r\n    .igx-input-group {\r\n        %igx-combo__toggle-button {\r\n            background: var-get($theme, 'toggle-button-background');\r\n            color: var-get($theme, 'toggle-button-foreground');\r\n        }\r\n\r\n        %igx-combo__clear-button {\r\n            @if $variant == 'bootstrap' {\r\n                border-inline-end: rem(1px) solid var(--border-color);\r\n            }\r\n        }\r\n    }\r\n\r\n    .igx-input-group:not(.igx-input-group--disabled) {\r\n        %igx-combo__clear-button {\r\n            background: var-get($theme, 'clear-button-background');\r\n            color: var-get($theme, 'clear-button-foreground');\r\n        }\r\n    }\r\n\r\n    .igx-input-group--filled {\r\n        %igx-combo__toggle-button {\r\n            color: var-get($theme, 'toggle-button-foreground-filled');\r\n        }\r\n    }\r\n\r\n    .igx-input-group--focused {\r\n        %igx-combo__toggle-button {\r\n            color: var-get($theme, 'toggle-button-foreground-focus');\r\n            background: var-get($theme, 'toggle-button-background-focus');\r\n        }\r\n\r\n        %igx-combo__clear-button {\r\n            color: var-get($theme, 'clear-button-foreground-focus');\r\n            background: var-get($theme, 'clear-button-background-focus');\r\n        }\r\n    }\r\n\r\n    .igx-input-group.igx-input-group--focused:not(.igx-input-group--box) {\r\n        %igx-combo__toggle-button {\r\n            background: var-get($theme, 'toggle-button-background-focus--border');\r\n        }\r\n    }\r\n\r\n    .igx-input-group--disabled {\r\n        %igx-combo__toggle-button {\r\n            background: var-get($theme, 'toggle-button-background-disabled') !important;\r\n            color: var-get($theme, 'toggle-button-foreground-disabled') !important;\r\n        }\r\n\r\n        %igx-combo__clear-button {\r\n            @if $variant == 'bootstrap' {\r\n                border-inline-end: 0;\r\n            }\r\n        }\r\n    }\r\n}\r\n","@use 'sass:map';\r\n@use '../../base' as *;\r\n@use '../../themes/schemas' as *;\r\n\r\n////\r\n/// @group themes\r\n/// @access public\r\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\r\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\r\n////\r\n\r\n/// @param {Map} $schema [$light-material-schema] - The schema used as basis for styling the component.\r\n/// @requires $light-material-schema\r\n/// @param {Color} $toggle-button-background [null] - The select toggle button background color.\r\n/// @param {Color} $toggle-button-background-focus [null] - The select toggle button background color when the select is focused.\r\n/// @param {Color} $toggle-button-background-disabled [null] - The select toggle button background color when the select is disabled.\r\n/// @param {Color} $toggle-button-foreground [null] - The select toggle button foreground color.\r\n/// @param {Color} $toggle-button-foreground-focus [null] - The select toggle button foreground color when the select is focused.\r\n/// @param {Color} $toggle-button-foreground-disabled [null] - The select toggle button foreground color when the select is disabled.\r\n/// @param {Color} $toggle-button-foreground-filled [null] - The select toggle button foreground color when the select is filled.\r\n/// @param {Color} $toggle-button-background-focus--border [null] - The select toggle button background color when the select is focused in material border variant.\r\n/// @example scss Change the select empty list background\r\n///   $my-select-theme: igx-select-theme($empty-list-background);\r\n///   // Pass the theme to the css-vars mixin\r\n///   @include css-vars($my-select-theme);\r\n@function select-theme(\r\n    $schema: $light-material-schema,\r\n    $toggle-button-background: null,\r\n    $toggle-button-background-focus: null,\r\n    $toggle-button-background-disabled: null,\r\n    $toggle-button-foreground: null,\r\n    $toggle-button-foreground-focus: null,\r\n    $toggle-button-foreground-disabled: null,\r\n    $toggle-button-foreground-filled: null,\r\n    $toggle-button-background-focus--border: null,\r\n) {\r\n    $name: 'igx-select';\r\n    $selector: 'igx-select';\r\n\r\n    $select-schema: ();\r\n\r\n    @if map.has-key($schema, 'select') {\r\n        $select-schema: map.get($schema, 'select');\r\n    } @else {\r\n        $select-schema: $schema;\r\n    }\r\n\r\n    $theme: digest-schema($select-schema);\r\n    $meta: map.get($theme, '_meta');\r\n\r\n    @return extend($theme, (\r\n        name: $name,\r\n        selector: $selector,\r\n        toggle-button-background: $toggle-button-background,\r\n        toggle-button-background-focus: $toggle-button-background-focus,\r\n        toggle-button-background-disabled: $toggle-button-background-disabled,\r\n        toggle-button-foreground: $toggle-button-foreground,\r\n        toggle-button-foreground-focus: $toggle-button-foreground-focus,\r\n        toggle-button-foreground-disabled: $toggle-button-foreground-disabled,\r\n        toggle-button-foreground-filled: $toggle-button-foreground-filled,\r\n        toggle-button-background-focus--border: $toggle-button-background-focus--border,\r\n        _meta: map.merge(if($meta, $meta, ()), (\r\n            variant: map.get($schema, '_meta', 'theme')\r\n        )),\r\n    ));\r\n}\r\n\r\n/// @param {Map} $theme - The theme used to style the component.\r\n@mixin select($theme) {\r\n    @include css-vars($theme);\r\n    $variant: map.get($theme, '_meta', 'variant');\r\n\r\n    %igx-select {\r\n        position: relative;\r\n        display: block;\r\n    }\r\n\r\n    @if $variant == 'bootstrap' {\r\n        .igx-input-group--disabled {\r\n            %igx-select__toggle-button {\r\n                border-inline-start-width: rem(1px);\r\n                border-inline-start-style: solid;\r\n                border-inline-start-color: inherit;\r\n            }\r\n        }\r\n\r\n        igx-suffix + %igx-select__toggle-button {\r\n            border-inline-start-width: rem(1px);\r\n            border-inline-start-style: solid;\r\n            border-inline-start-color: inherit;\r\n        }\r\n    }\r\n\r\n    .igx-input-group {\r\n        %igx-select__toggle-button {\r\n            background: var-get($theme, 'toggle-button-background');\r\n            color: var-get($theme, 'toggle-button-foreground');\r\n        }\r\n    }\r\n\r\n    .igx-input-group--filled {\r\n        %igx-select__toggle-button {\r\n            color: var-get($theme, 'toggle-button-foreground-filled');\r\n        }\r\n    }\r\n\r\n    .igx-input-group--focused %igx-select__toggle-button {\r\n        background: var-get($theme, 'toggle-button-background-focus');\r\n        color: var-get($theme, 'toggle-button-foreground-focus');\r\n    }\r\n\r\n    .igx-input-group.igx-input-group--focused:not(.igx-input-group--box) {\r\n        %igx-select__toggle-button {\r\n            background: var-get($theme, 'toggle-button-background-focus--border');\r\n        }\r\n    }\r\n\r\n    .igx-input-group.igx-input-group--disabled.igx-input-group--filled,\r\n    .igx-input-group.igx-input-group--disabled {\r\n        %igx-select__toggle-button {\r\n            background: var-get($theme, 'toggle-button-background-disabled');\r\n            color: var-get($theme, 'toggle-button-foreground-disabled');\r\n        }\r\n    }\r\n}\r\n","@use 'sass:map';\r\n@use '../../base' as *;\r\n@use '../../themes/schemas' as *;\r\n\r\n////\r\n/// @group themes\r\n/// @access public\r\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\r\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\r\n////\r\n\r\n/// @param {Map} $theme - The calendar theme used to style the component.\r\n@mixin date-picker($theme) {\r\n    @include css-vars($theme, '.igx-date-picker');\r\n\r\n    $variant: map.get($theme, '_meta', 'variant');\r\n    $bootstrap-theme: $variant == 'bootstrap';\r\n\r\n    %date-picker {\r\n        box-shadow: elevation(24);\r\n        border-radius: var-get($theme, 'border-radius');\r\n        background: var-get($theme, 'content-background');\r\n        overflow: hidden;\r\n\r\n        %cal-display {\r\n            background: var-get($theme, 'content-background');\r\n        }\r\n\r\n        %cal-header-display {\r\n            background: var-get($theme, 'header-background');\r\n            color: var-get($theme, 'header-text-color');\r\n        }\r\n\r\n        %cal-picker-arrow {\r\n            color: var-get($theme, 'picker-arrow-color');\r\n\r\n            &:hover {\r\n                color: var-get($theme, 'picker-arrow-hover-color');\r\n            }\r\n        }\r\n\r\n        %cal-picker-date {\r\n            color: var-get($theme, 'picker-text-color');\r\n\r\n            &:hover,\r\n            &:focus {\r\n                color: var-get($theme, 'picker-text-hover-color');\r\n            }\r\n        }\r\n\r\n        %cal-value {\r\n            color: var-get($theme, 'content-text-color');\r\n            min-width: 14.28%;\r\n\r\n            @if $bootstrap-theme {\r\n                &:hover,\r\n                &:focus {\r\n                    color: var-get($theme, 'date-selected-text-color');\r\n                }\r\n            }\r\n        }\r\n\r\n        %cal-value--label {\r\n            color: var-get($theme, 'label-color');\r\n\r\n            &:hover,\r\n            &:focus {\r\n                color: var-get($theme, 'label-color');\r\n            }\r\n        }\r\n\r\n        %cal-value--weekend {\r\n            color: var-get($theme, 'weekend-text-color');\r\n        }\r\n\r\n        %cal-value--disabled {\r\n            color: var-get($theme, 'date-disabled-text-color');\r\n        }\r\n\r\n        %cal-value--year-current {\r\n            color: var-get($theme, 'year-current-text-color');\r\n\r\n            @if $bootstrap-theme {\r\n                &:hover,\r\n                &:focus {\r\n                    color: var-get($theme, 'year-hover-text-color');\r\n                }\r\n            }\r\n        }\r\n\r\n        %cal-value--year-hover {\r\n            color: var-get($theme, 'year-hover-text-color');\r\n        }\r\n\r\n        %cal-value--month-hover {\r\n            color: var-get($theme, 'month-hover-text-color');\r\n        }\r\n\r\n        %cal-value--month-current {\r\n            color: var-get($theme, 'month-current-text-color');\r\n        }\r\n\r\n        %cal-value--inactive {\r\n            color: var-get($theme, 'inactive-text-color');\r\n\r\n            &:hover {\r\n                color: var-get($theme, 'inactive-text-color');\r\n            }\r\n        }\r\n\r\n        %cal-value--selected {\r\n            color: var-get($theme, 'date-selected-text-color');\r\n        }\r\n\r\n        %cal-value--current {\r\n            color: var-get($theme, 'date-current-text-color');\r\n        }\r\n    }\r\n\r\n    %date-picker--vertical {\r\n        min-width: rem(368px); /* 168px for header + 200px for the content */\r\n    }\r\n\r\n    %date-picker--dropdown {\r\n        display: flex;\r\n        flex: 1 0 0;\r\n        flex-direction: column;\r\n        box-shadow: elevation(3);\r\n    }\r\n\r\n    %date-picker__buttons {\r\n        display: flex;\r\n        justify-content: flex-end;\r\n        padding: rem(8px);\r\n    }\r\n}\r\n","@use 'sass:map';\r\n@use '../../base' as *;\r\n@use '../../themes/schemas' as *;\r\n\r\n////\r\n/// @group themes\r\n/// @access public\r\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\r\n////\r\n\r\n/// @param {Map} $schema [$light-material-schema] - The schema used as basis for styling the component.\r\n/// @param {color} $label-color [null] - The color for date range separator label.\r\n@function date-range-picker-theme(\r\n    $schema: $light-material-schema,\r\n    $label-color: null\r\n) {\r\n    $name: 'igx-date-range';\r\n    $date-range-schema: ();\r\n\r\n    @if map.has-key($schema, 'date-range') {\r\n        $date-range-schema: map.get($schema, 'date-range');\r\n    } @else {\r\n        $date-range-schema: $schema;\r\n    }\r\n\r\n    $theme: digest-schema($date-range-schema);\r\n\r\n    @return extend($theme, (\r\n        name: $name,\r\n        label-color: $label-color,\r\n    ));\r\n}\r\n\r\n/// @param {Map} $theme - The theme used to style the component.\r\n@mixin date-range-picker($theme) {\r\n    @include css-vars($theme);\r\n\r\n    %igx-date-range-picker {\r\n        display: flex;\r\n\r\n        > igx-icon {\r\n            cursor: pointer;\r\n        }\r\n\r\n        igx-input-group {\r\n            flex: 1;\r\n        }\r\n    }\r\n\r\n    igx-date-range-start,\r\n    igx-date-range-end,\r\n    %igx-date-range-picker__start,\r\n    %igx-date-range-picker__end {\r\n        flex: 1 0 0%;\r\n    }\r\n\r\n    %igx-date-range-picker__label {\r\n        display: flex;\r\n        align-items: center;\r\n        color: var-get($theme, 'label-color');\r\n        margin: 0 rem(8px);\r\n    }\r\n\r\n    %igx-date-range-picker-buttons {\r\n        display: flex;\r\n        justify-content: flex-end;\r\n        padding: 0 rem(16px) rem(16px) rem(16px);\r\n\r\n        > * {\r\n            margin-inline-end: rem(8px);\r\n\r\n            &:last-of-type {\r\n                margin-inline-end: 0;\r\n            }\r\n        }\r\n\r\n        &:empty {\r\n            display: none;\r\n        }\r\n    }\r\n}\r\n\r\n/// Adds typography styles for the igx-date-range-picker component.\r\n/// Uses the 'subtitle-1'\r\n/// categories from the typographic scale.\r\n/// @group typography\r\n/// @param {Map} $categories [(label: 'subtitle-1')] - The categories from the typographic scale used for type styles.\r\n@mixin date-range-typography(\r\n    $categories: (\r\n        label: 'subtitle-1',\r\n    )\r\n) {\r\n    $label: map.get($categories, 'label');\r\n\r\n    %igx-date-range__label {\r\n        @include type-style($label);\r\n    }\r\n}\r\n","@use 'sass:map';\r\n@use '../../base' as *;\r\n@use '../../themes/schemas' as *;\r\n\r\n////\r\n/// @group themes\r\n/// @access public\r\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\r\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\r\n////\r\n\r\n/// @param {Map} $schema [$light-material-schema] - The schema used as basis for styling the component.\r\n/// @param {Color} $color [null] - The color of the divider. (Gradients are not supported for dashed dividers).\r\n/// @requires $light-material-schema\r\n/// @example scss Change the color of the divider\r\n///   $my-divider-theme: divider-theme($color: orange);\r\n///   // Pass the theme to the css-vars() mixin\r\n///   @include css-vars($my-divider-theme);\r\n@function divider-theme(\r\n    $schema: $light-material-schema,\r\n    $color: null\r\n) {\r\n    $name: 'igx-divider';\r\n    $divider-schema: ();\r\n\r\n    @if map.has-key($schema, 'divider') {\r\n        $divider-schema: map.get($schema, 'divider');\r\n    } @else {\r\n        $divider-schema: $schema;\r\n    }\r\n\r\n    $theme: digest-schema($divider-schema);\r\n\r\n    @return extend($theme, (\r\n        name: $name,\r\n        color: $color\r\n    ));\r\n}\r\n\r\n/// @param {Map} $theme - The theme used to style the component.\r\n@mixin divider($theme) {\r\n    @include css-vars($theme);\r\n\r\n    %igx-divider-display {\r\n        display: block;\r\n        height: rem(1px);\r\n        background: var-get($theme, 'color');\r\n        margin: var(--igx-divider-inset, var(--inset, var(--_inset)));\r\n    }\r\n\r\n    %igx-divider--dashed {\r\n        background: linear-gradient(to right, var-get($theme, 'color') 50%, transparent 50%);\r\n        background-size: rem(10px) rem(1px); /* dash size */\r\n    }\r\n\r\n    %igx-divider--vertical {\r\n        display: inline-block;\r\n        width: rem(1px);\r\n        min-width: rem(1px);\r\n        height: auto;\r\n    }\r\n\r\n    %igx-divider--vertical-dashed {\r\n        background: linear-gradient(to bottom, var-get($theme, 'color') 50%, transparent 50%);\r\n        background-size: rem(1px) rem(10px); /* dash size */\r\n    }\r\n}\r\n","@use 'sass:map';\r\n@use '../../base' as *;\r\n@use '../../themes/schemas' as *;\r\n\r\n////\r\n/// @group themes\r\n/// @access public\r\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\r\n////\r\n\r\n/// @param {Map} $schema [$light-material-schema] - The schema used as basis for styling the component.\r\n///\r\n/// @param {Color} $label-color [null] - sets the color for the label.\r\n/// @param {Number} $symbol-size [null] - the size of the symbols.\r\n/// @param {Color} $symbol-empty-color [null] - sets the idle color for the symbol when it is a plane text.\r\n/// @param {Color} $symbol-full-color [null] - sets the color in selected state for the symbol when it is a plane text.\r\n/// @param {Color} $symbol-empty-filter [null] - the filter(s) used for the empty symbol.\r\n/// @param {Color} $symbol-full-filter [null] - the filter(s) used for the filled symbol.\r\n/// @param {Color} $disabled-label-color [null] - sets the color for the label in disabled state.\r\n/// @param {Color} $disabled-empty-symbol-color [null] - sets the idle color for the symbol in disabled state when it is a plane text.\r\n/// @param {Color} $disabled-full-symbol-color [null] - sets the color for the symbol in selected/disabled state when it is a plane text.\r\n/// @requires $light-material-schema\r\n/// @example scss Change the rating filled symbol color\r\n///   $my-rating-theme: rating-theme($symbol-full-color: red);\r\n///   // Pass the theme to the css-vars() mixin\r\n///   @include css-vars($my-rating-theme);\r\n@function rating-theme(\r\n    $schema: $light-material-schema,\r\n    $rest...\r\n) {\r\n\r\n    $name: 'igc-rating';\r\n    $rating-schema: ();\r\n\r\n    @if map.has-key($schema, 'rating') {\r\n        $rating-schema: map.get($schema, 'rating');\r\n    } @else {\r\n        $rating-schema: $schema;\r\n    }\r\n\r\n    $theme: digest-schema($rating-schema);\r\n\r\n    @return extend($theme, (name: $name), keywords($rest));\r\n}\r\n\r\n/// @param {Map} $theme - The theme used to style the component.\r\n@mixin rating($theme) {\r\n    @include css-vars($theme: $theme);\r\n\r\n    igc-rating::part(label) {\r\n        color: var-get($theme, 'label-color');\r\n    }\r\n\r\n    igc-rating::part(value-label) {\r\n        color: color(null, 'gray', 900);\r\n    }\r\n\r\n    igc-rating[disabled]::part(label),\r\n    igc-rating[disabled]::part(value-label) {\r\n        color: var-get($theme, 'disabled-label-color');\r\n    }\r\n\r\n    igc-rating[disabled] {\r\n        --symbol-empty-color: var(--disabled-empty-symbol-color);\r\n        --symbol-full-color: var(--disabled-full-symbol-color);\r\n        --symbol-empty-filter: grayscale(100%) opacity(50%);\r\n        --symbol-full-filter: grayscale(50%);\r\n    }\r\n}\r\n","@use 'sass:map';\r\n@use 'sass:meta';\r\n@use 'sass:color';\r\n@use 'sass:math';\r\n@use '../../base' as *;\r\n@use './excel-filtering-theme' as *;\r\n@use 'igniteui-theming/sass/animations' as *;\r\n@use '../../themes/schemas' as *;\r\n\r\n////\r\n/// @group themes\r\n/// @access public\r\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\r\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\r\n////\r\n\r\n/// @param {Map} $schema [$light-material-schema] - The schema used as basis for styling the component.\r\n/// @param {Map} $elevations [null] - The elevations (shadows) map to be used.\r\n/// @param {Color} $header-background [null] - The table header background color.\r\n/// @param {Color} $header-text-color [null] - The table header text color.\r\n/// @param {String} $header-border-width [null] - The border width used for header borders.\r\n/// @param {String} $header-border-style [null] - The border style used for header borders.\r\n/// @param {Color} $header-border-color [null] - The color used for header borders.\r\n/// @param {Color} $header-selected-background [null] - The table header background color when selected (ex. column selection).\r\n/// @param {Color} $header-selected-text-color [null] - The table header text color when selected (ex. column selection).\r\n/// @param {Color} $sorted-header-icon-color [null] - The sort icon color when sorted.\r\n/// @param {color} $sortable-header-icon-hover-color [null] - The icon color on hover in grid header when the column is sortable.\r\n/// @param {Color} $content-background [null] - The table body background color.\r\n/// @param {Color} $content-text-color [null] - The table body text color.\r\n/// @param {Color} $ghost-header-text-color [null] - The dragged header text color.\r\n/// @param {Color} $ghost-header-icon-color [null] - The dragged header icon color.\r\n/// @param {Color} $ghost-header-background [null] - The dragged header background color.\r\n/// @param {Color} $row-odd-background [null] - The background color of odd rows.\r\n/// @param {Color} $row-even-background [null] - The background color of even rows.\r\n/// @param {Color} $row-odd-text-color [null] - The text color of odd rows.\r\n/// @param {Color} $row-even-text-color [null] - The text color of even rows.\r\n/// @param {Color} $row-selected-background [null] - The selected row background color.\r\n/// @param {Color} $row-selected-hover-background [null] - The selected row hover background color.\r\n/// @param {Color} $row-selected-text-color [null] - The selected row text color.\r\n/// @param {Color} $row-selected-hover-text-color [null] - The selected row hover text color.\r\n/// @param {Color} $row-hover-background [null] - The hover row background color.\r\n/// @param {Color} $row-hover-text-color [null] - The hover row text color.\r\n/// @param {Color} $row-border-color [null] - The row bottom border color.\r\n/// @param {String} $pinned-border-width [null] - The border width of the pinned border.\r\n/// @param {String} $pinned-border-style [null] - The CSS border style of the pinned border.\r\n/// @param {Color} $pinned-border-color [null] - The color of the pinned border.\r\n/// @param {Color} $cell-active-border-color [null] - The border color for the currently active(focused) cell.\r\n/// @param {Color} $cell-selected-background [null] - The selected cell background color.\r\n/// @param {Color} $cell-selected-text-color [null] - The selected cell text color.\r\n/// @param {Color} $cell-editing-background [null] - The background color of the cell being edited.\r\n/// @param {Color} $cell-editing-foreground [null] - The cell text color in edit mode.\r\n/// @param {Color} $cell-editing-focus-foreground [null] - The cell text color in edit mode on focus.\r\n/// @param {Color} $cell-edited-value-color [null] - The text color of a cell that has been edited.\r\n/// @param {Color} $cell-new-color [null] - The text color of a new, unedited cell. Used when adding new row in a grid.\r\n/// @param {Color} $cell-disabled-color [null] - The text color of a disabled cell.\r\n/// @param {Color} $cell-selected-within-background [null] - The background of the selected cell inside a selected row/column.\r\n/// @param {Color} $cell-selected-within-text-color [null] - The color of the selected cell inside a selected row/column.\r\n/// @param {Color} $edit-mode-color [null] - The color applied around the row/cell when in editing mode.\r\n/// @param {Color} $edited-row-indicator [null] - The color applied to the edited row indicator line.\r\n/// @param {Color} $resize-line-color [null] - The table header resize line color.\r\n/// @param {Color} $drop-indicator-color [null] - The color applied to the line between the columns when dragging a column.\r\n/// @param {Color} $grouparea-background [null] - The grid group area background color.\r\n/// @param {Color} $grouparea-color [null] - The grid group area color.\r\n/// @param {Color} $group-row-background [null] - The grid group row background color.\r\n/// @param {Color} $group-row-selected-background [null] - The drop area background on drop color.\r\n/// @param {Color} $group-label-column-name-text [null] - The grid group row column name text color.\r\n/// @param {Color} $group-label-icon [null] - The grid group row icon color.\r\n/// @param {Color} $group-label-text [null] - The grid group row text color.\r\n/// @param {Color} $expand-all-icon-color [null] - The grid header expand all group rows icon color.\r\n/// @param {Color} $expand-all-icon-hover-color [null] - The grid header expand all group rows icon hover color.\r\n/// @param {Color} $expand-icon-color [null] - The grid row expand icon color.\r\n/// @param {Color} $expand-icon-hover-color [null] - The grid row expand icon hover color.\r\n/// @param {Color} $active-expand-icon-color [null] - The drop area background on drop color.\r\n/// @param {Color} $active-expand-icon-hover-color [null] - The drop area background on drop color.\r\n/// @param {Color} $group-count-background [null] - The grid group row cont badge background color.\r\n/// @param {Color} $group-count-text-color [null] - The grid group row cont badge text color.\r\n/// @param {Color} $drop-area-text-color [null] - The drop area text color.\r\n/// @param {Color} $drop-area-icon-color [null] - The drop area icon color.\r\n/// @param {Color} $drop-area-background [null] - The drop area background color.\r\n/// @param {Color} $drop-area-on-drop-background [null] - The drop area background on drop color.\r\n/// @param {Color} $filtering-background-and [null] - The background color of advanced filtering \"AND\" condition.\r\n/// @param {Color} $filtering-background-and--focus [null] - The background color on focus/selected of advanced filtering \"AND\" condition.\r\n/// @param {Color} $filtering-background-or [null] - The background color of advanced filtering \"OR\" condition.\r\n/// @param {Color} $filtering-background-or--focus [null] - The background color on focus/selected of advanced filtering \"OR\" condition.\r\n/// @param {Color} $filtering-header-background [null] - The background color of the filtered column header.\r\n/// @param {Color} $filtering-header-text-color [null] - The text color color of the filtered column header.\r\n/// @param {Color} $filtering-row-background [null] - The background color of the filtering row.\r\n/// @param {Color} $filtering-row-text-color [null] - The text-color color of the filtering row.\r\n/// @param {Color} $tree-filtered-text-color [null] - grouping row background color on focus.\r\n/// @param {Color} $body-summaries-background [null] - The background color of the summary groups located the body.\r\n/// @param {Color} $body-summaries-text-color [null] - The text color of the summary results located the body.\r\n/// @param {Color} $root-summaries-background [null] - The background color of the summary groups located the footer.\r\n/// @param {Color} $root-summaries-text-color [null] - The text color of the summary results located the footer.\r\n/// @param {Color} $row-highlight [null] - The grid row highlight indication color.\r\n/// @param {box-shadow} $grid-shadow [null] - The shadow of the grid.\r\n/// @param {box-shadow} $drag-shadow [null] - The shadow used for movable elements (ex. column headers).\r\n/// @param {color} $row-ghost-background [null] - The dragged row background color.\r\n/// @param {color} $row-drag-color [null] - The row drag handle color.\r\n/// @param {Color} $grid-border-color [null] - The color of the grid border.\r\n/// @param {List} $drop-area-border-radius [null] - The border radius used for column drop area.\r\n/// @requires $light-material-schema\r\n/// @example scss Change the header background color\r\n///   $my-grid-theme: grid-theme($header-background: black);\r\n///   // Pass the theme to the css-vars() mixin\r\n///   @include css-vars($my-grid-theme);\r\n@function grid-theme(\r\n    $schema: $light-material-schema,\r\n    $elevations: null,\r\n\r\n    $header-background: null,\r\n    $header-text-color: null,\r\n    $header-border-width: null,\r\n    $header-border-style: null,\r\n    $header-border-color: null,\r\n\r\n    $header-selected-background: null,\r\n    $header-selected-text-color: null,\r\n\r\n    $sorted-header-icon-color: null,\r\n\r\n    $content-background: null,\r\n    $content-text-color: null,\r\n\r\n    $ghost-header-text-color: null,\r\n    $ghost-header-icon-color: null,\r\n    $ghost-header-background: null,\r\n\r\n    $row-odd-background: null,\r\n    $row-even-background: null,\r\n    $row-odd-text-color: null,\r\n    $row-even-text-color: null,\r\n    $row-selected-background: null,\r\n    $row-selected-hover-background: null,\r\n    $row-selected-text-color: null,\r\n    $row-selected-hover-text-color: null,\r\n    $row-hover-background: null,\r\n    $row-hover-text-color: null,\r\n    $row-border-color: null,\r\n\r\n    $pinned-border-width: null,\r\n    $pinned-border-style: null,\r\n    $pinned-border-color: null,\r\n\r\n    $cell-active-border-color: null,\r\n    $cell-selected-background: null,\r\n    $cell-selected-text-color: null,\r\n    $cell-editing-background: null,\r\n    $cell-editing-foreground: null,\r\n    $cell-editing-focus-foreground: null,\r\n    $cell-edited-value-color: null,\r\n    $cell-new-color: null,\r\n    $cell-disabled-color: null,\r\n\r\n    $edit-mode-color: null,\r\n    $edited-row-indicator: null,\r\n\r\n    $resize-line-color: null,\r\n    $drop-indicator-color: null,\r\n\r\n    $grouparea-background: null,\r\n    $grouparea-color: null,\r\n\r\n    $group-row-background: null,\r\n    $group-row-selected-background: null,\r\n    $group-label-column-name-text: null,\r\n    $group-label-icon: null,\r\n    $group-label-text: null,\r\n\r\n    $expand-all-icon-color: null,\r\n    $expand-all-icon-hover-color: null,\r\n\r\n    $expand-icon-color: null,\r\n    $expand-icon-hover-color: null,\r\n\r\n    $active-expand-icon-color: null,\r\n    $active-expand-icon-hover-color: null,\r\n\r\n    $group-count-background: null,\r\n    $group-count-text-color: null,\r\n\r\n    $drop-area-text-color: null,\r\n    $drop-area-icon-color: null,\r\n    $drop-area-background: null,\r\n    $drop-area-on-drop-background: null,\r\n\r\n    $filtering-header-background: null,\r\n    $filtering-header-text-color: null,\r\n    $filtering-row-background: null,\r\n    $filtering-row-text-color: null,\r\n    $filtering-background-and: null,\r\n    $filtering-background-or: null,\r\n    $filtering-background-and--focus: null,\r\n    $filtering-background-or--focus: null,\r\n    $tree-filtered-text-color: null,\r\n    $tree-selected-filtered-row-text-color: null,\r\n    $tree-selected-filtered-cell-text-color: null,\r\n\r\n    $body-summaries-background: null,\r\n    $body-summaries-text-color: null,\r\n    $root-summaries-background: null,\r\n    $root-summaries-text-color: null,\r\n\r\n    $row-highlight: null,\r\n    $grid-shadow: null,\r\n    $drag-shadow: null,\r\n    $row-ghost-background: null,\r\n    $row-drag-color: null,\r\n    $drop-area-border-radius: null,\r\n    $grid-border-color: null,\r\n    $sortable-header-icon-hover-color: null,\r\n\r\n    $cell-selected-within-background: null,\r\n    $cell-selected-within-text-color: null,\r\n) {\r\n    $name: 'igx-grid';\r\n    $selector: 'igx-grid, igx-hierarchical-grid, igx-pivot-grid, igx-tree-grid, igx-advanced-filtering-dialog, igx-grid-excel-style-filtering, .igx-excel-filter__secondary';\r\n    $grid-schema: ();\r\n\r\n    @if map.has-key($schema, 'grid') {\r\n        $grid-schema: map.get($schema, 'grid');\r\n    } @else {\r\n        $grid-schema: $schema;\r\n    }\r\n\r\n    $theme: digest-schema($grid-schema);\r\n    $meta: map.get($theme, '_meta');\r\n\r\n    @if not($cell-selected-within-text-color) and $cell-selected-within-background {\r\n        $cell-selected-within-text-color: text-contrast($cell-selected-within-background);\r\n    }\r\n\r\n    @if not($ghost-header-icon-color) and $ghost-header-background {\r\n        @if meta.type-of($ghost-header-background) == 'color' {\r\n            $ghost-header-icon-color: rgba(text-contrast($ghost-header-background), .07);\r\n        }\r\n    }\r\n\r\n    @if not($ghost-header-text-color) and $ghost-header-background {\r\n        $ghost-header-text-color: text-contrast($ghost-header-background);\r\n    }\r\n\r\n    @if $header-background and meta.type-of($header-background) == 'color' {\r\n        $header-background: to-opaque($header-background, color($color: 'surface'));\r\n    }\r\n\r\n    @if not($header-text-color) and $header-background {\r\n        $header-text-color: text-contrast($header-background);\r\n    }\r\n\r\n    @if not($header-selected-text-color) and $header-selected-background {\r\n        $header-selected-text-color: text-contrast($header-selected-background);\r\n    }\r\n\r\n    @if not($header-border-color) and $header-background {\r\n        @if meta.type-of($header-background) == 'color' {\r\n            $header-border-color: rgba(text-contrast($header-background), .24);\r\n        }\r\n    }\r\n\r\n    @if not($content-text-color) and $content-background {\r\n        $content-text-color: text-contrast($content-background);\r\n    }\r\n\r\n    @if not($row-odd-background) and $content-background {\r\n        $row-odd-background: $content-background;\r\n    }\r\n\r\n    @if $row-odd-background and meta.type-of($row-odd-background) == 'color' and color.alpha($row-odd-background) != 1 {\r\n        $cbg: if($content-background, $content-background, map.get($theme, 'content-background'));\r\n\r\n        $row-odd-background: to-opaque($row-odd-background, $cbg);\r\n    }\r\n\r\n    @if not($row-odd-text-color) and $row-odd-background {\r\n        $row-odd-text-color: text-contrast($row-odd-background);\r\n    }\r\n\r\n    @if not($row-even-background) and $content-background {\r\n        $row-even-background: $content-background;\r\n    }\r\n\r\n    @if $row-even-background and meta.type-of($row-even-background) == 'color' and color.alpha($row-even-background) != 1 {\r\n        $cbg: if($content-background, $content-background, map.get($theme, 'content-background'));\r\n\r\n        $row-even-background: to-opaque($row-even-background, $cbg);\r\n    }\r\n\r\n    @if not($row-even-text-color) and $row-even-background {\r\n        $row-even-text-color: text-contrast($row-even-background);\r\n    }\r\n\r\n    @if not($row-hover-background) and $content-background {\r\n        @if meta.type-of($content-background) == 'color' {\r\n            $row-hover-background: to-opaque(rgba(text-contrast($content-background), .08), $content-background)\r\n        }\r\n    }\r\n\r\n    @if not($row-hover-text-color) and $row-hover-background {\r\n        $row-hover-text-color: text-contrast($row-hover-background);\r\n    }\r\n\r\n    @if not($cell-selected-text-color) and $cell-selected-background {\r\n        $cell-selected-text-color: text-contrast($cell-selected-background);\r\n    }\r\n\r\n    @if not($row-selected-text-color) and $row-selected-background {\r\n        $row-selected-text-color: text-contrast($row-selected-background);\r\n    }\r\n\r\n    @if not($row-selected-hover-text-color) and $row-selected-hover-background {\r\n        $row-selected-hover-text-color: text-contrast($row-selected-hover-background);\r\n    }\r\n\r\n    @if not($row-border-color) and $content-background {\r\n        @if meta.type-of($content-background) == 'color' {\r\n            $row-border-color: rgba(text-contrast($content-background), .08)\r\n        }\r\n    }\r\n\r\n    @if not($pinned-border-color) and $content-background {\r\n        @if meta.type-of($content-background) == 'color' {\r\n            $pinned-border-color: rgba(text-contrast($content-background), .08)\r\n        }\r\n    }\r\n\r\n    @if not($group-row-background) and $header-background {\r\n        $group-row-background: $header-background\r\n    }\r\n\r\n    @if not($expand-icon-color) and $group-row-background {\r\n        $expand-icon-color: text-contrast($group-row-background)\r\n    }\r\n\r\n    @if not($group-label-text) and $group-row-selected-background {\r\n        $group-label-text: text-contrast($group-row-selected-background)\r\n    }\r\n\r\n    @if not($expand-icon-color) and $group-row-selected-background {\r\n        $expand-icon-color: text-contrast($group-row-selected-background)\r\n    }\r\n\r\n    @if not($group-count-background) and $group-row-selected-background {\r\n        $group-count-background: text-contrast($group-row-selected-background);\r\n    }\r\n\r\n    @if not($expand-all-icon-color) and $header-background {\r\n        @if meta.type-of($header-background) == 'color' {\r\n            $expand-all-icon-color: rgba(text-contrast($header-background), .87);\r\n        }\r\n    }\r\n\r\n    @if not($expand-all-icon-hover-color) and $header-background {\r\n        $expand-all-icon-hover-color: text-contrast($header-background);\r\n    }\r\n\r\n    @if not($group-label-text) and $group-row-background {\r\n        $group-label-text: text-contrast($group-row-background)\r\n    }\r\n\r\n    @if not($group-count-background) and $group-row-background {\r\n        $group-count-background: text-contrast($group-row-background);\r\n    }\r\n\r\n    @if not($group-count-text-color) and $group-count-background {\r\n        $group-count-text-color: text-contrast($group-count-background);\r\n    }\r\n\r\n    @if not($grouparea-background) and $header-background {\r\n        $grouparea-background: $header-background\r\n    }\r\n\r\n    @if not($grouparea-color) and $grouparea-background {\r\n        @if meta.type-of($grouparea-background) == 'color' {\r\n            $grouparea-color: rgba(text-contrast($grouparea-background), .8)\r\n        }\r\n    }\r\n\r\n    @if not($grouparea-color) and $header-background {\r\n        @if meta.type-of($header-background) == 'color' {\r\n            $grouparea-color: rgba(text-contrast($header-background), .8)\r\n        }\r\n    }\r\n\r\n    @if not($drop-area-background) and $grouparea-background {\r\n        $drop-area-background: text-contrast($grouparea-background);\r\n    }\r\n\r\n    @if not($drop-area-on-drop-background) and $drop-area-background {\r\n        $drop-area-on-drop-background: $drop-area-background;\r\n    }\r\n\r\n    @if not($drop-area-text-color) and $drop-area-background {\r\n        $drop-area-text-color: text-contrast($drop-area-background)\r\n    }\r\n\r\n    @if not($drop-area-icon-color) and $drop-area-background {\r\n        $drop-area-icon-color: text-contrast($drop-area-background)\r\n    }\r\n\r\n    @if not($filtering-header-background) and $header-background {\r\n        @if meta.type-of($header-background) == 'color' {\r\n            @if luminance($header-background) < .5 {\r\n                $filtering-header-background: to-opaque(color.scale($header-background, $lightness: 5%));\r\n            } @else {\r\n                $filtering-header-background: to-opaque(color.scale($header-background, $lightness: -5%));\r\n            }\r\n        }\r\n    }\r\n\r\n    @if not($filtering-header-text-color) and $filtering-header-background {\r\n        $filtering-header-text-color: text-contrast($filtering-header-background);\r\n    }\r\n\r\n    @if not($filtering-row-background) and $header-background {\r\n        @if meta.type-of($header-background) == 'color' {\r\n            @if luminance($header-background) < .5 {\r\n                $filtering-row-background: to-opaque(color.scale($header-background, $lightness: 5%));\r\n            } @else {\r\n                $filtering-row-background: to-opaque(color.scale($header-background, $lightness: -5%));\r\n            }\r\n        }\r\n    }\r\n\r\n    @if not($filtering-row-text-color) and $filtering-row-background {\r\n        $filtering-row-text-color: text-contrast(to-opaque($filtering-row-background));\r\n    }\r\n\r\n    @if not($body-summaries-text-color) and $body-summaries-background {\r\n        $body-summaries-text-color: text-contrast($body-summaries-background);\r\n    }\r\n\r\n    @if not($root-summaries-text-color) and $root-summaries-background {\r\n        $root-summaries-text-color: text-contrast($root-summaries-background);\r\n    }\r\n\r\n    @if not($grid-shadow) {\r\n        $grid-elevation: map.get($grid-schema, 'grid-elevation');\r\n        $grid-shadow: elevation($grid-elevation);\r\n    }\r\n\r\n    @if not($drag-shadow) {\r\n        $drag-elevation: map.get($grid-schema, 'drag-elevation');\r\n        $drag-shadow: elevation($drag-elevation);\r\n    }\r\n\r\n    @if not($drop-area-border-radius) {\r\n        $drop-area-border-radius: border-radius(map.get($theme, 'drop-area-border-radius')...);\r\n    }\r\n\r\n    @return extend($theme, (\r\n        name: $name,\r\n        selector: $selector,\r\n\r\n        header-background: $header-background,\r\n        header-text-color: $header-text-color,\r\n        header-selected-background:  $header-selected-background,\r\n        header-selected-text-color:  $header-selected-text-color,\r\n        header-border-width: $header-border-width,\r\n        header-border-style: $header-border-style,\r\n        header-border-color: $header-border-color,\r\n\r\n        sorted-header-icon-color: $sorted-header-icon-color,\r\n\r\n        ghost-header-text-color: $ghost-header-text-color,\r\n        ghost-header-icon-color: $ghost-header-icon-color,\r\n        ghost-header-background: $ghost-header-background,\r\n\r\n        content-background: $content-background,\r\n        content-text-color: $content-text-color,\r\n\r\n        row-odd-background: $row-odd-background,\r\n        row-even-background: $row-even-background,\r\n        row-odd-text-color: $row-odd-text-color,\r\n        row-even-text-color: $row-even-text-color,\r\n        row-selected-background: $row-selected-background,\r\n        row-selected-hover-background: $row-selected-hover-background,\r\n        row-selected-text-color: $row-selected-text-color,\r\n        row-selected-hover-text-color: $row-selected-hover-text-color,\r\n        row-hover-background: $row-hover-background,\r\n        row-hover-text-color: $row-hover-text-color,\r\n        row-border-color: $row-border-color,\r\n\r\n        pinned-border-width: $pinned-border-width,\r\n        pinned-border-style: $pinned-border-style,\r\n        pinned-border-color: $pinned-border-color,\r\n\r\n        cell-active-border-color: $cell-active-border-color,\r\n        cell-selected-background: $cell-selected-background,\r\n        cell-editing-background: $cell-editing-background,\r\n        cell-editing-foreground: $cell-editing-foreground,\r\n        cell-editing-focus-foreground: $cell-editing-focus-foreground,\r\n        cell-selected-text-color: $cell-selected-text-color,\r\n\r\n        edit-mode-color: $edit-mode-color,\r\n        edited-row-indicator: $edited-row-indicator,\r\n        cell-edited-value-color: $cell-edited-value-color,\r\n        cell-new-color: $cell-new-color,\r\n\r\n        cell-disabled-color: $cell-disabled-color,\r\n\r\n        resize-line-color: $resize-line-color,\r\n\r\n        drop-indicator-color: $drop-indicator-color,\r\n\r\n        grouparea-background: $grouparea-background,\r\n        grouparea-color: $grouparea-color,\r\n\r\n        group-label-column-name-text: $group-label-column-name-text,\r\n        group-label-icon: $group-label-icon,\r\n        group-label-text: $group-label-text,\r\n\r\n        expand-all-icon-color: $expand-all-icon-color,\r\n        expand-all-icon-hover-color: $expand-all-icon-hover-color,\r\n\r\n        expand-icon-color: $expand-icon-color,\r\n        expand-icon-hover-color: $expand-icon-hover-color,\r\n        active-expand-icon-color: $active-expand-icon-color,\r\n        active-expand-icon-hover-color: $active-expand-icon-hover-color,\r\n\r\n        group-count-background: $group-count-background,\r\n        group-count-text-color: $group-count-text-color,\r\n\r\n        group-row-background: $group-row-background,\r\n        group-row-selected-background: $group-row-selected-background,\r\n\r\n        drop-area-text-color: $drop-area-text-color,\r\n        drop-area-icon-color: $drop-area-icon-color,\r\n        drop-area-on-drop-background: $drop-area-on-drop-background,\r\n        drop-area-background: $drop-area-background,\r\n\r\n        filtering-header-background: $filtering-header-background,\r\n        filtering-header-text-color: $filtering-header-text-color,\r\n        filtering-row-background: $filtering-row-background,\r\n        filtering-row-text-color: $filtering-row-text-color,\r\n        filtering-background-and: $filtering-background-and,\r\n        filtering-background-or: $filtering-background-or,\r\n        filtering-background-and--focus: $filtering-background-and--focus,\r\n        filtering-background-or--focus: $filtering-background-or--focus,\r\n\r\n        tree-filtered-text-color: $tree-filtered-text-color,\r\n        tree-selected-filtered-row-text-color: $tree-selected-filtered-row-text-color,\r\n        tree-selected-filtered-cell-text-color: $tree-selected-filtered-cell-text-color,\r\n\r\n        body-summaries-background: $body-summaries-background,\r\n        body-summaries-text-color: $body-summaries-text-color,\r\n        root-summaries-background: $root-summaries-background,\r\n        root-summaries-text-color: $root-summaries-text-color,\r\n\r\n        row-highlight: $row-highlight,\r\n        grid-shadow: $grid-shadow,\r\n        drag-shadow: $drag-shadow,\r\n        row-ghost-background: $row-ghost-background,\r\n        row-drag-color: $row-drag-color,\r\n        drop-area-border-radius: $drop-area-border-radius,\r\n        sortable-header-icon-hover-color: $sortable-header-icon-hover-color,\r\n        grid-border-color: $grid-border-color,\r\n\r\n        cell-selected-within-background: $cell-selected-within-background,\r\n        cell-selected-within-text-color: $cell-selected-within-text-color,\r\n\r\n        _meta: map.merge(if($meta, $meta, ()), (\r\n            variant: map.get($schema, '_meta', 'theme'),\r\n            theme-variant: map.get($schema, '_meta', 'variant')\r\n        )),\r\n    ));\r\n}\r\n\r\n@mixin _filtering-scroll-mask($theme, $dir) {\r\n    display: block;\r\n    position: absolute;\r\n    width: rem(10px);\r\n    content: '';\r\n    inset-block: rem(-2px);\r\n    background: linear-gradient(to #{$dir}, var-get($theme, 'filtering-row-background'), transparent);\r\n}\r\n\r\n/// @param {Map} $theme - The theme used to style the component.\r\n/// @requires {mixin} excel-filtering\r\n@mixin grid($theme) {\r\n    @include css-vars($theme);\r\n\r\n    @include scale-in-ver-center();\r\n\r\n    $variant: map.get($theme, '_meta', 'variant');\r\n    $theme-variant: map.get($theme, '_meta', 'theme-variant');\r\n    $bootstrap-theme: $variant == 'bootstrap';\r\n    $not-bootstrap-theme: $variant != 'bootstrap';\r\n\r\n    $cbx-size: map.get((\r\n        material: rem(20px),\r\n        fluent: rem(20px),\r\n        bootstrap: rem(14px),\r\n        indigo-design: rem(20px),\r\n    ), $variant);\r\n    $cbx-bs-size: rem(14px);\r\n\r\n    $grid-shadow: var-get($theme, 'grid-shadow');\r\n\r\n    $grid-caption-fs: rem(20px);\r\n    $grid-caption-lh: rem(32px);\r\n    $grid-caption-padding: rem(16px) rem(24px);\r\n\r\n    $grid-head-fs: rem(12px);\r\n    $grid-head-fw: 600;\r\n    $transition: all 120ms $ease-in-out-cubic;\r\n\r\n    // Cell\r\n    $grid-cell-align-num: end;\r\n    $grid-cell-fs: rem(13px);\r\n    $grid-cell-lh: rem(16px);\r\n    $grid-cell-pinned-style: rem(1px) solid;\r\n    $grid-cell-pinned-border-color: color($color: 'gray', $variant: 300);\r\n\r\n    $grid-header-border: var-get($theme, 'header-border-width') var-get($theme, 'header-border-style') var-get($theme, 'header-border-color');\r\n\r\n    $cell-pin: (\r\n        style: var-get($theme, 'pinned-border-width') var-get($theme, 'pinned-border-style'),\r\n        color: var-get($theme, 'pinned-border-color')\r\n    );\r\n\r\n    $padding-comfortable: rem(24px);\r\n    $padding-cosy: rem(16px);\r\n    $padding-compact: rem(12px);\r\n\r\n    $grid-header-padding-inline: (\r\n        comfortable: $padding-comfortable,\r\n        cosy: $padding-cosy,\r\n        compact: $padding-compact\r\n    );\r\n\r\n    $pivot-row-aria-padding: (\r\n        comfortable: $padding-comfortable,\r\n        cosy: $padding-cosy,\r\n        compact: $padding-compact\r\n    );\r\n\r\n    $grid-cbx-padding: (\r\n        comfortable: $padding-comfortable,\r\n        cosy: $padding-cosy,\r\n        compact: $padding-compact\r\n    );\r\n\r\n    $cbx-padding: map.get($grid-cbx-padding, 'comfortable');\r\n    $cbx-padding-cosy: map.get($grid-cbx-padding, 'cosy');\r\n    $cbx-padding-compact: map.get($grid-cbx-padding, 'compact');\r\n\r\n    $grid-header-height: (\r\n        comfortable: rem(50px),\r\n        cosy: rem(40px),\r\n        compact: rem(32px)\r\n    );\r\n\r\n    $drop-area-height: (\r\n        comfortable: rem(32px),\r\n        cosy: rem(24px),\r\n        compact: rem(24px)\r\n    );\r\n\r\n    $cell-padding-comfortable: rem(24px);\r\n    $cell-padding-cosy: rem(16px);\r\n    $cell-padding-compact: rem(12px);\r\n\r\n    $grid-cell-padding-inline: (\r\n        comfortable: $cell-padding-comfortable,\r\n        cosy: $cell-padding-cosy,\r\n        compact: $cell-padding-compact\r\n    );\r\n\r\n    $hierarchical-grid-indent: (\r\n        comfortable: rem(24px),\r\n        cosy: rem(16px),\r\n        compact: rem(12px)\r\n    );\r\n\r\n    $hierarchical-action-icon: rem(24px);\r\n\r\n    $hierarchical-indent: (\r\n        comfortable: calc(2 * #{map.get($hierarchical-grid-indent, 'comfortable')} + #{$hierarchical-action-icon}),\r\n        cosy: calc(2 * #{map.get($hierarchical-grid-indent, 'cosy')} + #{$hierarchical-action-icon}),\r\n        compact: calc(2 * #{map.get($hierarchical-grid-indent, 'compact')} + #{$hierarchical-action-icon})\r\n    );\r\n\r\n    $hierarchical-indent-scroll: (\r\n        comfortable: calc(#{map.get($hierarchical-grid-indent, 'comfortable')} + 18px),\r\n        cosy: calc(#{map.get($hierarchical-grid-indent, 'cosy')} + 18px),\r\n        compact: calc(#{map.get($hierarchical-grid-indent, 'compact')} + 18px)\r\n    );\r\n\r\n    $grouparea-padding-inline: (\r\n        comfortable: rem(24px),\r\n        cosy: rem(16px),\r\n        compact: rem(12px)\r\n    );\r\n\r\n    $grouparea-min-height: (\r\n        comfortable: rem(57px),\r\n        cosy: rem(49px),\r\n        compact: rem(41px)\r\n    );\r\n\r\n    $grid-grouping-indicator-padding: (\r\n        comfortable: rem(24px),\r\n        cosy: rem(16px),\r\n        compact: rem(12px)\r\n    );\r\n\r\n    $indicator-icon-width: rem(24px);\r\n    $drag-icon-size: rem(24px);\r\n    $grouping-padding-right: rem(12px);\r\n\r\n    $grid-header-weight: map.get((\r\n        material: 600,\r\n        fluent: 800,\r\n        bootstrap: 700,\r\n        indigo-design: 600,\r\n    ), $variant);\r\n\r\n    igx-grid,\r\n    igx-hierarchical-grid,\r\n    igx-pivot-grid,\r\n    igx-tree-grid {\r\n        @if $variant == 'material' {\r\n            @if $theme-variant == 'light' {\r\n                --igx-chip-disabled-text-color: #{color($color: 'gray', $variant: 500)};\r\n                --igx-chip-disabled-background: #{color($color: 'gray', $variant: 300)};\r\n                --igx-chip-disabled-border-color: #{color($color: 'gray', $variant: 300)};\r\n            }\r\n            @if $theme-variant == 'dark' {\r\n                --igx-chip-disabled-text-color: #{color($color: 'gray', $variant: 300)};\r\n                --igx-chip-disabled-background: #{color($color: 'gray', $variant: 200)};\r\n                --igx-chip-disabled-border-color: #{color($color: 'gray', $variant: 200)};\r\n            }\r\n        }\r\n\r\n        @if $variant == 'fluent' {\r\n            @if $theme-variant == 'dark' {\r\n                --igx-chip-disabled-text-color: #{color($color: 'gray', $variant: 400)};\r\n                --igx-chip-disabled-background: #{color($color: 'gray', $variant: 200)};\r\n                --igx-chip-disabled-border-color: #{color($color: 'gray', $variant: 200)};\r\n            }\r\n        }\r\n\r\n        @if $variant == 'bootstrap' {\r\n            @if $theme-variant == 'dark' {\r\n                --igx-chip-disabled-text-color: #{color($color: 'gray', $variant: 400)};\r\n                --igx-chip-disabled-background: #{color($color: 'gray', $variant: 200)};\r\n                --igx-chip-disabled-border-color: #{color($color: 'gray', $variant: 200)};\r\n            }\r\n        }\r\n\r\n        @if $variant == 'indigo-design' {\r\n            @if $theme-variant == 'light' {\r\n                --igx-chip-disabled-text-color: #{color($color: 'gray', $variant: 500)};\r\n                --igx-chip-disabled-background: #{color($color: 'gray', $variant: 200)};\r\n                --igx-chip-disabled-border-color: #{color($color: 'gray', $variant: 300)};\r\n            }\r\n            @if $theme-variant == 'dark' {\r\n                --igx-chip-disabled-text-color: #{color($color: 'gray', $variant: 300)};\r\n                --igx-chip-disabled-background: #{color($color: 'gray', $variant: 200)};\r\n                --igx-chip-disabled-border-color: #{color($color: 'gray', $variant: 200)};\r\n            }\r\n        }\r\n    }\r\n\r\n    %disable-focus-styles {\r\n        outline: 0;\r\n    }\r\n\r\n    %grid-host {\r\n        --component-size: var(--ig-size, var(--ig-size-large));\r\n    }\r\n\r\n    %grid-display {\r\n        @include sizable();\r\n        --header-size: #{sizable(map.get($grid-header-height, 'compact'), map.get($grid-header-height, 'cosy'), map.get($grid-header-height, 'comfortable'))};\r\n        --grouparea-size: #{sizable(map.get($grouparea-min-height, 'compact'), map.get($grouparea-min-height, 'cosy'), map.get($grouparea-min-height, 'comfortable'))};\r\n        --igx-tree-indent-size: #{rem(24px)};\r\n\r\n        position: relative;\r\n        display: grid;\r\n        grid-template-rows: auto auto auto 1fr auto auto;\r\n        grid-template-columns: 100%;\r\n        overflow: hidden;\r\n        box-shadow: $grid-shadow;\r\n\r\n        @if $variant == 'fluent' {\r\n            box-shadow: 0 0 0 rem(1px) var-get($theme, 'grid-border-color');\r\n        }\r\n\r\n        outline-style: none;\r\n        z-index: 1;\r\n\r\n        %cbx-display {\r\n            min-width: $cbx-size;\r\n        }\r\n    }\r\n\r\n    %grid-display-cosy {\r\n        --component-size: var(--ig-size, var(--ig-size-medium));\r\n        --igx-tree-indent-size: #{rem(16px)};\r\n    }\r\n\r\n    %grid-display-compact {\r\n        --component-size: var(--ig-size, var(--ig-size-small));\r\n        --igx-tree-indent-size: #{rem(12px)};\r\n    }\r\n\r\n    %grid-caption {\r\n        display: flex;\r\n        align-items: center;\r\n        font-size: $grid-caption-fs;\r\n        line-height: $grid-caption-lh;\r\n        padding: $grid-caption-padding;\r\n        grid-row: 1;\r\n    }\r\n\r\n    %grid-thead,\r\n    %grid-tfoot {\r\n        position: relative;\r\n        display: flex;\r\n        background: var-get($theme, 'header-background');\r\n        color: var-get($theme, 'header-text-color');\r\n        overflow: hidden;\r\n        outline-style: none;\r\n\r\n        %grid-row {\r\n            position: relative;\r\n            background: inherit;\r\n            color: inherit;\r\n            z-index: 2;\r\n\r\n            &:hover {\r\n                background: inherit;\r\n                color: inherit;\r\n            }\r\n        }\r\n\r\n        > [aria-activedescendant] {\r\n            outline-style: none;\r\n        }\r\n    }\r\n\r\n    %grid-thead {\r\n        border-bottom: $grid-header-border;\r\n\r\n        @if $bootstrap-theme {\r\n            border-bottom-width: rem(2px);\r\n        }\r\n\r\n        z-index: 2;\r\n\r\n        %grid__cbx-selection--push {\r\n            align-items: flex-start;\r\n            padding-block-start: pad-block(math.div(map.get($grid-header-height, 'compact') - rem(20px), 2), math.div(map.get($grid-header-height, 'cosy') - rem(20px), 2), math.div(map.get($grid-header-height, 'comfortable') - rem(20px), 2));\r\n        }\r\n\r\n        %grid-row {\r\n            border-bottom: none;\r\n        }\r\n    }\r\n\r\n    %grid-thead-container {\r\n        grid-row: 3;\r\n        display: flex;\r\n        overflow: hidden;\r\n\r\n        %igx-grid__drag-indicator {\r\n            cursor: default;\r\n        }\r\n\r\n        %grid-row--mrl {\r\n            %igx-grid__hierarchical-expander--header,\r\n            %igx-grid__header-indentation,\r\n            %igx-grid__row-indentation,\r\n            %grid__cbx-selection {\r\n                border-bottom: var-get($theme, 'header-border-width') var-get($theme, 'header-border-style') var-get($theme, 'header-border-color');\r\n            }\r\n        }\r\n    }\r\n\r\n    %grid-thead--cosy {\r\n        %grid__cbx-selection--push--cosy {\r\n            align-items: flex-start;\r\n        }\r\n    }\r\n\r\n    %grid-thead--compact {\r\n        %grid__cbx-selection--push--compact {\r\n            align-items: flex-start;\r\n        }\r\n    }\r\n\r\n    %grid-thead-title {\r\n        flex-basis: auto !important;\r\n        align-items: center !important;\r\n        border-bottom: $grid-header-border;\r\n        height: var(--header-size);\r\n        padding-inline: pad-inline(map.get($grid-cell-padding-inline, 'compact'), map.get($grid-cell-padding-inline, 'cosy'), map.get($grid-cell-padding-inline, 'comfortable'));\r\n        padding-block: 0;\r\n    }\r\n\r\n    %grid-thead-title--pinned {\r\n        border-inline-end: map.get($cell-pin, 'style') map.get($cell-pin, 'color') !important;\r\n    }\r\n\r\n    %grid-thead-group {\r\n        display: flex;\r\n        flex-flow: row nowrap;\r\n    }\r\n\r\n    /* We set those with position relative\r\n    so that the drop indicators be scoped\r\n    to their respective group. The item\r\n    being the topmost element, while the\r\n    subgroup encapsulates children of each\r\n    thead item and group.\r\n    */\r\n    %grid-thead-item {\r\n        display: flex;\r\n        flex-flow: column nowrap;\r\n\r\n        %grid-thead-group {\r\n            flex: 1 1 auto;\r\n        }\r\n\r\n        %grid-cell-header {\r\n            flex: 1 1 auto;\r\n        }\r\n\r\n        %grid-thead-title {\r\n            flex: 0 0 auto;\r\n        }\r\n    }\r\n\r\n    %grid-thead-item,\r\n    %grid-thead-subgroup {\r\n        position: relative;\r\n    }\r\n\r\n    %grid-tfoot {\r\n        grid-row: 5;\r\n        border-top: $grid-header-border;\r\n        z-index: 10001;\r\n    }\r\n\r\n    %grid-footer {\r\n        grid-row: 7;\r\n    }\r\n\r\n    %grid-display-container-thead {\r\n        width: 100%;\r\n        overflow: visible;\r\n    }\r\n\r\n    %grid-display-container-tr {\r\n        width: 100%;\r\n        overflow: visible;\r\n    }\r\n\r\n    %grid-mrl-block {\r\n        display: grid;\r\n        background: inherit;\r\n        position: relative;\r\n\r\n        %grid-thead-item {\r\n            display: flex;\r\n        }\r\n\r\n        %grid-cell-header {\r\n            align-items: center;\r\n            flex-grow: 1;\r\n            border-bottom: $grid-header-border;\r\n        }\r\n\r\n        %grid-cell-display {\r\n            border-inline-end: rem(1px) solid var-get($theme, 'row-border-color');\r\n            border-bottom: rem(1px) solid var-get($theme, 'row-border-color');\r\n        }\r\n    }\r\n\r\n    %grid-row--mrl {\r\n        &%grid-row {\r\n            border-bottom-color: transparent;\r\n        }\r\n\r\n        %grid__cbx-selection,\r\n        %igx-grid__row-indentation,\r\n        %igx-grid__drag-indicator {\r\n            border-bottom: rem(1px) solid var-get($theme, 'row-border-color');\r\n        }\r\n    }\r\n\r\n    %grid-tbody {\r\n        position: relative;\r\n        background: var-get($theme, 'content-background');\r\n        color: var-get($theme, 'content-text-color');\r\n        overflow: hidden;\r\n        z-index: 1;\r\n        outline-style: none;\r\n    }\r\n\r\n    %grid-tbody-container {\r\n        position: relative;\r\n        display: flex;\r\n        grid-row: 4;\r\n        overflow: hidden;\r\n    }\r\n\r\n    %grid-tbody-message {\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        height: 100%;\r\n        color: var-get($theme, 'content-text-color');\r\n        flex-direction: column;\r\n        padding: rem(24px);\r\n    }\r\n\r\n    %igx-grid__loading {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        height: 100%;\r\n        min-height: rem(100px);\r\n\r\n        > %circular-display {\r\n            width: rem(50);\r\n            height: rem(50);\r\n        }\r\n    }\r\n\r\n    %grid-scroll {\r\n        grid-row: 6;\r\n        display: flex;\r\n        flex-flow: row nowrap;\r\n        width: 100%;\r\n        background: var-get($theme, 'header-background');\r\n        z-index: 10001;\r\n    }\r\n\r\n    %grid-thead-thumb {\r\n        background: var-get($theme, 'header-background');\r\n        border-inline-start: rem(1px) solid var-get($theme, 'header-border-color');\r\n    }\r\n\r\n    %grid-tfoot-thumb {\r\n        position: absolute;\r\n        top: 0;\r\n        inset-inline-end: 0;\r\n        background: var-get($theme, 'header-background');\r\n        border-inline-start: rem(1px) solid var-get($theme, 'header-border-color');\r\n    }\r\n\r\n    %grid-tbody-scrollbar {\r\n        background: var-get($theme, 'content-background');\r\n        border-inline-start: rem(1px) solid var-get($theme, 'row-border-color');\r\n        position: relative;\r\n    }\r\n\r\n    %grid-tbody-scrollbar-start {\r\n        background: var-get($theme, 'header-background');\r\n    }\r\n\r\n    %grid-tbody-scrollbar-main {\r\n        position: relative;\r\n    }\r\n\r\n    %grid-tbody-scrollbar-end {\r\n        background: var-get($theme, 'header-background');\r\n    }\r\n\r\n    %grid-scroll-start {\r\n        background: var-get($theme, 'header-background');\r\n    }\r\n\r\n    %grid-scroll-main {\r\n        igx-display-container {\r\n            height: 0;\r\n        }\r\n\r\n        igx-horizontal-virtual-helper {\r\n            height: 100%;\r\n        }\r\n    }\r\n\r\n    %grid-row {\r\n        display: flex;\r\n        background: var-get($theme, 'content-background');\r\n        border-bottom: rem(1px) solid var-get($theme, 'row-border-color');\r\n        outline-style: none;\r\n        position: relative;\r\n        background-clip: content-box !important;\r\n\r\n        &:hover {\r\n            background: var-get($theme, 'row-hover-background');\r\n            color: var-get($theme, 'row-hover-text-color');\r\n\r\n            %grid-cell--column-selected {\r\n                color: var-get($theme, 'row-selected-hover-text-color');\r\n                background: var-get($theme, 'row-selected-hover-background');\r\n            }\r\n\r\n            %grid-cell--cross-selected {\r\n                color: var-get($theme, 'cell-selected-within-text-color');\r\n                background: var-get($theme, 'cell-selected-within-background');\r\n            }\r\n        }\r\n\r\n        &%igx-grid__tr--ghost {\r\n            @include css-vars((\r\n                name: 'igx-grid-row',\r\n                row-ghost-background: map.get($theme, 'row-ghost-background'),\r\n                row-drag-color: map.get($theme, 'row-drago-color')\r\n            ));\r\n\r\n            background: var-get($theme, 'row-ghost-background');\r\n            color: var-get($theme, 'row-drag-color');\r\n            z-index: 1;\r\n        }\r\n    }\r\n\r\n    %igx-grid__drag-indicator {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        padding-inline: pad-inline(map.get($grid-cell-padding-inline, 'compact'), map.get($grid-cell-padding-inline, 'cosy'), map.get($grid-cell-padding-inline, 'comfortable'));\r\n        padding-block: 0;\r\n        flex: 1 0 auto;\r\n        // Fix for IE 11\r\n        min-width: calc(#{$drag-icon-size} + #{$cell-padding-comfortable});\r\n        background: inherit;\r\n        z-index: 4;\r\n        cursor: move;\r\n        border-inline-end: rem(1px) solid transparent;\r\n        background-clip: border-box;\r\n\r\n        igx-icon {\r\n            width: var(--igx-icon-size, #{$drag-icon-size});\r\n            height: var(--igx-icon-size, #{$drag-icon-size});\r\n            font-size: var(--igx-icon-size, #{$drag-icon-size});\r\n        }\r\n    }\r\n\r\n    %igx-grid__drag-indicator--header {\r\n        border-inline-end: $grid-header-border;\r\n    }\r\n\r\n    %igx-grid__drag-indicator--off {\r\n        color: var-get($theme, 'row-drag-color');\r\n    }\r\n\r\n    %igx-grid__tr--drag {\r\n        opacity: .5;\r\n    }\r\n\r\n    %grid-row--odd {\r\n        background: var-get($theme, 'row-odd-background');\r\n        color: var-get($theme, 'row-odd-text-color');\r\n    }\r\n\r\n    %grid-row--even {\r\n        background: var-get($theme, 'row-even-background');\r\n        color: var-get($theme, 'row-even-text-color');\r\n    }\r\n\r\n    %igx-grid__tr--expanded {\r\n        border-bottom: none;\r\n    }\r\n\r\n    %igx-grid__tr--pinned {\r\n        position: relative;\r\n        background: inherit;\r\n        z-index: 10000;\r\n\r\n        %igx-grid__hierarchical-expander--empty {\r\n            border-inline-end: rem(1px) solid var-get($theme, 'header-border-color');\r\n        }\r\n    }\r\n\r\n    %igx-grid__tr--pinned-top {\r\n        border-bottom: map.get($cell-pin, 'style') map.get($cell-pin, 'color') !important;\r\n    }\r\n\r\n    %igx-grid__tr--pinned-bottom {\r\n        border-top: map.get($cell-pin, 'style') map.get($cell-pin, 'color') !important;\r\n        position: absolute;\r\n        bottom: 0;\r\n    }\r\n\r\n    %igx-grid__td--centered {\r\n        justify-content: center;\r\n    }\r\n\r\n    %igx-grid__td--bool {\r\n        igx-icon {\r\n            width: var(--igx-icon-size, #{rem(18px)});\r\n            height: var(--igx-icon-size, #{rem(18px)});\r\n            font-size: var(--igx-icon-size, #{rem(18px)});\r\n        }\r\n\r\n        %igx-icon--error {\r\n            color: color($color: 'gray', $variant: 500);\r\n        }\r\n    }\r\n\r\n    %igx-grid__td--bool-true {\r\n        %igx-icon--success {\r\n            color: color($color: 'gray', $variant: 700);\r\n        }\r\n    }\r\n\r\n    %igx-grid__tr--edit {\r\n        border-bottom: rem(1px) solid var-get($theme, 'edit-mode-color');\r\n        position: relative;\r\n\r\n        &::after {\r\n            content: '';\r\n            position: absolute;\r\n            height: rem(1);\r\n            width: 100%;\r\n            top: rem(-1);\r\n            inset-inline-start: 0;\r\n            background: var-get($theme, 'edit-mode-color');\r\n        }\r\n\r\n        &%grid-row {\r\n            border-bottom: rem(1px) solid var-get($theme, 'edit-mode-color');\r\n        }\r\n\r\n        %igx-grid__td--editing {\r\n            border: none;\r\n\r\n            %form-group-bundle--focus {\r\n                caret-color: var-get($theme, 'edit-mode-color') !important;\r\n            }\r\n\r\n            %form-group-bundle--fluent--focus {\r\n                &::after {\r\n                    border: none !important;\r\n                }\r\n            }\r\n\r\n            %form-group-border {\r\n                background: var-get($theme, 'edit-mode-color') !important;\r\n            }\r\n        }\r\n\r\n        [aria-readonly='true'] {\r\n            color: var-get($theme, 'cell-disabled-color');\r\n\r\n            igx-icon {\r\n                color: var-get($theme, 'cell-disabled-color');\r\n            }\r\n        }\r\n    }\r\n\r\n    %igx-grid__tr--inner {\r\n        display: flex;\r\n        background: inherit;\r\n    }\r\n\r\n    %igx-grid__tr--header {\r\n        display: flex;\r\n        align-items: center;\r\n    }\r\n\r\n    %igx-grid__tr--add-animate {\r\n        @include animation(scale-in-ver-center .2s $ease-in-out-quad);\r\n    }\r\n\r\n    %grid-row--edit-mrl {\r\n        &:first-of-type::after {\r\n            top: 0;\r\n            z-index: 5;\r\n        }\r\n    }\r\n\r\n    %igx-grid__tr--edited {\r\n        &::before {\r\n            content: '';\r\n            position: absolute;\r\n            width: if($variant == 'indigo-design', rem(4px), rem(2px));\r\n            height: 100%;\r\n            z-index: 10000;\r\n            background: var-get($theme, 'edited-row-indicator');\r\n        }\r\n    }\r\n\r\n    %grid-row--group {\r\n        position: relative;\r\n        background: var-get($theme, 'header-background') !important;\r\n    }\r\n\r\n    %igx-grid-row--filtered {\r\n        %grid-cell-text {\r\n            color: var-get($theme, 'tree-filtered-text-color');\r\n        }\r\n\r\n        %igx-grid__tree-grouping-indicator {\r\n            color: var-get($theme, 'tree-filtered-text-color');\r\n\r\n            &:hover {\r\n                color: var-get($theme, 'tree-filtered-text-color');\r\n            }\r\n        }\r\n\r\n        %grid-cell--selected {\r\n            %grid-cell-text {\r\n                color: var-get($theme, 'tree-selected-filtered-cell-text-color');\r\n            }\r\n\r\n            %igx-grid__tree-grouping-indicator {\r\n                color: var-get($theme, 'tree-selected-filtered-cell-text-color');\r\n\r\n                &:hover {\r\n                    color: var-get($theme, 'tree-selected-filtered-cell-text-color');\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    %grid-row--selected--filtered {\r\n        %grid-cell-text {\r\n            color: var-get($theme, 'tree-selected-filtered-row-text-color');\r\n        }\r\n\r\n        %igx-grid__tree-grouping-indicator {\r\n            color: var-get($theme, 'tree-selected-filtered-row-text-color');\r\n\r\n            &:hover {\r\n                color: var-get($theme, 'tree-selected-filtered-row-text-color');\r\n            }\r\n        }\r\n\r\n        %grid-cell--selected {\r\n            %grid-cell-text {\r\n                color: var-get($theme, 'tree-selected-filtered-cell-text-color');\r\n            }\r\n\r\n            %igx-grid__tree-grouping-indicator {\r\n                color: var-get($theme, 'tree-selected-filtered-cell-text-color');\r\n\r\n                &:hover {\r\n                    color: var-get($theme, 'tree-selected-filtered-cell-text-color');\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    %igx-grid__tree-grouping-indicator {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        user-select: none;\r\n        outline-style: none;\r\n        margin-inline-end: rem(8);\r\n        cursor: pointer;\r\n\r\n        color: var-get($theme, 'expand-icon-color');\r\n\r\n        &:hover {\r\n            color: var-get($theme, 'expand-icon-hover-color')\r\n        }\r\n\r\n        [dir='rtl'] & {\r\n            transform: scaleX(-1);\r\n        }\r\n    }\r\n\r\n    %igx-grid__tree-loading-indicator {\r\n        width: rem(24px, 16px);\r\n        height: rem(24px, 16px);\r\n        margin-inline-end: rem(8px, 16px);\r\n\r\n        %circular-outer {\r\n            stroke: var-get($theme, 'expand-icon-color');\r\n        }\r\n\r\n        > %circular-display {\r\n            width: rem(24);\r\n            height: rem(24);\r\n        }\r\n    }\r\n\r\n    %grid-cell-display {\r\n        position: relative;\r\n        display: flex;\r\n        flex: 1 1 0%;\r\n        align-items: center;\r\n        outline-style: none;\r\n        padding-inline: pad-inline(map.get($grid-cell-padding-inline, 'compact'), map.get($grid-cell-padding-inline, 'cosy'), map.get($grid-cell-padding-inline, 'comfortable'));\r\n        padding-block: 0;\r\n        font-size: $grid-cell-fs;\r\n        line-height: $grid-cell-lh;\r\n        color: inherit;\r\n        text-align: start;\r\n        background-clip: border-box !important;\r\n    }\r\n\r\n    // This is no longer being extended and is left\r\n    // here for reference purposes only. It seems setting\r\n    // overflow: hidden on the cell prevents drag and selection\r\n    // of the cell.\r\n    // See github issue #9821\r\n    %igx-grid__td--tree-cell {\r\n        overflow: hidden;\r\n    }\r\n\r\n    %grid-cell-text {\r\n        @include ellipsis();\r\n    }\r\n\r\n    %grid-cell--fixed-width {\r\n        flex-grow: 0;\r\n        outline-style: none;\r\n    }\r\n\r\n    %grid-cell--active {\r\n        box-shadow: inset 0 0 0 rem(1px) var-get($theme, 'cell-active-border-color');\r\n\r\n        %igx-grid__filtering-cell,\r\n        %grid-cell-header {\r\n            border-inline-end-color: var-get($theme, 'cell-active-border-color');\r\n            border-bottom-color: var-get($theme, 'cell-active-border-color');\r\n        }\r\n    }\r\n\r\n    %grid-cell--invalid {\r\n        padding-inline-end: rem(4px) !important;\r\n\r\n        > igx-icon {\r\n            margin-inline-start: auto;\r\n            color: color($color: 'error');\r\n            width: var(--igx-icon-size, rem(18px));\r\n            height: var(--igx-icon-size, rem(18px));\r\n            font-size: var(--igx-icon-size, rem(18px));\r\n        }\r\n\r\n        %grid-cell-text {\r\n            width: 100%;\r\n        }\r\n\r\n        .igx-input-group__bundle {\r\n            &:focus-within {\r\n                &::after {\r\n                    border: none !important;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    %grid-cell--valid {\r\n        box-shadow: inset 0 0 0 rem(2px) color($color: 'success') !important;\r\n    }\r\n\r\n    %grid-cell--pinned-selected,\r\n    %grid-cell--selected {\r\n        color: var-get($theme, 'cell-selected-text-color');\r\n        background: var-get($theme, 'cell-selected-background');\r\n        // this is causing an issue https://github.com/IgniteUI/igniteui-angular/issues/4981\r\n        // border-bottom: 0;\r\n\r\n        %igx-grid__tree-grouping-indicator {\r\n            &:hover {\r\n                color: var-get($theme, 'cell-selected-text-color');\r\n            }\r\n        }\r\n    }\r\n\r\n    %grid-row--selected {\r\n        color: var-get($theme, 'row-selected-text-color');\r\n        background: var-get($theme, 'row-selected-background');\r\n\r\n        %grid-cell--selected,\r\n        %grid-cell--pinned-selected {\r\n            color: var-get($theme, 'cell-selected-within-text-color');\r\n            background: var-get($theme, 'cell-selected-within-background');\r\n        }\r\n\r\n        &:hover {\r\n            background: var-get($theme, 'row-selected-hover-background');\r\n            color: var-get($theme, 'row-selected-hover-text-color');\r\n\r\n            %grid-cell--column-selected {\r\n                color: var-get($theme, 'row-selected-hover-text-color');\r\n                background: var-get($theme, 'row-selected-hover-background');\r\n            }\r\n        }\r\n\r\n        %igx-grid__tree-grouping-indicator {\r\n            color: var-get($theme, 'row-selected-text-color');\r\n\r\n            &:hover {\r\n                color: var-get($theme, 'row-selected-text-color');\r\n            }\r\n        }\r\n    }\r\n\r\n    %grid-cell--column-selected {\r\n        color: var-get($theme, 'row-selected-text-color');\r\n        background: var-get($theme, 'row-selected-background');\r\n    }\r\n\r\n    %grid-cell--cross-selected {\r\n        color: var-get($theme, 'cell-selected-within-text-color');\r\n        background: var-get($theme, 'cell-selected-within-background');\r\n    }\r\n\r\n    %igx-grid__td--new {\r\n        color: var-get($theme, 'cell-new-color');\r\n    }\r\n\r\n    %igx-grid__td--edited {\r\n        %grid-cell-text {\r\n            font-style: italic;\r\n            color: var-get($theme, 'cell-edited-value-color');\r\n            padding: 0 rem(1px);\r\n        }\r\n    }\r\n\r\n    %igx-grid__tr--deleted {\r\n        %grid-cell-text {\r\n            font-style: italic;\r\n            color: color(map.get($theme, 'palette'), 'error');\r\n            text-decoration: line-through;\r\n        }\r\n    }\r\n\r\n    %igx-grid__tr--disabled {\r\n        %grid-cell-text {\r\n            color: var-get($theme, 'cell-disabled-color');\r\n        }\r\n    }\r\n\r\n    %igx-grid__td--editing {\r\n        $editing-outline-width: rem(2px);\r\n        background: var-get($theme, 'cell-editing-background') !important;\r\n        box-shadow: inset 0 0 0 $editing-outline-width var-get($theme, 'edit-mode-color');\r\n        padding: 0 !important;\r\n\r\n        // Have a more stable visual editing experience\r\n        > igx-input-group,\r\n        igx-combo,\r\n        igx-select,\r\n        igx-date-picker,\r\n        igx-time-picker {\r\n            position: relative;\r\n            height: calc(100% - #{$editing-outline-width * 2});\r\n            width: calc(100% - #{$editing-outline-width * 2});\r\n            inset-inline-start: $editing-outline-width;\r\n            overflow: hidden;\r\n        }\r\n\r\n        igx-input-group {\r\n            height: 100%;\r\n\r\n            input {\r\n                height: 100%;\r\n                color: var-get($theme, 'cell-editing-foreground');\r\n            }\r\n\r\n            input:focus {\r\n                color: var-get($theme, 'cell-editing-focus-foreground');\r\n            }\r\n\r\n            --theme: fluent;\r\n        }\r\n\r\n        .igx-input-group__bundle {\r\n            height: 100% !important;\r\n            min-height: 100% !important;\r\n            border: none !important;\r\n\r\n            &::before {\r\n                content: none !important;\r\n            }\r\n\r\n            &::after {\r\n                display: none;\r\n            }\r\n        }\r\n\r\n        .igx-input-group__bundle-main,\r\n        .igx-input-group__bundle-start,\r\n        .igx-input-group__bundle-end {\r\n            height: calc(100% - #{$editing-outline-width * 2});\r\n        }\r\n\r\n        &.igx-grid__td--invalid {\r\n            box-shadow: inset 0 0 0 rem(2px) color($color: 'error') !important;\r\n            padding-inline-end: rem(4px) !important;\r\n        }\r\n\r\n        igx-prefix,\r\n        igx-suffix {\r\n            border-radius: 0 !important;\r\n            padding-top: 0 !important;\r\n            padding-bottom: 0 !important;\r\n        }\r\n\r\n        igx-date-range-picker {\r\n            height: 100%;\r\n        }\r\n\r\n        igx-time-picker [igxLabel] {\r\n            display: none;\r\n        }\r\n\r\n        input {\r\n            margin: 0 auto;\r\n            max-width: 100%;\r\n        }\r\n\r\n        %form-group-input {\r\n            // ignore global typography\r\n            font-size: $grid-cell-fs !important;\r\n            line-height: $grid-cell-lh !important;\r\n        }\r\n\r\n        &%grid-cell-number {\r\n            justify-content: flex-start !important;\r\n        }\r\n    }\r\n\r\n    %grid-cell--pinned {\r\n        position: relative;\r\n        background: inherit;\r\n        z-index: 9999;\r\n    }\r\n\r\n    %grid-cell--pinned--column-selected {\r\n        color: var-get($theme, 'row-selected-text-color');\r\n        background: var-get($theme, 'row-selected-background');\r\n\r\n        &:hover {\r\n            background: var-get($theme, 'row-selected-hover-background');\r\n            color: var-get($theme, 'row-selected-text-color');\r\n        }\r\n    }\r\n\r\n    %grid-cell--pinned-last {\r\n        border-inline-end: map.get($cell-pin, 'style') map.get($cell-pin, 'color') !important;\r\n\r\n        %igx-grid__filtering-cell,\r\n        %grid-cell-header {\r\n            border-inline-end: none;\r\n        }\r\n\r\n        &%grid-cell--editing {\r\n            border-inline-end: map.get($cell-pin, 'style') var-get($theme, 'cell-selected-background') !important;\r\n        }\r\n    }\r\n\r\n    %grid-cell--pinned-first {\r\n        border-inline-start: map.get($cell-pin, 'style') map.get($cell-pin, 'color') !important;\r\n\r\n        &%grid-cell--editing {\r\n            border-inline-start: map.get($cell-pin, 'style') var-get($theme, 'cell-selected-background') !important;\r\n        }\r\n    }\r\n\r\n    %grid-cell--row-pinned-first {\r\n        overflow: hidden;\r\n    }\r\n\r\n    %grid-cell--pinned-chip {\r\n        margin-inline-end: pad-inline(rem(4px), rem(8px), rem(12px));\r\n    }\r\n\r\n    %grid-cell-header {\r\n        flex-flow: row nowrap;\r\n        justify-content: space-between;\r\n        align-items: flex-end;\r\n        font-size: $grid-head-fs;\r\n        font-weight: $grid-head-fw;\r\n        min-width: 0;\r\n        padding-inline: pad-inline(map.get($grid-header-padding-inline, 'compact'), map.get($grid-header-padding-inline, 'cosy'), map.get($grid-header-padding-inline, 'comfortable'));\r\n        padding-block: 0;\r\n        border-inline-end: $grid-header-border;\r\n        min-height: var(--header-size);\r\n        outline-style: none;\r\n        overflow: hidden;\r\n        transition: color 250ms ease-in-out;\r\n    }\r\n\r\n    %grid-cell-header--filtering {\r\n        background: var-get($theme, 'filtering-header-background');\r\n        color: var-get($theme, 'filtering-header-text-color');\r\n        z-index: 3;\r\n    }\r\n\r\n    %grid-cell-header-title {\r\n        @include ellipsis();\r\n        font-weight: $grid-header-weight;\r\n        min-width: 3ch;\r\n        user-select: none;\r\n        cursor: initial;\r\n        flex-grow: 1; /* hey IE, the text should take most of the space */\r\n        // align-self: flex-end; /* commenting out for now on external request */\r\n        line-height: var(--header-size);\r\n        transition: color 250ms ease-in-out;\r\n    }\r\n\r\n    %grid-cell-header-icons {\r\n        display: inline-flex;\r\n        align-items: center;\r\n        justify-content: flex-end;\r\n        user-select: none;\r\n        min-width: rem(30px); /* sort-icon + filter icon width */\r\n        height: var(--header-size);\r\n        align-self: flex-end;\r\n\r\n        &:empty {\r\n            min-width: 0;\r\n        }\r\n\r\n        .sort-icon {\r\n            position: relative;\r\n            display: flex;\r\n\r\n            igx-icon {\r\n                width: var(--igx-icon-size, #{rem(15px)});\r\n                height: var(--igx-icon-size, #{rem(15px)});\r\n                font-size: var(--igx-icon-size, #{rem(15px)});\r\n            }\r\n\r\n            &::after {\r\n                content: attr(data-sortIndex);\r\n                position: absolute;\r\n                top: rem(-5px);\r\n                inset-inline-end: rem(-1px);\r\n                font-size: rem(10px);\r\n                text-align: end;\r\n                font-family: sans-serif;\r\n                line-height: rem(10px);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    %igx-grid-th__expander {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        margin-inline-end: rem(8px);\r\n        cursor: pointer;\r\n\r\n        igx-icon {\r\n            color: var-get($theme, 'expand-icon-color');\r\n        }\r\n\r\n        &:hover {\r\n            igx-icon {\r\n                color: var-get($theme, 'expand-icon-hover-color');\r\n            }\r\n        }\r\n    }\r\n\r\n    %igx-grid-th__group-title {\r\n        @include ellipsis();\r\n    }\r\n\r\n    %igx-grid-th--collapsible {\r\n        justify-content: normal;\r\n    }\r\n\r\n    %igx-grid-th--selectable {\r\n        color: var-get($theme, 'header-selected-text-color');\r\n        background: var-get($theme, 'header-selected-background');\r\n\r\n        @if $variant != 'indigo-design' {\r\n            opacity: .7;\r\n\r\n            &%grid__drag-ghost-image {\r\n                opacity: 1;\r\n            }\r\n        } @else {\r\n            opacity: 1;\r\n        }\r\n\r\n        .sort-icon {\r\n            color: var-get($theme, 'header-selected-text-color');\r\n\r\n            ::after {\r\n                background: var-get($theme, 'header-selected-background');\r\n            }\r\n        }\r\n\r\n        &%igx-grid-th--sorted {\r\n            .sort-icon {\r\n                color: var-get($theme, 'header-selected-text-color');\r\n\r\n                &:focus,\r\n                &:hover {\r\n                    color: var-get($theme, 'header-selected-text-color');\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    %igx-grid-th--selected {\r\n        color: var-get($theme, 'header-selected-text-color');\r\n        background: var-get($theme, 'header-selected-background');\r\n\r\n        .sort-icon::after {\r\n            background: var-get($theme, 'header-selected-background');\r\n        }\r\n\r\n        &%igx-grid-th--sorted {\r\n            .sort-icon {\r\n                color: var-get($theme, 'header-selected-text-color');\r\n\r\n                &:focus,\r\n                &:hover {\r\n                    color: var-get($theme, 'header-selected-text-color');\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    %igx-grid-th--active {\r\n        @extend %grid-cell--active;\r\n\r\n        %igx-grid-th--selected,\r\n        %igx-grid-th--selectable {\r\n            @extend %grid-cell--active;\r\n        }\r\n    }\r\n\r\n    %igx-grid-summary--active {\r\n        @extend %grid-cell--active !optional;\r\n    }\r\n\r\n    %igx-grid-th--sortable {\r\n        .sort-icon {\r\n            cursor: pointer;\r\n            opacity: .7;\r\n\r\n            &:hover {\r\n                opacity: 1;\r\n            }\r\n        }\r\n    }\r\n\r\n    %igx-grid-th--sorted {\r\n        .sort-icon {\r\n            opacity: 1;\r\n            color: var-get($theme, 'sorted-header-icon-color');\r\n\r\n            &:hover {\r\n                color: var-get($theme, 'sortable-header-icon-hover-color');\r\n            }\r\n        }\r\n    }\r\n\r\n    %igx-grid-th--filtrable {\r\n        %grid-cell-header-title {\r\n            opacity: .7;\r\n        }\r\n    }\r\n\r\n    %igx-grid-th--filtrable-sortable {\r\n        .sort-icon {\r\n            cursor: pointer;\r\n            opacity: .7;\r\n\r\n            &:hover {\r\n                opacity: 1;\r\n            }\r\n        }\r\n    }\r\n\r\n    .sort-icon {\r\n        transition: all 250ms ease-in-out;\r\n    }\r\n\r\n    %grid-cell-number {\r\n        text-align: $grid-cell-align-num;\r\n        justify-content: flex-end;\r\n\r\n        %grid-cell-header-icons {\r\n            justify-content: flex-start;\r\n            order: -1;\r\n\r\n            .sort-icon {\r\n                order: 1;\r\n            }\r\n        }\r\n    }\r\n\r\n    %grid__cbx-selection {\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        background: inherit;\r\n        z-index: 4;\r\n        background-clip: border-box;\r\n    }\r\n\r\n    %cbx-padding {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        padding-inline: pad-inline($cbx-padding-compact, $cbx-padding-cosy, $cbx-padding);\r\n    }\r\n\r\n    %grid__resize-handle {\r\n        position: absolute;\r\n        width: rem(4px);\r\n        top: 0;\r\n        inset-inline-end: rem(-2px);\r\n        height: 100%;\r\n        z-index: 2;\r\n    }\r\n\r\n    %grid__resize-line {\r\n        position: absolute;\r\n        cursor: col-resize;\r\n        width: rem(4px);\r\n        background: var-get($theme, 'resize-line-color');\r\n        z-index: 2;\r\n\r\n        &::before,\r\n        &::after {\r\n            position: absolute;\r\n            content: '';\r\n            height: 100%;\r\n            width: rem(96px);\r\n        }\r\n\r\n        &::before {\r\n            inset-inline-end: 100%;\r\n        }\r\n\r\n        &::after {\r\n            inset-inline-start: 100%;\r\n        }\r\n    }\r\n\r\n    %grid-summaries {\r\n        display: flex;\r\n        overflow: hidden;\r\n        background: var-get($theme, 'root-summaries-background');\r\n        outline-style: none;\r\n\r\n        %igx-grid-summary__result {\r\n            color: var-get($theme, 'root-summaries-text-color');\r\n        }\r\n    }\r\n\r\n    %grid-summaries--body {\r\n        background: var-get($theme, 'body-summaries-background');\r\n        border-bottom: rem(1px) dashed var-get($theme, 'row-border-color');\r\n\r\n        &:last-of-type {\r\n            border-bottom: none;\r\n        }\r\n\r\n        %igx-grid-summary__result {\r\n            color: var-get($theme, 'body-summaries-text-color');\r\n        }\r\n    }\r\n\r\n    %grid-summaries-patch {\r\n        @if $bootstrap-theme {\r\n            background: color($color: 'gray', $variant: 100);\r\n        } @else {\r\n            background: inherit;\r\n        }\r\n        position: relative;\r\n        z-index: 1;\r\n        border-inline-end: rem(1px) solid var-get($theme, 'header-border-color');\r\n    }\r\n\r\n    // Column moving\r\n    %igx-grid-th__drop-indicator-left,\r\n    %igx-grid-th__drop-indicator-right {\r\n        position: absolute;\r\n        width: rem(1px);\r\n        height: 100%;\r\n        top: 0;\r\n        z-index: 1;\r\n    }\r\n\r\n    %igx-grid-th__drop-indicator-left {\r\n        inset-inline-start: rem(-1px);\r\n    }\r\n\r\n    %igx-grid-th__drop-indicator-right {\r\n        inset-inline-end: rem(-1px);\r\n    }\r\n\r\n    %igx-grid-th__drop-indicator--active {\r\n        &%igx-grid-th__drop-indicator-left,\r\n        &%igx-grid-th__drop-indicator-right {\r\n            border-inline-end: rem(1px) solid var-get($theme, 'drop-indicator-color');\r\n        }\r\n\r\n        &::after,\r\n        &::before {\r\n            position: absolute;\r\n            content: '';\r\n            width: 0;\r\n            height: 0;\r\n            border-style: solid;\r\n            inset-inline-start: rem(-3px);\r\n        }\r\n\r\n        &::before {\r\n            bottom: 0;\r\n            border-width: 0 rem(4px) rem(4px);\r\n            border-color: transparent transparent var-get($theme, 'drop-indicator-color');\r\n        }\r\n\r\n        &::after {\r\n            top: 0;\r\n            border-width: rem(4px) rem(4px) 0;\r\n            border-color: var-get($theme, 'drop-indicator-color') transparent transparent;\r\n        }\r\n    }\r\n\r\n    %grid__scroll-on-drag-left,\r\n    %grid__scroll-on-drag-right {\r\n        position: absolute;\r\n        width: rem(15px);\r\n        top: 0;\r\n        height: 100%;\r\n        z-index: 25;\r\n    }\r\n\r\n    %grid__scroll-on-drag-left {\r\n        inset-inline-start: 0;\r\n    }\r\n\r\n    %grid__scroll-on-drag-right {\r\n        inset-inline-end: 0;\r\n    }\r\n\r\n    %grid__scroll-on-drag-pinned {\r\n        position: absolute;\r\n        width: rem(15px);\r\n        height: 100%;\r\n        top: 0;\r\n        z-index: 25;\r\n    }\r\n\r\n    %grid__drag-ghost-image {\r\n        position: absolute;\r\n        display: flex;\r\n        align-items: center;\r\n        background: var-get($theme, 'ghost-header-background');\r\n        color: var-get($theme, 'ghost-header-text-color');\r\n        min-width: rem(168px);\r\n        max-width: rem(320px);\r\n        height: var(--header-size);\r\n        min-height: var(--header-size);\r\n        top: rem(-99999px);\r\n        inset-inline-start: rem(-99999px);\r\n        border: none;\r\n        box-shadow: var-get($theme, 'drag-shadow');\r\n        overflow: hidden;\r\n        z-index: 20;\r\n\r\n        %grid-cell-header-title {\r\n            @include ellipsis();\r\n            flex: 1 0 0;\r\n            text-align: end;\r\n        }\r\n\r\n        %grid-cell-header-icons {\r\n            display: none;\r\n        }\r\n\r\n        %grid-thead-title {\r\n            border: none;\r\n        }\r\n    }\r\n\r\n    %grid__drag-ghost-image-icon {\r\n        color: var-get($theme, 'ghost-header-icon-color');\r\n        margin-inline-end: rem(12px);\r\n    }\r\n\r\n    %grid__drag-ghost-image-icon-group {\r\n        color: var-get($theme, 'ghost-header-icon-color');\r\n        padding: $padding-comfortable;\r\n        padding-inline-end: 0;\r\n        margin-inline-end: rem(8);\r\n    }\r\n\r\n    %igx-grid__drag-col-header {\r\n        background: var-get($theme, 'header-background');\r\n\r\n        %grid-cell-header {\r\n            > * {\r\n                opacity: .4;\r\n            }\r\n        }\r\n    }\r\n\r\n    // Group by section\r\n    %igx-grid__group-row {\r\n        background: var-get($theme, 'group-row-background');\r\n        display: flex;\r\n        outline-style: none;\r\n        border-bottom: rem(1px) solid var-get($theme, 'row-border-color');\r\n        min-height: var(--header-size);\r\n\r\n        %igx-grid__drag-indicator {\r\n            cursor: default;\r\n            flex-grow: 0;\r\n        }\r\n    }\r\n\r\n    %igx-grid__group-row--active {\r\n        background: var-get($theme, 'group-row-selected-background');\r\n        @extend %grid-cell--active !optional;\r\n\r\n        %igx-grid__grouping-indicator {\r\n            color: var-get($theme, 'expand-icon-color');\r\n        }\r\n\r\n        %igx-grid__drag-indicator {\r\n            border: rem(1px) solid var-get($theme, 'cell-active-border-color');\r\n            border-inline-start-width: 0;\r\n            border-inline-end-width: 0;\r\n            box-shadow: inset rem(1px) 0 0 0 var-get($theme, 'cell-active-border-color');\r\n        }\r\n\r\n        &:hover {\r\n            background: var-get($theme, 'group-row-selected-background');\r\n        }\r\n    }\r\n\r\n    %igx-group-label {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: flex-start;\r\n        line-height: rem(16px);\r\n\r\n        > * {\r\n            margin-inline-end: rem(4px);\r\n\r\n            &:last-child {\r\n                margin-inline-end: 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    %igx-group-label__icon {\r\n        user-select: none;\r\n\r\n        igx-icon {\r\n            color: var-get($theme, 'group-label-icon');\r\n            width: var(--igx-icon-size, #{rem(16px)});\r\n            height: var(--igx-icon-size, #{rem(16px)});\r\n            font-size: var(--igx-icon-size, #{rem(16px)});\r\n        }\r\n    }\r\n\r\n    %igx-group-label__column-name {\r\n        color: var-get($theme, 'group-label-column-name-text');\r\n        font-weight: 600;\r\n        font-size: rem(12px);\r\n    }\r\n\r\n    %igx-group-label__count-badge {\r\n        --background-color: #{var-get($theme, 'group-count-background')};\r\n        --text-color: #{var-get($theme, 'group-count-text-color')};\r\n\r\n        > span {\r\n            font-size: $grid-head-fs;\r\n        }\r\n    }\r\n\r\n    %igx-group-label__text {\r\n        font-size: rem(13px);\r\n        color: var-get($theme, 'group-label-text')\r\n    }\r\n\r\n    [dir='rtl'] {\r\n        %igx-grid__group-content {\r\n            padding-inline-start: pad-inline(map.get($grid-grouping-indicator-padding, 'compact'), map.get($grid-grouping-indicator-padding, 'cosy'), map.get($grid-grouping-indicator-padding, 'comfortable'))\r\n        }\r\n\r\n        %igx-group-label {\r\n            > * {\r\n                margin-inline-start: rem(4px);\r\n\r\n                &:last-child {\r\n                    margin-inline-start: 0;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    %igx-grid__group-content {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: flex-start;\r\n        flex: 1 1 auto;\r\n        padding-inline-start: pad-inline(map.get($grid-grouping-indicator-padding, 'compact'), map.get($grid-grouping-indicator-padding, 'cosy'), map.get($grid-grouping-indicator-padding, 'comfortable'));\r\n        min-height: sizable(map.get($grid-header-height, 'compact'), map.get($grid-header-height, 'cosy'), map.get($grid-header-height, 'comfortable'));\r\n\r\n        &:focus {\r\n            outline: transparent;\r\n        }\r\n    }\r\n\r\n    %igx-grid__row-indentation {\r\n        position: relative;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        padding-inline-start: pad-inline(map.get($grid-grouping-indicator-padding, 'compact'), map.get($grid-grouping-indicator-padding, 'cosy'), map.get($grid-grouping-indicator-padding, 'comfortable'));\r\n        padding-inline-end: pad-inline(map.get($grid-grouping-indicator-padding, 'compact'), map.get($grid-grouping-indicator-padding, 'cosy'), map.get($grid-grouping-indicator-padding, 'comfortable'));\r\n        border-inline-end: rem(1px) solid var-get($theme, 'header-border-color');\r\n        background: inherit;\r\n        z-index: 1;\r\n        background-clip: border-box;\r\n\r\n        &::after {\r\n            content: '';\r\n            position: absolute;\r\n            width: 100%;\r\n            height: rem(1px);\r\n            bottom: rem(-1px);\r\n            inset-inline-start: 0;\r\n            background: transparent;\r\n        }\r\n\r\n        %igx-button--icon {\r\n            width: rem(28px);\r\n            height: rem(28px);\r\n            color: var-get($theme, 'expand-all-icon-color');\r\n        }\r\n\r\n        &:focus,\r\n        &:hover {\r\n            %igx-button--icon {\r\n                color: var-get($theme, 'expand-all-icon-hover-color');\r\n            }\r\n        }\r\n    }\r\n\r\n    %igx-grid-grouparea {\r\n        grid-row: 2;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: flex-start;\r\n        flex-wrap: wrap;\r\n        border-bottom: $grid-header-border;\r\n        background: var-get($theme, 'grouparea-background');\r\n        color: var-get($theme, 'grouparea-color');\r\n        min-height: var(--grouparea-size);\r\n        padding-inline: pad-inline(map.get($grouparea-padding-inline, 'compact'), map.get($grouparea-padding-inline, 'cosy'), map.get($grouparea-padding-inline, 'comfortable'));\r\n        padding-block: 0;\r\n        z-index: 2;\r\n        height: 100%;\r\n        overflow: hidden;\r\n\r\n        &:focus {\r\n            outline-style: none;\r\n        }\r\n\r\n        %igx-chip {\r\n            margin-block: pad-block(rem(4px), rem(8px), rem(8px));\r\n        }\r\n    }\r\n\r\n    %igx-grid-grouparea__connector {\r\n        display: inline-flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        margin: 0 rem(4px);\r\n\r\n        igx-icon {\r\n            width: var(--igx-icon-size, #{rem(16px)});\r\n            height: var(--igx-icon-size, #{rem(16px)});\r\n            font-size: var(--igx-icon-size, #{rem(16px)});\r\n        }\r\n\r\n        [dir='rtl'] & {\r\n            transform: scaleX(-1);\r\n        }\r\n    }\r\n\r\n    %igx-drop-area {\r\n        min-width: rem(80px);\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: flex-start;\r\n        height: sizable(map.get($drop-area-height, 'compact'), map.get($drop-area-height, 'cosy'), map.get($drop-area-height, 'comfortable'));\r\n        padding-inline: pad-inline(map.get($grid-cell-padding-inline, 'compact'), map.get($grid-cell-padding-inline, 'cosy'), map.get($grid-cell-padding-inline, 'comfortable'));\r\n        padding-block: 0;\r\n        flex: 1 0 0%;\r\n        background: var-get($theme, 'drop-area-background');\r\n\r\n        %igx-drop-area__icon {\r\n            color: var-get($theme, 'drop-area-icon-color');\r\n            width: rem(16px);\r\n            height: rem(16px);\r\n            font-size: rem(16px);\r\n            margin-inline-end: rem(8px);\r\n        }\r\n    }\r\n\r\n    %igx-drop-area--hover {\r\n        background: var-get($theme, 'drop-area-on-drop-background');\r\n    }\r\n\r\n    %igx-drop-area,\r\n    %igx-drop-area--cosy,\r\n    %igx-drop-area--compact {\r\n        border-radius: var-get($theme, 'drop-area-border-radius');\r\n    }\r\n\r\n    %igx-drop-area__text {\r\n        @include ellipsis();\r\n        color: var-get($theme, 'drop-area-text-color');\r\n        font-size: rem(13px);\r\n    }\r\n\r\n    %igx-grid__grouping-indicator {\r\n        position: relative;\r\n        display: flex;\r\n        user-select: none;\r\n        justify-content: center;\r\n        align-items: center;\r\n        z-index: 1;\r\n        cursor: pointer;\r\n        padding-inline-end: $grouping-padding-right;\r\n        margin-inline-start: sizable(#{map.get($grid-grouping-indicator-padding, 'compact')}, #{map.get($grid-grouping-indicator-padding, 'cosy')}, #{map.get($grid-grouping-indicator-padding, 'comfortable')});\r\n        min-height: var(--header-size);\r\n\r\n        igx-icon {\r\n            color: var-get($theme, 'expand-icon-color');\r\n            width: var(--igx-icon-size, #{$indicator-icon-width});\r\n        }\r\n\r\n        &:hover,\r\n        &:focus {\r\n            outline-style: none;\r\n\r\n            igx-icon {\r\n                color: var-get($theme, 'expand-icon-hover-color');\r\n            }\r\n        }\r\n\r\n        [dir='rtl'] & {\r\n            transform: scaleX(-1);\r\n        }\r\n    }\r\n\r\n    %igx-grid__header-indentation {\r\n        position: relative;\r\n        padding-inline-end: sizable(map.get($grid-grouping-indicator-padding, 'compact'), map.get($grid-grouping-indicator-padding, 'cosy'), map.get($grid-grouping-indicator-padding, 'comfortable'));\r\n        border-inline-end: rem(1px) solid var-get($theme, 'header-border-color');\r\n        background: var-get($theme, 'header-background');\r\n        z-index: 4;\r\n    }\r\n\r\n\r\n    %igx-grid__group-expand-btn {\r\n        position: absolute;\r\n        cursor: pointer;\r\n        user-select: none;\r\n        inset-block-start: calc(50% - 12px);\r\n        inset-inline-start: sizable(map.get($grid-grouping-indicator-padding, 'compact'), map.get($grid-grouping-indicator-padding, 'cosy'), map.get($grid-grouping-indicator-padding, 'comfortable'));\r\n\r\n        &:hover {\r\n            color: var-get($theme, 'expand-icon-hover-color');\r\n        }\r\n\r\n        &%igx-grid__group-expand-btn--push {\r\n            inset-block-start: sizable(math.div(map.get($grid-header-height, 'compact') - rem(24px), 2), math.div(map.get($grid-header-height, 'cosy') - rem(24px), 2), math.div(map.get($grid-header-height, 'comfortable') - rem(24px), 2));\r\n        }\r\n    }\r\n\r\n    @for $i from 1 through 10 {\r\n        $row-indentation-level: (\r\n            comfortable: calc(#{$i * map.get($grid-grouping-indicator-padding, 'comfortable')} + #{$indicator-icon-width}),\r\n            cosy: calc(#{$i * map.get($grid-grouping-indicator-padding, 'cosy')} + #{$indicator-icon-width}),\r\n            compact: calc(#{$i * map.get($grid-grouping-indicator-padding, 'compact')} + #{$indicator-icon-width})\r\n        );\r\n\r\n        $level--comfortable: map-get($row-indentation-level, 'comfortable');\r\n        $level--cosy: map-get($row-indentation-level, 'cosy');\r\n        $level--compact: map-get($row-indentation-level, 'compact');\r\n\r\n        %igx-grid__row-indentation--level-#{$i} {\r\n            padding-inline-start: pad-inline($level--compact, $level--cosy, $level--comfortable);\r\n        }\r\n\r\n        $indicator-padding--comfortable: #{$i * map.get($grid-grouping-indicator-padding, 'comfortable')};\r\n        $indicator-padding--cosy: #{$i * map.get($grid-grouping-indicator-padding, 'cosy')};\r\n        $indicator-padding--compact: #{$i * map.get($grid-grouping-indicator-padding, 'compact')};\r\n\r\n        %igx-grid__group-row--padding-level-#{$i} {\r\n            %igx-grid__grouping-indicator {\r\n                padding-inline-start: pad-inline($indicator-padding--compact, $indicator-padding--cosy, $indicator-padding--comfortable);\r\n            }\r\n        }\r\n    }\r\n\r\n    %igx-grid__outlet {\r\n        z-index: 10002;\r\n        position: fixed;\r\n    }\r\n\r\n    %igx-grid__loading-outlet {\r\n        z-index: 10003;\r\n\r\n        > %overlay-wrapper--modal {\r\n            background: none;\r\n        }\r\n\r\n        %circular-display {\r\n            width: rem(50);\r\n            height: rem(50);\r\n        }\r\n    }\r\n\r\n    %igx-grid__row-editing-outlet {\r\n        z-index: 10000;\r\n        position: absolute;\r\n\r\n        %overlay-wrapper {\r\n            /* Change wrapper position from 'fixed' to 'absolute' so that it is hidden when scrolled below the parent grid body content. */\r\n            position: absolute;\r\n        }\r\n    }\r\n\r\n    %igx-grid__addrow-snackbar {\r\n        position: absolute;\r\n        z-index: 5;\r\n        bottom: rem(24px);\r\n        inset-inline-start: 50%;\r\n        transform: translateX(-50%);\r\n    }\r\n\r\n    %igx-grid__filtering-cell {\r\n        display: flex;\r\n        align-items: center;\r\n        border-inline-end: $grid-header-border;\r\n        border-top: $grid-header-border;\r\n        height: var(--header-size);\r\n        padding-inline: pad-inline(map.get($grid-header-padding-inline, 'compact'), map.get($grid-header-padding-inline, 'cosy'), map.get($grid-header-padding-inline, 'comfortable'));\r\n        padding-block: 0;\r\n        overflow: hidden;\r\n\r\n        igx-chips-area {\r\n            transition: transform .25s $ease-out-back;\r\n            flex-wrap: nowrap;\r\n\r\n            .igx-filtering-chips__connector {\r\n                font-size: rem(12px);\r\n                text-transform: uppercase;\r\n                font-weight: 600;\r\n                margin: 0 rem(8px);\r\n            }\r\n        }\r\n    }\r\n\r\n    %igx-grid__filtering-cell--selected {\r\n        color: var-get($theme, 'header-selected-text-color');\r\n        background: var-get($theme, 'header-selected-background');\r\n    }\r\n\r\n    %igx-grid__filtering-cell-indicator {\r\n        position: relative;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        padding-inline-end: rem(8px);\r\n        margin-inline-start: rem(8px);\r\n        cursor: pointer;\r\n        visibility: visible;\r\n\r\n        igx-icon {\r\n            width: var(--igx-icon-size, #{rem(18px)});\r\n            height: var(--igx-icon-size, #{rem(18px)});\r\n            font-size: var(--igx-icon-size, #{rem(18px)});\r\n        }\r\n\r\n        %igx-badge-display {\r\n            --size: #{rem(14px)};\r\n            --font-size: #{rem(12px)};\r\n            line-height: 0;\r\n            position: absolute;\r\n            inset-inline-end: 0;\r\n        }\r\n    }\r\n\r\n    %igx-grid__filtering-cell-indicator--hidden {\r\n        visibility: hidden;\r\n    }\r\n\r\n    %igx-grid__filtering-row {\r\n        position: absolute;\r\n        display: flex;\r\n        width: 100%;\r\n        height: sizable(map.get($grid-header-height, 'compact'), map.get($grid-header-height, 'cosy'), map.get($grid-header-height, 'comfortable'));\r\n        padding: $cell-padding-cosy;\r\n        align-items: center;\r\n        justify-content: space-between;\r\n        background: var-get($theme, 'filtering-row-background');\r\n        color: var-get($theme, 'filtering-row-text-color');\r\n        inset-inline-start: 0;\r\n        bottom: 0;\r\n        z-index: 3;\r\n\r\n        &::after {\r\n            display: block;\r\n            position: absolute;\r\n            content: '';\r\n            background: inherit;\r\n            inset-inline-start: 0;\r\n            inset-inline-end: 0;\r\n            top: 0;\r\n            bottom: 0;\r\n            box-shadow: 0 rem(1px) 0 var-get($theme, 'filtering-row-background'),\r\n                0 rem(4px) rem(10px) rgba(0, 0, 0, .12);\r\n            z-index: -1;\r\n        }\r\n\r\n        igx-input-group {\r\n            --theme: fluent;\r\n            width: 100%;\r\n            max-width: rem(200px);\r\n            min-width: rem(140px);\r\n        }\r\n\r\n        igx-prefix:focus {\r\n            color: color(map.get($theme, 'palette'), 'secondary');\r\n        }\r\n\r\n        igx-suffix  {\r\n            igx-icon {\r\n                outline-style: none;\r\n\r\n                &:focus {\r\n                    color: color($color: 'secondary');\r\n                }\r\n\r\n                + igx-icon {\r\n                    margin-inline-start: rem(4px);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    %igx-grid__filtering-dropdown-items {\r\n        display: flex;\r\n        align-items: center;\r\n    }\r\n\r\n    %igx-grid__filtering-dropdown-text {\r\n        margin-inline-start: rem(16px);\r\n    }\r\n\r\n    %igx-grid__filtering-row-main {\r\n        display: flex;\r\n        flex: 1;\r\n        overflow: hidden;\r\n        max-width: calc(100% - 176px);\r\n        min-width: rem(56px);\r\n\r\n        igx-chips-area {\r\n            transition: transform .25s $ease-out-back;\r\n            flex-wrap: nowrap;\r\n            margin: 0 rem(8px);\r\n        }\r\n\r\n        igx-chip {\r\n            margin: 0 rem(4px);\r\n        }\r\n\r\n        [igxButton] {\r\n            igx-icon {\r\n                position: absolute;\r\n                inset-inline-start: rem(12px);\r\n                /* IE fix for vertical alignment*/\r\n                top: 50%;\r\n                transform: translateY(-50%);\r\n            }\r\n\r\n            span {\r\n                margin-inline-start: rem(16px);\r\n            }\r\n        }\r\n    }\r\n\r\n    %igx-grid__filtering-scroll-start {\r\n        width: rem(24px);\r\n        height: rem(24px);\r\n        position: relative;\r\n        overflow: visible;\r\n        margin: 0 rem(8px);\r\n        z-index: 1;\r\n\r\n        &::after {\r\n            @include _filtering-scroll-mask($theme, right);\r\n            inset-inline-start: calc(100% + 6px);\r\n        }\r\n\r\n        [dir='rtl'] & {\r\n            transform: scaleX(-1);\r\n\r\n            &::after {\r\n                content: initial;\r\n            }\r\n\r\n            &::before {\r\n                @include _filtering-scroll-mask($theme, right);\r\n                inset-inline-end: calc(100% + 6px);\r\n            }\r\n        }\r\n    }\r\n\r\n    %igx-grid__filtering-scroll-end {\r\n        width: rem(24px);\r\n        height: rem(24px);\r\n        position: relative;\r\n        overflow: visible;\r\n        margin: 0 rem(8px);\r\n        z-index: 1;\r\n\r\n        &::before {\r\n            @include _filtering-scroll-mask($theme, left);\r\n            inset-inline-end: calc(100% + 6px);\r\n        }\r\n\r\n        [dir='rtl'] & {\r\n            transform: scaleX(-1);\r\n\r\n            &::before {\r\n                content: initial;\r\n            }\r\n\r\n            &::after {\r\n                @include _filtering-scroll-mask($theme, left);\r\n                inset-inline-start: calc(100% + 6px);\r\n            }\r\n        }\r\n    }\r\n\r\n    %igx-grid__tr--highlighted {\r\n        position: relative;\r\n\r\n        &::after {\r\n            content: '';\r\n            position: absolute;\r\n            top: 0;\r\n            inset-inline-start: 0;\r\n            width: rem(4px);\r\n            height: 100%;\r\n            background: var-get($theme, 'row-highlight');\r\n            z-index: 3;\r\n        }\r\n\r\n        %igx-grid__tr--edited {\r\n            &::before {\r\n                inset-inline-start: rem(4px);\r\n            }\r\n        }\r\n\r\n        &::before {\r\n            inset-inline-start: rem(4px);\r\n        }\r\n    }\r\n\r\n    %igx-grid__tr-container {\r\n        border-bottom: rem(1px) solid var-get($theme, 'row-border-color');\r\n    }\r\n\r\n    %igx-grid__tr-container--active {\r\n        @extend %grid-cell--active !optional;\r\n    }\r\n\r\n    %igx-grid__hierarchical-expander {\r\n        user-select: none;\r\n        background: inherit;\r\n        padding-inline: pad-inline(map.get($hierarchical-grid-indent, 'compact'), map.get($hierarchical-grid-indent, 'cosy'), map.get($hierarchical-grid-indent, 'comfortable'));\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        cursor: pointer;\r\n        z-index: 3;\r\n        color: var-get($theme, 'expand-icon-color');\r\n        background-clip: border-box;\r\n\r\n        &:focus {\r\n            outline: none;\r\n\r\n            igx-icon {\r\n                color: var-get($theme, 'expand-icon-hover-color');\r\n            }\r\n        }\r\n\r\n        &:hover {\r\n            igx-icon {\r\n                color: var-get($theme, 'expand-icon-hover-color');\r\n            }\r\n        }\r\n\r\n        igx-icon {\r\n            color: var-get($theme, 'expand-icon-color');\r\n            max-width: $hierarchical-action-icon;\r\n            min-width: $hierarchical-action-icon;\r\n        }\r\n\r\n        [dir='rtl'] & {\r\n            transform: scaleX(-1);\r\n        }\r\n\r\n        &--empty {\r\n            cursor: default;\r\n            pointer-events: none;\r\n        }\r\n    }\r\n\r\n    %igx-grid__hierarchical-expander--header {\r\n        background: inherit;\r\n        border-inline-end: rem(1px) solid var-get($theme, 'header-border-color');\r\n        z-index: 3;\r\n        background-clip: border-box;\r\n\r\n        igx-icon {\r\n            display: flex;\r\n            align-items: center;\r\n        }\r\n    }\r\n\r\n    %igx-grid__hierarchical-expander--push {\r\n        align-items: flex-start;\r\n\r\n        igx-icon {\r\n            min-height: var(--header-size);\r\n            max-height: var(--header-size);\r\n        }\r\n    }\r\n\r\n    %igx-grid__header-indentation--no-border {\r\n        border-inline-end: rem(1px) solid transparent;\r\n    }\r\n\r\n    %igx-grid__hierarchical-indent {\r\n        margin-inline-start: pad-inline(map.get($hierarchical-indent, 'compact'), map.get($hierarchical-indent, 'cosy'), map.get($hierarchical-indent, 'comfortable'));\r\n        margin-inline-end: pad-inline(map.get($hierarchical-grid-indent, 'compact'), map.get($hierarchical-grid-indent, 'cosy'), map.get($hierarchical-grid-indent, 'comfortable'));\r\n        margin-block: pad-block(map.get($hierarchical-grid-indent, 'compact'), map.get($hierarchical-grid-indent, 'cosy'), map.get($hierarchical-grid-indent, 'comfortable'));\r\n\r\n        &--scroll {\r\n            margin-inline-end: pad-inline(map.get($hierarchical-indent-scroll, 'compact'), map.get($hierarchical-indent-scroll, 'cosy'), map.get($hierarchical-indent-scroll, 'comfortable'));\r\n        }\r\n    }\r\n\r\n    @include excel-filtering($theme);\r\n\r\n    %advanced-filtering-dialog {\r\n        background: var-get($theme, 'filtering-row-background');\r\n        box-shadow: elevation(12);\r\n\r\n        igx-query-builder {\r\n            --igx-query-builder-background: #{var-get($theme, 'filtering-row-background')};\r\n            --igx-query-builder-background-and: #{var-get($theme, 'filtering-background-and')};\r\n            --igx-query-builder-background-and--focus: #{var-get($theme, 'filtering-background-and--focus')};\r\n            --igx-query-builder-background-or: #{var-get($theme, 'filtering-background-or')};\r\n            --igx-query-builder-background-or--focus: #{var-get($theme, 'filtering-background-or--focus')};\r\n            box-shadow: none;\r\n        }\r\n\r\n        igx-query-builder-header {\r\n            cursor: grab;\r\n        }\r\n    }\r\n\r\n    %igx-grid__filtering-row-editing-buttons--small,\r\n    %igx-grid__filtering-row-editing-buttons {\r\n        display: flex;\r\n        align-items: center;\r\n\r\n        button {\r\n            transition: none;\r\n        }\r\n    }\r\n\r\n    %igx-grid__filtering-row-editing-buttons--small {\r\n        button {\r\n            &:not([disabled]) {\r\n                igx-icon {\r\n                    color: var-get($theme, 'sorted-header-icon-color');\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    %igx-grid__tr-action {\r\n        &:last-of-type {\r\n            border-inline-end: var-get($theme, 'header-border-width') var-get($theme, 'header-border-style') var-get($theme, 'header-border-color');\r\n        }\r\n    }\r\n\r\n    // Pivot grid\r\n    %igx-grid__pivot--super-compact {\r\n        %grid-cell-display,\r\n        %grid-cell-header {\r\n            padding: 0 rem(4px) !important;\r\n            min-height: rem(24px) !important;\r\n            height: rem(24px);\r\n        }\r\n\r\n        %grid-cell-header {\r\n            > * {\r\n                line-height: normal;\r\n                align-self: initial;\r\n                max-height: 100%;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    %grid-thead--pivot {\r\n        display: flex;\r\n\r\n        %grid-thead--virtualizationWrapper {\r\n            border-inline-start: var-get($theme, 'header-border-width') var-get($theme, 'header-border-style') var-get($theme, 'header-border-color');\r\n        }\r\n    }\r\n\r\n    %grid-thead--virtualizationWrapper {\r\n        height: 100%;\r\n    }\r\n\r\n    %grid-thead--virtualizationContainer {\r\n        overflow: visible;\r\n        height: 100%;\r\n    }\r\n\r\n    %igx-grid__tr-pivot {\r\n        display: flex;\r\n        align-items: center;\r\n        background: inherit;\r\n        overflow: hidden;\r\n        z-index: 3;\r\n        height: var(--header-size);\r\n        padding-inline: pad-inline(map.get($grid-header-padding-inline, 'compact'), map.get($grid-header-padding-inline, 'cosy'), map.get($grid-header-padding-inline, 'comfortable'));\r\n        padding-block: 0;\r\n        background-clip: border-box !important;\r\n        border-inline-start: var-get($theme, 'header-border-width') var-get($theme, 'header-border-style') var-get($theme, 'header-border-color');\r\n        border-bottom: var-get($theme, 'header-border-width') var-get($theme, 'header-border-style') var-get($theme, 'header-border-color');\r\n\r\n        igx-chips-area {\r\n            flex-wrap: nowrap;\r\n            width: auto;\r\n\r\n            > * {\r\n                margin-inline-end: rem(4px);\r\n            }\r\n\r\n            &:last-child {\r\n                margin-inline-end: 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    %igx-grid__pivot-filter-toggle {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        cursor: pointer;\r\n        position: relative;\r\n\r\n        > igx-badge {\r\n            position: absolute;\r\n            top: rem(-4px);\r\n            inset-inline-start: 60%;\r\n            width: rem(18px);\r\n            min-width: rem(18px);\r\n            height: rem(18px);\r\n            font-size: rem(10px);\r\n            pointer-events: none;\r\n            user-select: none;\r\n        }\r\n    }\r\n\r\n    %igx-grid__pivot-empty-chip-area {\r\n        line-height: normal;\r\n        font-size: rem(14px);\r\n        margin-inline-end: 0 !important;\r\n    }\r\n\r\n    %igx-grid__tr-pivot--row-area {\r\n        height: auto !important;\r\n        align-items: flex-end;\r\n        padding-bottom: pad-block(map.get($pivot-row-aria-padding, 'compact'), map.get($pivot-row-aria-padding, 'cosy'), map.get($pivot-row-aria-padding, 'comfortable'));\r\n        border-inline-start: 0;\r\n        border-bottom: 0;\r\n    }\r\n\r\n    %igx-grid__tr-pivot--filter-container {\r\n        display: flex;\r\n        flex-direction: column;\r\n    }\r\n\r\n    %igx-grid__tr-pivot--chip_drop_indicator {\r\n        width: rem(2px);\r\n        background: var-get($theme, 'resize-line-color');\r\n    }\r\n\r\n    %igx-grid__tr-pivot--drop-row-area {\r\n        flex-grow: 1;\r\n    }\r\n\r\n    %igx-grid__tr-pivot--filter {\r\n        height: var(--header-size);\r\n\r\n        border-inline-start: 0;\r\n        border-inline-end: 0;\r\n        border-bottom: var-get($theme, 'header-border-width') var-get($theme, 'header-border-style') var-get($theme, 'header-border-color');\r\n    }\r\n\r\n    %igx-grid-thead__wrapper--pivot {\r\n        border-bottom: 0;\r\n    }\r\n\r\n    %igx-grid__tr-pivot-group {\r\n        flex: 1;\r\n    }\r\n\r\n    %igx-grid__tr-pivot-toggle-icons {\r\n        display: inline-flex !important;\r\n    }\r\n\r\n    %igx-grid__tr-pivot--columnDimensionLeaf {\r\n        box-shadow: none;\r\n\r\n        igx-grid-header {\r\n            border: none;\r\n        }\r\n    }\r\n\r\n    %igx-grid__tr-pivot--columnMultiRowSpan {\r\n        igx-grid-header {\r\n            > * {\r\n                visibility: hidden;\r\n            }\r\n        }\r\n    }\r\n\r\n    %igx-grid__tr-header-row {\r\n        igx-pivot-row-dimension-header-group {\r\n            igx-pivot-row-dimension-header {\r\n                align-items: center;\r\n            }\r\n        }\r\n    }\r\n    // Pivot grid END\r\n}\r\n","@use 'sass:map';\r\n@use 'sass:meta';\r\n@use '../../base' as *;\r\n@use '../../themes/schemas' as *;\r\n\r\n////\r\n/// @group themes\r\n/// @access public\r\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\r\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\r\n////\r\n\r\n/// @param {Map} $schema [$light-material-schema] - The schema used as basis for styling the component.\r\n/// @param {Color} $background-color [null] - The summaries background color is inherited form igx-grid__tfoot\r\n/// @param {Color} $focus-background-color [null] - The background color when a summary item is on focus.\r\n/// @param {Color} $label-color [null] - The summaries label color.\r\n/// @param {Color} $result-color [null] - The summaries value/result color.\r\n/// @param {Color} $border-color [null] - The summaries border color.\r\n/// @param {Color} $pinned-border-width [null] - The border width of the summary panel.\r\n/// @param {Color} $pinned-border-style [null] - The border style of the summary panel.\r\n/// @param {Color} $pinned-border-color [null] - The border color of the summary panel.\r\n/// @param {Color} $label-hover-color [null] - The summaries hover label color.\r\n/// @requires $light-material-schema\r\n/// @example scss Change the summaries background and labels color\r\n///   $my-summary-theme: grid-summary-theme(\r\n///     $background-color: black,\r\n///     $label-color: white\r\n///   );\r\n///   // Pass the theme to the css-vars mixin\r\n///   @include css-vars($my-summary-theme);\r\n@function grid-summary-theme(\r\n    $schema: $light-material-schema,\r\n\r\n    $background-color: null,\r\n    $focus-background-color: null,\r\n    $label-color: null,\r\n    $result-color: null,\r\n    $border-color: null,\r\n    $pinned-border-width: null,\r\n    $pinned-border-style: null,\r\n    $pinned-border-color: null,\r\n    $label-hover-color: null\r\n) {\r\n    $name: 'igx-grid-summary';\r\n    $selector: '.igx-grid-summary';\r\n    $grid-summary-schema: ();\r\n\r\n    @if map.has-key($schema, 'grid-summary') {\r\n        $grid-summary-schema: map.get($schema, 'grid-summary');\r\n    } @else {\r\n        $grid-summary-schema: $schema;\r\n    }\r\n\r\n    $theme: digest-schema($grid-summary-schema);\r\n\r\n    @if not($result-color) and $background-color {\r\n        $result-color: text-contrast($background-color);\r\n    }\r\n\r\n    @if not($border-color) and $background-color {\r\n        @if type-of($background-color) == 'color' {\r\n            $border-color: rgba(text-contrast($background-color), .26);\r\n        }\r\n    }\r\n\r\n    @if not($pinned-border-color) and $background-color {\r\n        @if type-of($background-color) == 'color' {\r\n            $pinned-border-color: rgba(text-contrast($background-color), .26);\r\n        }\r\n    }\r\n\r\n    @return extend($theme, (\r\n        name: $name,\r\n        selector: $selector,\r\n        background-color: $background-color,\r\n        focus-background-color: $focus-background-color,\r\n        label-color: $label-color,\r\n        result-color: $result-color,\r\n        border-color: $border-color,\r\n        pinned-border-width: $pinned-border-width,\r\n        pinned-border-style: $pinned-border-style,\r\n        pinned-border-color: $pinned-border-color,\r\n        label-hover-color: $label-hover-color\r\n    ));\r\n}\r\n\r\n/// @param {Map} $theme - The theme used to style the component.\r\n@mixin grid-summary($theme) {\r\n    @include css-vars($theme);\r\n\r\n    $cell-pin: (\r\n        style: var-get($theme, 'pinned-border-width') var-get($theme, 'pinned-border-style'),\r\n        color: var-get($theme, 'pinned-border-color')\r\n    );\r\n\r\n    $item-padding-block: (\r\n        comfortable: rem(6px),\r\n        cosy: rem(2px),\r\n        compact: 0\r\n    );\r\n\r\n    $summary-padding-inline: (\r\n        comfortable: rem(24px),\r\n        cosy: rem(16px),\r\n        compact: rem(12px)\r\n    );\r\n\r\n    %igx-grid-summary {\r\n        position: relative;\r\n        display: flex;\r\n        flex-direction: column;\r\n        flex: 1 1 0%;\r\n        padding-block: 0;\r\n        padding-inline: pad-inline(map.get($summary-padding-inline, 'compact'), map.get($summary-padding-inline, 'cosy'), map.get($summary-padding-inline, 'comfortable'));\r\n        background: var-get($theme, 'background-color', inherit);\r\n        overflow: hidden;\r\n        outline-style: none;\r\n\r\n        &::after {\r\n            position: absolute;\r\n            inset: 0;\r\n        }\r\n\r\n        &:focus::after {\r\n            background: var-get($theme, 'focus-background-color');\r\n        }\r\n    }\r\n\r\n    %igx-grid-summary--pinned {\r\n        position: relative;\r\n        z-index: 1;\r\n    }\r\n\r\n    %grid-summary--fixed-width {\r\n        flex-grow: 0;\r\n    }\r\n\r\n    %igx-grid-summary--pinned-last {\r\n        border-inline-end: map.get($cell-pin, 'style') map.get($cell-pin, 'color');\r\n        @media print {\r\n            border-inline-end: map.get($cell-pin, 'style') #999;\r\n        }\r\n    }\r\n\r\n    %igx-grid-summary--pinned-first {\r\n        border-inline-start: map.get($cell-pin, 'style') map.get($cell-pin, 'color');\r\n        @media print {\r\n            border-inline-start: map.get($cell-pin, 'style') #999;\r\n        }\r\n    }\r\n\r\n    %igx-grid-summary__item {\r\n        display: flex;\r\n        align-items: center;\r\n        padding-block: pad(map.get($item-padding-block, 'compact'), map.get($item-padding-block, 'cosy'), map.get($item-padding-block, 'comfortable'));\r\n        padding-inline: 0;\r\n        font-size: rem(12px);\r\n        position: relative;\r\n    }\r\n\r\n    %igx-grid-summary__label {\r\n        color: var-get($theme, 'label-color');\r\n        min-width: rem(30px);\r\n        margin-inline-end: rem(3px);\r\n\r\n        &:hover {\r\n            color: var-get($theme, 'label-hover-color');\r\n        }\r\n    }\r\n\r\n    %igx-grid-summary__result {\r\n        color: var-get($theme, 'result-color');\r\n        font-weight: 600;\r\n        flex: 1 1 auto;\r\n        text-align: end;\r\n    }\r\n\r\n    %igx-grid-summary__label,\r\n    %igx-grid-summary__result {\r\n        @include ellipsis();\r\n    }\r\n}\r\n","@use 'sass:map';\r\n@use '../../base' as *;\r\n@use '../../themes/schemas' as *;\r\n\r\n////\r\n/// @group themes\r\n/// @access public\r\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\r\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\r\n////\r\n\r\n/// @param {Map} $schema [$light-material-schema] - The schema used as basis for styling the component.\r\n/// @param {Map} $elevations [null] - The elevations (shadows) map to be used.\r\n/// @param {Color} $background-color [null] - The toolbar background color.\r\n/// @param {Color} $title-text-color [null] - The toolbar title text color.\r\n/// @param {Color} $dropdown-background [null] - The toolbar drop-down background color.\r\n/// @param {Color} $item-text-color [null] - The toolbar drop-down item text color.\r\n/// @param {Color} $item-hover-background [null] - The toolbar drop-down item hover background color.\r\n/// @param {Color} $item-hover-text-color [null] - The toolbar drop-down item hover text color.\r\n/// @param {Color} $item-focus-background [null] - The toolbar drop-down item focus background color.\r\n/// @param {Color} $item-focus-text-color [null] - The toolbar drop-down item focus text color.\r\n/// @requires $light-material-schema\r\n/// @example scss Change the toolbar background color\r\n///   $my-toolbar-theme: grid-toolbar-theme(\r\n///     $background-color: black\r\n///   );\r\n///   // Pass the theme to the css-vars mixin\r\n///   @include css-vars($my-toolbar-theme);\r\n@function grid-toolbar-theme(\r\n    $schema: $light-material-schema,\r\n    $elevations: null,\r\n\r\n    $background-color: null,\r\n    $title-text-color: null,\r\n\r\n    $dropdown-background: null,\r\n    $item-text-color: null,\r\n    $item-hover-background: null,\r\n    $item-hover-text-color: null,\r\n    $item-focus-background: null,\r\n    $item-focus-text-color: null\r\n) {\r\n    $name: 'igx-grid-toolbar';\r\n    $selector: 'igx-grid-toolbar, .igx-grid-toolbar__dd-list';\r\n    $grid-toolbar-schema: ();\r\n\r\n    @if map.has-key($schema, 'grid-toolbar') {\r\n        $grid-toolbar-schema: map.get($schema, 'grid-toolbar');\r\n    } @else {\r\n        $grid-toolbar-schema: $schema;\r\n    }\r\n\r\n    $theme: digest-schema($grid-toolbar-schema);\r\n    $meta: map.get($theme, '_meta');\r\n\r\n    @if not($title-text-color) and $background-color {\r\n        $title-text-color: text-contrast($background-color);\r\n    }\r\n\r\n    @if not($item-text-color) and $dropdown-background {\r\n        $item-text-color: text-contrast($dropdown-background);\r\n    }\r\n\r\n    @if not($item-hover-text-color) and $dropdown-background {\r\n        $item-hover-text-color: text-contrast($dropdown-background);\r\n    }\r\n\r\n    @if not($item-focus-text-color) and $dropdown-background {\r\n        $item-focus-text-color: text-contrast($dropdown-background);\r\n    }\r\n\r\n    @if not($item-hover-text-color) and $item-hover-background {\r\n        $item-hover-text-color: text-contrast($item-hover-background);\r\n    }\r\n\r\n    @if not($item-focus-text-color) and $item-focus-background {\r\n        $item-focus-text-color: text-contrast($item-focus-background);\r\n    }\r\n\r\n    @return extend($theme, (\r\n        name: $name,\r\n        selector: $selector,\r\n        elevations: $elevations,\r\n        background-color: $background-color,\r\n        title-text-color: $title-text-color,\r\n        item-text-color: $item-text-color,\r\n        dropdown-background: $dropdown-background,\r\n        item-hover-background: $item-hover-background,\r\n        item-hover-text-color: $item-hover-text-color,\r\n        item-focus-background: $item-focus-background,\r\n        item-focus-text-color: $item-focus-text-color,\r\n        _meta: map.merge(if($meta, $meta, ()), (\r\n            variant: map.get($schema, '_meta', 'theme')\r\n        )),\r\n    ));\r\n}\r\n\r\n/// @param {Map} $theme - The theme used to style the component.\r\n@mixin grid-toolbar($theme) {\r\n    @include css-vars($theme);\r\n\r\n    $variant: map.get($theme, '_meta', 'variant');\r\n    $bootstrap-theme: $variant == 'bootstrap';\r\n\r\n    // Caption\r\n    $grid-toolbar-fs: rem(16px);\r\n\r\n    $grid-toolbar-padding-start: (\r\n        comfortable: rem(24px),\r\n        cosy: rem(16px),\r\n        compact: rem(12px)\r\n    );\r\n\r\n    $grid-toolbar-padding-end: (\r\n        comfortable: rem(16px),\r\n        cosy: rem(12px),\r\n        compact: rem(8px)\r\n    );\r\n\r\n    $grid-toolbar-spacer: (\r\n        comfortable: rem(16px),\r\n        cosy: rem(12px),\r\n        compact: rem(8px)\r\n    );\r\n\r\n    $grid-toolbar-height: (\r\n        comfortable: rem(58px),\r\n        cosy: rem(52px),\r\n        compact: rem(44px)\r\n    );\r\n\r\n    %igx-grid-toolbar {\r\n        position: relative;\r\n        width: 100%;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: space-between;\r\n        grid-row: 1;\r\n        font-size: $grid-toolbar-fs;\r\n\r\n        @if $bootstrap-theme {\r\n            border-bottom: rem(1px) solid color($color: 'gray', $variant: 100);\r\n        } @else {\r\n            border-bottom: rem(1px) solid color($color: 'gray', $variant: 300);\r\n        }\r\n\r\n        background: var-get($theme, 'background-color');\r\n        height: auto;\r\n        min-height: sizable(map.get($grid-toolbar-height, 'compact'), map.get($grid-toolbar-height, 'cosy'), map.get($grid-toolbar-height, 'comfortable'));\r\n        padding-block: 0;\r\n        padding-inline-start: pad-inline(map.get($grid-toolbar-padding-start, 'compact'), map.get($grid-toolbar-padding-start, 'cosy'), map.get($grid-toolbar-padding-start, 'comfortable'));\r\n        padding-inline-end: pad-inline(map.get($grid-toolbar-padding-end, 'compact'), map.get($grid-toolbar-padding-end, 'cosy'), map.get($grid-toolbar-padding-end, 'comfortable'));\r\n\r\n        [igxButton] {\r\n            margin-inline-start: pad-inline(map.get($grid-toolbar-spacer, 'compact'), map.get($grid-toolbar-spacer, 'cosy'), map.get($grid-toolbar-spacer, 'comfortable'));\r\n\r\n            &:first-of-type {\r\n                margin-inline-start: 0;\r\n            }\r\n\r\n            &:last-of-type {\r\n                margin-inline-end: 0;\r\n            }\r\n        }\r\n\r\n        &[dir='rtl'] {\r\n            text-align: end;\r\n\r\n            [igxButton] {\r\n                margin-inline-start: 0;\r\n                margin-inline-end: rem(8);\r\n\r\n                &:last-child {\r\n                    margin-inline-end: 0;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    %igx-grid-toolbar__title {\r\n        color: var-get($theme, 'title-text-color');\r\n        flex: 1 1 auto;\r\n        @include ellipsis();\r\n        max-width: 40ch;\r\n        margin-inline-end: map.get($grid-toolbar-spacer, 'comfortable')\r\n    }\r\n\r\n    %igx-grid-toolbar__custom-content {\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        flex-grow: 1;\r\n        justify-content: flex-end;\r\n        margin-inline-end: map.get($grid-toolbar-spacer, 'comfortable');\r\n    }\r\n\r\n    %igx-grid-toolbar__actions {\r\n        display: flex;\r\n        align-items: center;\r\n        flex-flow: row wrap;\r\n        margin-inline-start: auto;\r\n\r\n        > * {\r\n            display: flex;\r\n            margin-inline-start: map.get($grid-toolbar-spacer, 'comfortable');\r\n\r\n            &:first-child {\r\n                margin-inline-start: 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    %igx-grid-toolbar__actions,\r\n    %igx-grid-toolbar__title,\r\n    %igx-grid-toolbar__custom-content {\r\n        &:empty {\r\n            display: none;\r\n        }\r\n    }\r\n\r\n    %igx-grid-toolbar__title:empty + %igx-grid-toolbar__custom-content:empty {\r\n        + %igx-grid-toolbar__actions {\r\n            width: 100%;\r\n            margin-inline-start: 0;\r\n            justify-content: flex-end;\r\n        }\r\n    }\r\n\r\n    %igx-grid-toolbar__progress-bar {\r\n        position: absolute;\r\n        width: 100%;\r\n        inset-inline-start: 0;\r\n        inset-inline-end: 0;\r\n        bottom: rem(-1px);\r\n        height: rem(2px);\r\n        overflow: hidden;\r\n        background: var-get($theme, 'background-color');\r\n\r\n        igx-linear-bar > * {\r\n            border-radius: 0;\r\n\r\n            &:first-child > div {\r\n                background: color($color: 'secondary');\r\n            }\r\n        }\r\n    }\r\n\r\n    %igx-grid-toolbar__adv-filter--filtered {\r\n        border-color: color($color: 'secondary') !important;\r\n\r\n        @if $bootstrap-theme {\r\n            border-width: rem(2px);\r\n            border-color: color($color: 'primary', $variant: 800) !important;\r\n            color: color($color: 'primary', $variant: 800);\r\n\r\n            &:hover,\r\n            &:focus {\r\n                background: color($color: 'primary', $variant: 800);\r\n            }\r\n        }\r\n    }\r\n\r\n    %igx-grid-toolbar__dropdown {\r\n        position: relative;\r\n    }\r\n\r\n    %igx-grid-toolbar__dd-list {\r\n        list-style: none;\r\n        background: var-get($theme, 'dropdown-background');\r\n        margin: 0;\r\n        padding: 0;\r\n        box-shadow: elevation(8);\r\n    }\r\n\r\n    %igx-grid-toolbar__dd-list-items {\r\n        cursor: pointer;\r\n        position: relative;\r\n        padding: rem(8px) rem(16px);\r\n        color: var-get($theme, 'item-text-color');\r\n        white-space: nowrap;\r\n\r\n        &:hover {\r\n            background: var-get($theme, 'item-hover-background');\r\n            color: var-get($theme, 'item-hover-text-color');\r\n        }\r\n\r\n        &:focus {\r\n            background: var-get($theme, 'item-focus-background');\r\n            color: var-get($theme, 'item-focus-text-color');\r\n        }\r\n    }\r\n}\r\n","@use 'sass:map';\r\n@use 'sass:meta';\r\n@use '../../base' as *;\r\n@use '../../themes/schemas' as *;\r\n\r\n////\r\n/// @group themes\r\n/// @access public\r\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\r\n////\r\n\r\n/// @param {Map} $schema [$light-material-schema] - The schema used as basis for styling the component.\r\n@function pivot-data-selector-theme(\r\n    $schema: $light-material-schema,\r\n    $background: null\r\n) {\r\n    $name: 'igx-pivot-data-selector';\r\n    $selector: '.igx-pivot-data-selector';\r\n    $pivot-data-selector-schema: ();\r\n\r\n    @if map.has-key($schema, 'pivot-data-selector') {\r\n        $pivot-data-selector-schema: map.get($schema, 'pivot-data-selector');\r\n    } @else {\r\n        $pivot-data-selector-schema: $schema;\r\n    }\r\n\r\n    $theme: digest-schema($pivot-data-selector-schema);\r\n\r\n    @return extend($theme, (\r\n        name: $name,\r\n    ));\r\n}\r\n\r\n/// @param {Map} $theme - The theme used to style the component.\r\n@mixin pivot-data-selector($theme) {\r\n    @include css-vars($theme);\r\n\r\n    $chip-height-material: (\r\n        comfortable: rem(22px),\r\n        cosy: rem(20px),\r\n        compact: rem(18px)\r\n    );\r\n\r\n    $chip-item-padding: 0 #{rem(2px)};\r\n    $panel-padding: rem(4px, 16px);\r\n\r\n    %selector-base {\r\n        display: flex;\r\n        flex-direction: column;\r\n        max-width: rem(280px);\r\n        background: var-get($theme, 'background');\r\n        z-index: 0;\r\n\r\n        > igx-input-group {\r\n            flex: 0 1 auto;\r\n        }\r\n\r\n        igx-display-container {\r\n            display: flex;\r\n            flex-direction: column;\r\n        }\r\n\r\n        > igx-list {\r\n            igx-display-container {\r\n                padding: rem(4px);\r\n            }\r\n\r\n            igx-list-item {\r\n                display: flex;\r\n                min-height: rem(28px);\r\n            }\r\n\r\n            %cbx-label {\r\n                font-size: rem(13px);\r\n            }\r\n        }\r\n\r\n        %form-group-input--box {\r\n            transform: none;\r\n        }\r\n\r\n        %form-group-prefix,\r\n        %form-group-prefix--cosy,\r\n        %form-group-prefix--compact {\r\n            padding-inline-end: rem(16px) !important;\r\n            box-sizing: content-box;\r\n        }\r\n\r\n        %form-group-bundle-main--box,\r\n        %form-group-bundle-main--box-cosy,\r\n        %form-group-bundle-main--box-compact {\r\n            padding-top: 0 !important;\r\n        }\r\n\r\n        %igx-expanded-panel-margin {\r\n            igx-expansion-panel[aria-expanded='true'] {\r\n                margin-top: 0;\r\n                margin-bottom: 0;\r\n            }\r\n        }\r\n\r\n        %igx-expansion-panel__body {\r\n            position: relative;\r\n            height: rem(128px);\r\n            font-size: rem(14px);\r\n            padding: $panel-padding;\r\n            overflow-y: auto;\r\n\r\n            > igx-list {\r\n                height: auto;\r\n            }\r\n        }\r\n\r\n        %igx-expansion-panel__header-icon--start {\r\n            margin-inline-end: rem(8px);\r\n        }\r\n\r\n        %igx-expansion-panel__header-title {\r\n            display: flex;\r\n\r\n            > h6 {\r\n                font-size: rem(12px);\r\n            }\r\n        }\r\n\r\n        %igx-expansion-panel__header-inner {\r\n            background: var-get($theme, 'header-color');\r\n            padding: $panel-padding;\r\n\r\n            .dragOver & {\r\n                background: color($color: 'gray', $variant: 300);\r\n                box-shadow: inset 0 0 0 rem(1px) color($color: 'gray', $variant: 400);\r\n            }\r\n        }\r\n    }\r\n\r\n    %selector-filter {\r\n        display: flex;\r\n        flex-direction: column;\r\n        overflow: hidden;\r\n\r\n        igx-list {\r\n            display: flex;\r\n            flex-direction: column;\r\n            padding: rem(8px) rem(4px);\r\n            min-height: rem(186px);\r\n            max-height: rem(208px);\r\n            overflow-y: auto;\r\n        }\r\n\r\n        igx-list-item {\r\n            display: flex;\r\n        }\r\n\r\n        igx-checkbox + span {\r\n            margin-inline-start: rem(8px);\r\n            line-height: rem(28px);\r\n        }\r\n    }\r\n\r\n    %selector-header,\r\n    %selector-header-extra {\r\n        display: flex;\r\n        align-items: center;\r\n    }\r\n\r\n    %selector-header-extra {\r\n        igx-icon {\r\n            padding: 0 rem(8px);\r\n            box-sizing: content-box;\r\n        }\r\n\r\n        %igx-chip__item {\r\n            height: #{sizable(map.get($chip-height-material, 'compact'), map.get($chip-height-material, 'cosy'), map.get($chip-height-material, 'comfortable'))};\r\n        }\r\n\r\n        %igx-chip__content {\r\n            padding: $chip-item-padding;\r\n        }\r\n    }\r\n\r\n    %selector-item {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: space-between;\r\n        min-height: rem(32px);\r\n        width: 100%;\r\n\r\n        .igx-drag--push & {\r\n            padding-top: rem(32px);\r\n        }\r\n    }\r\n\r\n    %selector-item-ghost {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: space-between;\r\n        font-size: rem(14px);\r\n        background: color($color: 'surface');\r\n        min-height: rem(32px);\r\n        height: auto;\r\n        padding: 0 rem(2px) 0 rem(4px);\r\n        cursor: grabbing;\r\n        box-shadow: elevation(24);\r\n        border: rem(1px) solid color($color: 'gray', $variant: 100);\r\n        border-radius: border-radius(rem(2px));\r\n        z-index: 10;\r\n    }\r\n\r\n    %selector-base,\r\n    %selector-item-ghost {\r\n        igx-icon {\r\n            width: var(--igx-icon-size, #{rem(18px)});\r\n            height: var(--igx-icon-size, #{rem(18px)});\r\n            font-size: var(--igx-icon-size, #{rem(18px)});\r\n        }\r\n    }\r\n\r\n    %selector-item-ghost-text {\r\n        display: flex;\r\n        align-items: center;\r\n\r\n        igx-icon {\r\n            margin-inline-end: rem(8px);\r\n        }\r\n    }\r\n\r\n    %selector-item-ghost--no-drop {\r\n        cursor: no-drop;\r\n    }\r\n\r\n    %selector-item-text {\r\n        @include ellipsis();\r\n        max-width: calc(100% - rem(18px) + rem(8px));\r\n    }\r\n\r\n    %selector-item-text,\r\n    %selector-action-sort,\r\n    %selector-action-filter,\r\n    %selector-action-move,\r\n    %selector-action-summary {\r\n        user-select: none;\r\n    }\r\n\r\n    %selector-action-sort,\r\n    %selector-action-summary,\r\n    %selector-action-filter {\r\n        cursor: pointer;\r\n    }\r\n\r\n    %selector-action-move {\r\n        cursor: grab;\r\n    }\r\n\r\n    %selector-item-start {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n        flex: 0 1 100%;\r\n        margin-inline-end: rem(8px);\r\n        overflow: hidden;\r\n    }\r\n\r\n    %selector-item-end {\r\n        display: flex;\r\n\r\n        igx-icon + igx-icon {\r\n            margin-inline-start: rem(8px);\r\n        }\r\n    }\r\n}\r\n","@use 'sass:map';\r\n@use '../../base' as *;\r\n@use '../../themes/schemas' as *;\r\n\r\n////\r\n/// @group themes\r\n/// @access public\r\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\r\n////\r\n\r\n/// If only background color(s) specified, text color(s) will be assigned automatically to a contrasting color.\r\n/// @param {Map} $schema [$light-material-schema] - The schema used as basis for styling the component.\r\n/// @param {Color} $resting-background [null]- The background color used for the highlight in its resting state.\r\n/// @param {Color} $resting-color [null] - The text color used for the highlight in its resting state.\r\n/// @param {Color} $active-background [null] - The background color used for the highlight in its active state.\r\n/// @param {Color} $active-color [null] - The text color used for the highlight in its active state.\r\n/// @requires $light-material-schema\r\n/// @example scss Change the background and icon colors in icon highlight\r\n///   $my-highlight-theme: highlight-theme($resting-background: black, $active-color: white);\r\n///   // Pass the theme to the css-vars() mixin\r\n///   @include css-vars($my-highlight-theme);\r\n@function highlight-theme(\r\n    $schema: $light-material-schema,\r\n    $resting-background: null,\r\n    $resting-color: null,\r\n    $active-background: null,\r\n    $active-color: null,\r\n) {\r\n    $name: 'igx-highlight';\r\n    $selector: '.igx-highlight';\r\n    $highlight-schema: ();\r\n\r\n    @if map.has-key($schema, 'highlight') {\r\n        $highlight-schema: map.get($schema, 'highlight');\r\n    } @else {\r\n        $highlight-schema: $schema;\r\n    }\r\n\r\n    $theme: digest-schema($highlight-schema);\r\n\r\n    @if not($resting-color) and $resting-background {\r\n        $resting-color: text-contrast($resting-background);\r\n    }\r\n\r\n    @if not($active-color) and $active-background {\r\n        $active-color: text-contrast($active-background);\r\n    }\r\n\r\n    @return extend($theme, (\r\n        name: $name,\r\n        selector: $selector,\r\n        resting-background: $resting-background,\r\n        resting-color: $resting-color,\r\n        active-background: $active-background,\r\n        active-color: $active-color,\r\n    ));\r\n}\r\n\r\n/// @param {Map} $theme - The theme used to style the component.\r\n@mixin highlight($theme) {\r\n    @include css-vars($theme);\r\n\r\n    %igx-highlight {\r\n        color: var-get($theme, 'resting-color');\r\n        background: var-get($theme, 'resting-background');\r\n    }\r\n\r\n    %igx-highlight--active {\r\n        color: var-get($theme, 'active-color');\r\n        background: var-get($theme, 'active-background');\r\n    }\r\n}\r\n","@use 'sass:map';\r\n@use '../../base' as *;\r\n@use '../../themes/schemas' as *;\r\n\r\n////\r\n/// @group themes\r\n/// @access public\r\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\r\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\r\n////\r\n\r\n/// @param {Map} $schema [$light-material-schema] - The schema used as basis for styling the component.\r\n/// @param {Color} $color [null] - The icon color.\r\n/// @param {String} $size [null] - The icon size.\r\n/// @param {Color} $disabled-color [null] - The disabled icon color.\r\n/// @requires $light-material-schema\r\n/// @example scss Change the icon color\r\n///   $my-icon-theme: icon-theme($color: orange);\r\n///   // Pass the theme to the css-vars() mixin\r\n///   @include css-vars($my-icon-theme);\r\n@function icon-theme(\r\n    $schema: $light-material-schema,\r\n\r\n    $color: null,\r\n    $size: null,\r\n    $disabled-color: null\r\n) {\r\n    $name: 'igx-icon';\r\n    $icon-schema: ();\r\n\r\n    @if map.has-key($schema, 'icon') {\r\n        $icon-schema: map.get($schema, 'icon');\r\n    } @else {\r\n        $icon-schema: $schema;\r\n    }\r\n\r\n    $theme: digest-schema($icon-schema);\r\n\r\n    @if not($size) {\r\n        $size: sizable(rem(16px), rem(20px), rem(24px));\r\n    }\r\n\r\n    @return extend($theme, (\r\n        name: $name,\r\n        color: $color,\r\n        size: $size,\r\n        disabled-color: $disabled-color\r\n    ));\r\n}\r\n\r\n// stylelint-disable font-family-no-missing-generic-family-keyword\r\n/// @param {Map} $theme - The theme used to style the component.\r\n@mixin icon($theme) {\r\n    @include css-vars($theme);\r\n\r\n    $size: var-get($theme, 'size');\r\n\r\n    %igx-icon-display {\r\n        @include sizable();\r\n        --component-size: var(--ig-size, var(--ig-size-large));\r\n\r\n        display: inline-flex;\r\n        width: $size;\r\n        height: $size;\r\n        font-size: $size;\r\n        color: var-get($theme, 'color');\r\n        direction: inherit;\r\n\r\n        div,\r\n        svg {\r\n            display: block;\r\n            width: inherit;\r\n            height: inherit;\r\n            fill: currentColor;\r\n        }\r\n\r\n        &[igxPrefix].material-icons,\r\n        &[igxSuffix].material-icons {\r\n            font-family: 'Material Icons';\r\n        }\r\n    }\r\n\r\n    %igx-icon--success {\r\n        color: color($color: 'success');\r\n    }\r\n\r\n    %igx-icon--error {\r\n        color: color($color: 'error');\r\n    }\r\n\r\n    %igx-icon--inactive {\r\n        color: var-get($theme, 'disabled-color') !important;\r\n        opacity: .54;\r\n    }\r\n}\r\n","////\n/// @package theming\n/// @group animations\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n////\n\n/// @type Timing Function\n$in-quad: cubic-bezier(0.55, 0.085, 0.68, 0.53);\n\n/// @type Timing Function\n$in-cubic: cubic-bezier(0.55, 0.55, 0.675, 0.19);\n\n/// @type Timing Function\n$in-quart: cubic-bezier(0.895, 0.03, 0.685, 0.22);\n\n/// @type Timing Function\n$in-quint: cubic-bezier(0.755, 0.05, 0.855, 0.06);\n\n/// @type Timing Function\n$in-sine: cubic-bezier(0.47, 0, 0.745, 0.715);\n\n/// @type Timing Function\n$in-expo: cubic-bezier(0.95, 0.05, 0.795, 0.035);\n\n/// @type Timing Function\n$in-circ: cubic-bezier(0.95, 0.05, 0.795, 0.035);\n\n/// @type Timing Function\n$in-back: cubic-bezier(0.95, 0.05, 0.795, 0.035);\n\n/// @type Timing Function\n$out-quad: cubic-bezier(0.25, 0.46, 0.45, 0.94);\n\n/// @type Timing Function\n$out-cubic: cubic-bezier(0.215, 0.61, 0.355, 1);\n\n/// @type Timing Function\n$out-quart: cubic-bezier(0.165, 0.84, 0.44, 1);\n\n/// @type Timing Function\n$out-quint: cubic-bezier(0.23, 1, 0.32, 1);\n\n/// @type Timing Function\n$out-sine: cubic-bezier(0.39, 0.575, 0.565, 1);\n\n/// @type Timing Function\n$out-expo: cubic-bezier(0.19, 1, 0.22, 1);\n\n/// @type Timing Function\n$out-circ: cubic-bezier(0.075, 0.82, 0.165, 1);\n\n/// @type Timing Function\n$out-back: cubic-bezier(0.175, 0.885, 0.32, 1.275);\n\n/// @type Timing Function\n$in-out-quad: cubic-bezier(0.455, 0.03, 0.515, 0.955);\n\n/// @type Timing Function\n$in-out-cubic: cubic-bezier(0.645, 0.045, 0.355, 1);\n\n/// @type Timing Function\n$in-out-quart: cubic-bezier(0.77, 0, 0.175, 1);\n\n/// @type Timing Function\n$in-out-quint: 0.5s cubic-bezier(0.86, 0, 0.07, 1);\n\n/// @type Timing Function\n$in-out-sine: cubic-bezier(0.445, 0.05, 0.55, 0.95);\n\n/// @type Timing Function\n$in-out-expo: cubic-bezier(1, 0, 0, 1);\n\n/// @type Timing Function\n$in-out-circ: cubic-bezier(0.785, 0.135, 0.15, 0.86);\n\n/// @type Timing Function\n$in-out-back: cubic-bezier(0.68, -0.55, 0.265, 1.55);\n","@use 'sass:map';\r\n@use '../../base' as *;\r\n@use '../../themes/schemas' as *;\r\n@use 'igniteui-theming/sass/animations/easings' as *;\r\n\r\n////\r\n/// @group themes\r\n/// @access public\r\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\r\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\r\n////\r\n\r\n/// @param {Map} $schema [$light-material-schema] - The schema used as basis for styling the component.\r\n/// @param {Color} $background-color [null] - The background color used for modal overlays.\r\n/// @requires $light-material-schema\r\n/// @example scss Change the background color\r\n///   $my-overlay-theme: overlay-theme($background-color: rgba(yellow, .74));\r\n///   // Pass the theme to the css-vars() mixin\r\n///   @include css-vars($my-overlay-theme);\r\n@function overlay-theme(\r\n    $schema: $light-material-schema,\r\n    $background-color: null\r\n) {\r\n    $name: 'igx-overlay';\r\n    $selector: '.igx-overlay__wrapper--modal, .igx-overlay__content--modal';\r\n    $overlay-schema: ();\r\n\r\n    @if map.has-key($schema, 'overlay') {\r\n        $overlay-schema: map.get($schema, 'overlay');\r\n    } @else {\r\n        $overlay-schema: $schema;\r\n    }\r\n\r\n    $theme: digest-schema($overlay-schema);\r\n\r\n    @return extend($theme, (\r\n        name: $name,\r\n        selector: $selector,\r\n        background-color: $background-color,\r\n    ));\r\n}\r\n\r\n/// @param {Map} $theme - The theme used to style the component.\r\n@mixin overlay($theme) {\r\n    @include css-vars($theme);\r\n\r\n    %overlay-display {\r\n        width: 0;\r\n        height: 0;\r\n        box-sizing: content-box;\r\n    }\r\n\r\n    %overlay-wrapper {\r\n        position: fixed;\r\n        inset: 0;\r\n        background: transparent;\r\n        transition: background .25s $in-out-quad;\r\n        pointer-events: none;\r\n        z-index: 10005;\r\n        box-sizing: content-box;\r\n    }\r\n\r\n    %overlay-wrapper--modal {\r\n        background: var-get($theme, 'background-color');\r\n        pointer-events: initial;\r\n    }\r\n\r\n    %overlay-wrapper--flex {\r\n        display: flex;\r\n    }\r\n\r\n    %overlay-wrapper--flex-container {\r\n        display: flex;\r\n        position: absolute;\r\n    }\r\n\r\n    %overlay-content {\r\n        position: absolute;\r\n        pointer-events: all;\r\n        box-sizing: content-box;\r\n    }\r\n\r\n    %overlay-content--modal {\r\n        pointer-events: initial;\r\n    }\r\n\r\n    %overlay-content--elastic {\r\n        overflow: auto;\r\n    }\r\n\r\n    %overlay-content--relative {\r\n        position: relative;\r\n    }\r\n\r\n    %igx-toggle--hidden {\r\n        display: none !important;\r\n    }\r\n}\r\n","@use 'sass:map';\r\n@use '../../base' as *;\r\n@use '../../themes/schemas' as *;\r\n\r\n////\r\n/// @group themes\r\n/// @access public\r\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\r\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\r\n////\r\n\r\n/// Grid Paging Theme\r\n/// @param {Map} $schema [$light-material-schema] - The schema used as basis for styling the component.\r\n/// @param {Color} $text-color [currentColor] - The text color.\r\n/// @param {Color} $background-color [rgba(0, 0, 0, .04)] - The background color of the paging panel.\r\n/// @param {Color} $border-color [rgba(0, 0, 0, .26)] - The border color of the paging panel.\r\n/// @requires $light-material-schema\r\n/// @example scss Change the stripes color\r\n///   $my-paginator-theme: paginator-theme(\r\n///     $stripes-color: orange\r\n///   );\r\n///   // Pass the theme to the css-vars() mixin\r\n///   @include css-vars($my-paginator-theme);\r\n@function paginator-theme(\r\n    $schema: $light-material-schema,\r\n\r\n    $text-color: null,\r\n    $background-color: null,\r\n    $border-color: null\r\n) {\r\n    $name: 'igx-paginator';\r\n    $grid-paginator-schema: ();\r\n\r\n    @if map.has-key($schema, 'paginator') {\r\n        $grid-paginator-schema: map.get($schema, 'paginator');\r\n    } @else {\r\n        $grid-paginator-schema: $schema;\r\n    }\r\n\r\n    $theme: digest-schema($grid-paginator-schema);\r\n\r\n    @if not($text-color) and $background-color {\r\n        $text-color: text-contrast($background-color);\r\n    }\r\n\r\n    @return extend($theme, (\r\n        name: $name,\r\n        text-color: $text-color,\r\n        background-color: $background-color,\r\n        border-color: $border-color\r\n    ));\r\n}\r\n\r\n/// @param {Map} $theme - The theme used to style the component.\r\n@mixin paginator($theme) {\r\n    @include css-vars($theme);\r\n\r\n    $paginator-padding-inline: (\r\n        comfortable: rem(24px),\r\n        cosy: rem(16px),\r\n        compact: rem(12px)\r\n    );\r\n\r\n    $paginator-height: (\r\n        comfortable: rem(56px),\r\n        cosy: rem(48px),\r\n        compact: rem(44px)\r\n    );\r\n\r\n    %igx-paginator {\r\n        --component-size: var(--ig-size, var(--ig-size-large));\r\n        --size: #{sizable(#{map.get($paginator-height, 'compact')}, #{map.get($paginator-height, 'cosy')}, #{map.get($paginator-height, 'comfortable')})};\r\n\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n        color: var-get($theme, 'text-color');\r\n        background: var-get($theme, 'background-color');\r\n        font-size: rem(12px);\r\n        border-top: rem(1px) solid var-get($theme, 'border-color');\r\n        z-index: 1;\r\n        padding-inline: pad-inline(map.get($paginator-padding-inline, 'compact'), map.get($paginator-padding-inline, 'cosy'), map.get($paginator-padding-inline, 'comfortable'));\r\n        padding-block: 0;\r\n        height: var(--size);\r\n        width: 100%;\r\n\r\n        &:empty {\r\n            padding: 0;\r\n        }\r\n    }\r\n\r\n    %igx-paginator--sizable {\r\n        @include sizable();\r\n    }\r\n\r\n    %igx-paginator--cosy {\r\n        --component-size: var(--ig-size, var(--ig-size-medium));\r\n    }\r\n\r\n    %igx-paginator--compact {\r\n        --component-size: var(--ig-size, var(--ig-size-small));\r\n    }\r\n\r\n    %igx-paginator-content {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: space-between;\r\n        width: 100%;\r\n    }\r\n\r\n    %igx-page-size {\r\n        display: flex;\r\n        justify-content: flex-start;\r\n        align-items: center;\r\n        flex: 1;\r\n    }\r\n\r\n    %igx-page-size__label {\r\n        margin-inline-end: rem(8px);\r\n        @include ellipsis();\r\n    }\r\n\r\n    %igx-page-size__select {\r\n        display: flex;\r\n        max-width: rem(114px);\r\n        min-width: rem(100px);\r\n    }\r\n\r\n    %igx-page-nav {\r\n        display: flex;\r\n        justify-content: flex-end;\r\n        align-items: center;\r\n        flex: 1;\r\n\r\n        > * {\r\n            margin-inline-start: rem(8px);\r\n        }\r\n\r\n        [dir='rtl'] & {\r\n            igx-icon {\r\n                transform: scaleX(-1);\r\n            }\r\n        }\r\n    }\r\n\r\n    %igx-page-nav__text {\r\n        display: flex;\r\n    }\r\n}\r\n","@use '../mixins' as *;\n\n////\n/// @package theming\n/// @group animations\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n////\n\n/// @requires {mixin} keyframes\n@mixin rotate-center {\n    @include keyframes(rotate-center) {\n        0% {\n            transform: rotate(0);\n        }\n\n        100% {\n            transform: rotate(360deg);\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-bl {\n    @include keyframes(rotate-bl) {\n        0% {\n            transform: rotate(0);\n            transform-origin: bottom left;\n        }\n\n        100% {\n            transform: rotate(360deg);\n            transform-origin: bottom left;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-vert-center {\n    @include keyframes(rotate-vert-center) {\n        0% {\n            transform: rotateY(0);\n        }\n\n        100% {\n            transform: rotateY(360deg);\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-diagonal-br {\n    @include keyframes(rotate-diagonal-br) {\n        0% {\n            transform: rotate3d(-1, 1, 0, 0deg);\n            transform-origin: 100% 100%;\n        }\n\n        100% {\n            transform: rotate3d(-1, 1, 0, -360deg);\n            transform-origin: 100% 100%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-top {\n    @include keyframes(rotate-top) {\n        0% {\n            transform: rotate(0);\n            transform-origin: top;\n        }\n\n        100% {\n            transform: rotate(360deg);\n            transform-origin: top;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-left {\n    @include keyframes(rotate-left) {\n        0% {\n            transform: rotate(0);\n            transform-origin: left;\n        }\n\n        100% {\n            transform: rotate(360deg);\n            transform-origin: left;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-vert-left {\n    @include keyframes(rotate-vert-left) {\n        0% {\n            transform: rotateY(0);\n            transform-origin: left;\n        }\n\n        100% {\n            transform: rotateY(360deg);\n            transform-origin: left;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-diagonal-bl {\n    @include keyframes(rotate-diagonal-bl) {\n        0% {\n            transform: rotate3d(1, 1, 0, 0deg);\n            transform-origin: 0% 100%;\n        }\n\n        100% {\n            transform: rotate3d(1, 1, 0, 360deg);\n            transform-origin: 0% 100%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-tr {\n    @include keyframes(rotate-tr) {\n        0% {\n            transform: rotate(0);\n            transform-origin: top right;\n        }\n\n        100% {\n            transform: rotate(360deg);\n            transform-origin: top right;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-tl {\n    @include keyframes(rotate-tl) {\n        0% {\n            transform: rotate(0);\n            transform-origin: top left;\n        }\n\n        100% {\n            transform: rotate(360deg);\n            transform-origin: top left;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-scale-up {\n    @include keyframes(rotate-scale-up) {\n        0% {\n            transform: scale(1) rotateZ(0);\n        }\n\n        50% {\n            transform: scale(2) rotateZ(180deg);\n        }\n\n        100% {\n            transform: scale(1) rotateZ(360deg);\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-scale-up-diag-1 {\n    @include keyframes(rotate-scale-up-diag-1) {\n        0% {\n            transform: scale(1) rotate3d(1, 1, 0, 0deg);\n        }\n\n        50% {\n            transform: scale(2) rotate3d(1, 1, 0, -180deg);\n        }\n\n        100% {\n            transform: scale(1) rotate3d(1, 1, 0, -360deg);\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-scale-down {\n    @include keyframes(rotate-scale-down) {\n        0% {\n            transform: scale(1) rotateZ(0);\n        }\n\n        50% {\n            transform: scale(0.5) rotateZ(180deg);\n        }\n\n        100% {\n            transform: scale(1) rotateZ(360deg);\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-scale-down-diag-1 {\n    @include keyframes(rotate-scale-down-diag-1) {\n        0% {\n            transform: scale(1) rotate3d(1, 1, 0, 0deg);\n        }\n\n        50% {\n            transform: scale(0.5) rotate3d(1, 1, 0, -180deg);\n        }\n\n        100% {\n            transform: scale(1) rotate3d(1, 1, 0, -360deg);\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-scale-up-hor {\n    @include keyframes(rotate-scale-up-hor) {\n        0% {\n            transform: scale(1) rotateX(0);\n        }\n\n        50% {\n            transform: scale(2) rotateX(-180deg);\n        }\n\n        100% {\n            transform: scale(1) rotateX(-360deg);\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-scale-up-diag-2 {\n    @include keyframes(rotate-scale-up-diag-2) {\n        0% {\n            transform: scale(1) rotate3d(-1, 1, 0, 0deg);\n        }\n\n        50% {\n            transform: scale(2) rotate3d(-1, 1, 0, 180deg);\n        }\n\n        100% {\n            transform: scale(1) rotate3d(-1, 1, 0, 360deg);\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-scale-down-hor {\n    @include keyframes(rotate-scale-down-hor) {\n        0% {\n            transform: scale(1) rotateX(0);\n        }\n\n        50% {\n            transform: scale(0.5) rotateX(-180deg);\n        }\n\n        100% {\n            transform: scale(1) rotateX(-360deg);\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-scale-down-diag-2 {\n    @include keyframes(rotate-scale-down-diag-2) {\n        0% {\n            transform: scale(1) rotate3d(-1, 1, 0, 0deg);\n        }\n\n        50% {\n            transform: scale(0.5) rotate3d(-1, 1, 0, 180deg);\n        }\n\n        100% {\n            transform: scale(1) rotate3d(-1, 1, 0, 360deg);\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-scale-up-ver {\n    @include keyframes(rotate-scale-up-ver) {\n        0% {\n            transform: scale(1) rotateY(0);\n        }\n\n        50% {\n            transform: scale(2) rotateY(180deg);\n        }\n\n        100% {\n            transform: scale(1) rotateY(360deg);\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-scale-down-ver {\n    @include keyframes(rotate-scale-down-ver) {\n        0% {\n            transform: scale(1) rotateY(0);\n        }\n\n        50% {\n            transform: scale(0.5) rotateY(180deg);\n        }\n\n        100% {\n            transform: scale(1) rotateY(360deg);\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-90-cw {\n    @include keyframes(rotate-90-cw) {\n        0% {\n            transform: rotate(0);\n        }\n\n        100% {\n            transform: rotate(90deg);\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-90-right-cw {\n    @include keyframes(rotate-90-right-cw) {\n        0% {\n            transform: rotate(0);\n            transform-origin: right;\n        }\n\n        100% {\n            transform: rotate(90deg);\n            transform-origin: right;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-90-bl-cw {\n    @include keyframes(rotate-90-bl-cw) {\n        0% {\n            transform: rotate(0);\n            transform-origin: 0% 100%;\n        }\n\n        100% {\n            transform: rotate(90deg);\n            transform-origin: 0% 100%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-90-horizontal-fwd {\n    @include keyframes(rotate-90-horizontal-fwd) {\n        0% {\n            transform: rotateX(0);\n        }\n\n        100% {\n            transform: rotateX(90deg);\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-90-ccw {\n    @include keyframes(rotate-90-ccw) {\n        0% {\n            transform: rotate(0);\n        }\n\n        100% {\n            transform: rotate(-90deg);\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-90-right-ccw {\n    @include keyframes(rotate-90-right-ccw) {\n        0% {\n            transform: rotate(0);\n            transform-origin: right;\n        }\n\n        100% {\n            transform: rotate(-90deg);\n            transform-origin: right;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-90-bl-ccw {\n    @include keyframes(rotate-90-bl-ccw) {\n        0% {\n            transform: rotate(0);\n            transform-origin: 0% 100%;\n        }\n\n        100% {\n            transform: rotate(-90deg);\n            transform-origin: 0% 100%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-90-horizontal-bck {\n    @include keyframes(rotate-90-horizontal-bck) {\n        0% {\n            transform: rotateX(0);\n        }\n\n        100% {\n            transform: rotateX(-90deg);\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-90-top-cw {\n    @include keyframes(rotate-90-top-cw) {\n        0% {\n            transform: rotate(0);\n            transform-origin: top;\n        }\n\n        100% {\n            transform: rotate(90deg);\n            transform-origin: top;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-90-br-cw {\n    @include keyframes(rotate-90-br-cw) {\n        0% {\n            transform: rotate(0);\n            transform-origin: 100% 100%;\n        }\n\n        100% {\n            transform: rotate(90deg);\n            transform-origin: 100% 100%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-90-left-cw {\n    @include keyframes(rotate-90-left-cw) {\n        0% {\n            transform: rotate(0);\n            transform-origin: left;\n        }\n\n        100% {\n            transform: rotate(90deg);\n            transform-origin: left;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-90-vertical-fwd {\n    @include keyframes(rotate-90-vertical-fwd) {\n        0% {\n            transform: rotateY(0);\n        }\n\n        100% {\n            transform: rotateY(90deg);\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-90-top-ccw {\n    @include keyframes(rotate-90-top-ccw) {\n        0% {\n            transform: rotate(0);\n            transform-origin: top;\n        }\n\n        100% {\n            transform: rotate(-90deg);\n            transform-origin: top;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-90-br-ccw {\n    @include keyframes(rotate-90-br-ccw) {\n        0% {\n            transform: rotate(0);\n            transform-origin: 100% 100%;\n        }\n\n        100% {\n            transform: rotate(-90deg);\n            transform-origin: 100% 100%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-90-left-ccw {\n    @include keyframes(rotate-90-left-ccw) {\n        0% {\n            transform: rotate(0);\n            transform-origin: left;\n        }\n\n        100% {\n            transform: rotate(-90deg);\n            transform-origin: left;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-90-vertical-bck {\n    @include keyframes(rotate-90-vertical-bck) {\n        0% {\n            transform: rotateY(0);\n        }\n\n        100% {\n            transform: rotateY(-90deg);\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-90-tr-cw {\n    @include keyframes(rotate-90-tr-cw) {\n        0% {\n            transform: rotate(0);\n            transform-origin: top right;\n        }\n\n        100% {\n            transform: rotate(90deg);\n            transform-origin: top right;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-90-bottom-cw {\n    @include keyframes(rotate-90-bottom-cw) {\n        0% {\n            transform: rotate(0);\n            transform-origin: bottom;\n        }\n\n        100% {\n            transform: rotate(90deg);\n            transform-origin: bottom;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-90-tl-cw {\n    @include keyframes(rotate-90-tl-cw) {\n        0% {\n            transform: rotate(0);\n            transform-origin: 0% 0%;\n        }\n\n        100% {\n            transform: rotate(90deg);\n            transform-origin: 0% 0%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-90-tr-ccw {\n    @include keyframes(rotate-90-tr-ccw) {\n        0% {\n            transform: rotate(0);\n            transform-origin: top right;\n        }\n\n        100% {\n            transform: rotate(-90deg);\n            transform-origin: top right;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-90-bottom-ccw {\n    @include keyframes(rotate-90-bottom-ccw) {\n        0% {\n            transform: rotate(0);\n            transform-origin: bottom;\n        }\n\n        100% {\n            transform: rotate(-90deg);\n            transform-origin: bottom;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-90-tl-ccw {\n    @include keyframes(rotate-90-tl-ccw) {\n        0% {\n            transform: rotate(0);\n            transform-origin: 0% 0%;\n        }\n\n        100% {\n            transform: rotate(-90deg);\n            transform-origin: 0% 0%;\n        }\n    }\n}\n","@use 'sass:map';\r\n@use 'sass:meta';\r\n@use 'sass:list';\r\n@use '../../base' as *;\r\n@use 'igniteui-theming/sass/animations' as *;\r\n@use '../../themes/schemas' as *;\r\n\r\n////\r\n/// @group themes\r\n/// @access public\r\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\r\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\r\n////\r\n\r\n/// @param {Map} $schema [$light-material-schema] - The schema used as basis for styling the component.\r\n/// @param {Color} $track-color [null] - The main track color.\r\n/// @param {Color} $fill-color-default [null] - The track default fill color.\r\n/// @param {Color} $fill-color-danger [null] - The track danger fill color.\r\n/// @param {Color} $fill-color-warning [null] - The track warning fill color.\r\n/// @param {Color} $fill-color-info [null] - The track info fill color.\r\n/// @param {Color} $fill-color-success [null] - The track success fill color.\r\n/// @param {Color} $stripes-color [null] - The track stripes color.\r\n/// @param {Color} $text-color [null] - The track value text color.\r\n/// @param {List} $track-border-radius [null] - The border radius fraction, between 0 - 8 to be used fot the progress bar track\r\n/// @requires $light-material-schema\r\n/// @example scss Change the stripes color\r\n///   $my-progress-linear-theme: progress-linear-theme(\r\n///     $stripes-color: orange\r\n///   );\r\n///   // Pass the theme to the css-vars() mixin\r\n///   @include css-vars($my-progress-linear-theme);\r\n@function progress-linear-theme(\r\n    $schema: $light-material-schema,\r\n\r\n    $track-color: null,\r\n    $fill-color-default: null,\r\n    $fill-color-danger: null,\r\n    $fill-color-warning: null,\r\n    $fill-color-info: null,\r\n    $fill-color-success: null,\r\n    $stripes-color: null,\r\n    $text-color: null,\r\n    $track-border-radius: null,\r\n) {\r\n    $name: 'igx-linear-bar';\r\n    $linear-bar-schema: ();\r\n\r\n    @if map.has-key($schema, 'linear-bar') {\r\n        $linear-bar-schema: map.get($schema, 'linear-bar');\r\n    } @else {\r\n        $linear-bar-schema: $schema;\r\n    }\r\n\r\n    $theme: digest-schema($linear-bar-schema);\r\n    $meta: map.get($theme, '_meta');\r\n\r\n    @if not($track-border-radius) {\r\n        $track-border-radius: border-radius(map.get($theme, 'track-border-radius')...);\r\n    }\r\n\r\n    @return extend($theme, (\r\n        name: $name,\r\n        track-color: $track-color,\r\n        fill-color-default: $fill-color-default,\r\n        fill-color-danger: $fill-color-danger,\r\n        fill-color-warning: $fill-color-warning,\r\n        fill-color-info: $fill-color-info,\r\n        fill-color-success: $fill-color-success,\r\n        stripes-color: $stripes-color,\r\n        text-color: $text-color,\r\n        track-border-radius: $track-border-radius,\r\n        _meta: map.merge(if($meta, $meta, ()), (\r\n            variant: map.get($schema, '_meta', 'theme')\r\n        )),\r\n    ));\r\n}\r\n\r\n@mixin striped-gradient($gradient-orientation, $stripe-color) {\r\n    background-image: linear-gradient(\r\n        $gradient-orientation,\r\n        $stripe-color 25%,\r\n        transparent 25%,\r\n        transparent 50%,\r\n        $stripe-color 50%,\r\n        $stripe-color 75%,\r\n        transparent 75%,\r\n        transparent\r\n    );\r\n}\r\n\r\n@mixin striped-gradient--indigo($gradient-orientation, $stripe-color) {\r\n    background-image: linear-gradient(\r\n        $gradient-orientation,\r\n        transparent 25%,\r\n        $stripe-color 25%,\r\n        $stripe-color 75%,\r\n        transparent 75%,\r\n    );\r\n}\r\n\r\n/// @param {Map} $theme - The theme used to style the component.\r\n@mixin progress-linear($theme) {\r\n    @include css-vars($theme);\r\n\r\n    $variant: map.get($theme, '_meta', 'variant');\r\n\r\n    $bar-height: map.get((\r\n        material: rem(4px),\r\n        fluent: rem(4px),\r\n        bootstrap: rem(16px),\r\n        indigo-design: rem(4px),\r\n    ), $variant);\r\n\r\n    $gradient-orientation: map.get((\r\n        material: -45deg,\r\n        fluent: -45deg,\r\n        bootstrap: 45deg,\r\n        indigo-design: 45deg,\r\n    ), $variant);\r\n\r\n    $gradient-orientation-rtl: map.get((\r\n        material: 45deg,\r\n        fluent: 45deg,\r\n        bootstrap: -45deg,\r\n        indigo-design: -45deg,\r\n    ), $variant);\r\n\r\n    $background-size: map.get((\r\n        material: rem(40px) rem(40px),\r\n        fluent: rem(40px) rem(40px),\r\n        bootstrap: rem(16px) rem(16px),\r\n        indigo-design: rem(20px),\r\n    ), $variant);\r\n\r\n    $stripe-color: var-get($theme, 'stripes-color');\r\n    $value-fs: rem(14px, 16px);\r\n    $value-fw: 600;\r\n    $value-margin: 0;\r\n\r\n    %linear-display {\r\n        position: relative;\r\n        display: flex;\r\n        width: 100%;\r\n        flex: 1 1 100%;\r\n        flex-direction: column;\r\n\r\n        &[dir='rtl'],\r\n        [dir='rtl'] & {\r\n            %linear-bar {\r\n                transform: rotateY(180deg);\r\n            }\r\n        }\r\n    }\r\n\r\n    %linear-bar {\r\n        position: relative;\r\n        width: inherit;\r\n        height: $bar-height;\r\n        background: var-get($theme, 'track-color');\r\n        overflow: hidden;\r\n        border-radius: var-get($theme, 'track-border-radius');\r\n        z-index: 0;\r\n    }\r\n\r\n    %linear-indicator {\r\n        width: 100%;\r\n        position: absolute;\r\n        height: 100%;\r\n    }\r\n\r\n    %linear-indicator--striped {\r\n        @if $variant != 'indigo-design' {\r\n            @include striped-gradient($gradient-orientation, $stripe-color);\r\n        } @else {\r\n            @include striped-gradient--indigo($gradient-orientation, $stripe-color);\r\n        }\r\n\r\n        background-size: $background-size;\r\n\r\n        [dir='rtl'] & {\r\n            @if $variant != 'indigo-design' {\r\n                @include striped-gradient($gradient-orientation-rtl, $stripe-color);\r\n            } @else {\r\n                @include striped-gradient--indigo($gradient-orientation-rtl, $stripe-color);\r\n            }\r\n        }\r\n    }\r\n\r\n    %linear-indicator--indeterminate-secondary,\r\n    %linear-indicator--indeterminate-primary\r\n    {\r\n        transform-origin: top left;\r\n        width: 100% !important;\r\n        height: inherit;\r\n        position: absolute;\r\n        background: transparent;\r\n\r\n        &::after {\r\n            content: '';\r\n            position: absolute;\r\n            top: 0;\r\n            inset-inline-start: 0;\r\n            width: inherit;\r\n            height: inherit;\r\n            background: var-get($theme, 'fill-color-default');\r\n            backface-visibility: hidden;\r\n        }\r\n    }\r\n\r\n    %linear-indicator--indeterminate-primary {\r\n        transform: scale3d(0, 1, 1);\r\n        animation: indeterminate-primary 2000ms infinite linear;\r\n        left: -145.166611%;\r\n\r\n        &::after {\r\n            animation: indeterminate-primary-scale 2000ms infinite linear;\r\n        }\r\n    }\r\n\r\n    %linear-indicator--indeterminate-secondary {\r\n        animation: indeterminate-secondary 2000ms infinite linear;\r\n        left: -54.888891%;\r\n\r\n        &::after {\r\n            animation: indeterminate-secondary-scale 2000ms infinite linear;\r\n            width: 100%;\r\n            height: inherit;\r\n        }\r\n    }\r\n\r\n    %linear-indicator--default {\r\n        background: var-get($theme, 'fill-color-default')\r\n    }\r\n\r\n    %linear-indicator--danger {\r\n        background-color: var-get($theme, 'fill-color-danger');\r\n    }\r\n\r\n    %linear-indicator--warning {\r\n        background-color: var-get($theme, 'fill-color-warning');\r\n    }\r\n\r\n    %linear-indicator--info {\r\n        background-color: var-get($theme, 'fill-color-info');\r\n    }\r\n\r\n    %linear-indicator--success {\r\n        background-color: var-get($theme, 'fill-color-success');\r\n    }\r\n\r\n    %linear-value {\r\n        margin: $value-margin;\r\n        color: var-get($theme, 'text-color');\r\n        font-size: $value-fs;\r\n        font-weight: $value-fw;\r\n    }\r\n\r\n    %linear-value--start {\r\n        align-self: flex-start;\r\n    }\r\n\r\n    %linear-value--center {\r\n        align-self: center;\r\n    }\r\n\r\n    %linear-value--end {\r\n        align-self: flex-end;\r\n    }\r\n\r\n    %linear-value--top {\r\n        order: -1;\r\n    }\r\n\r\n    %linear-value--hidden {\r\n        display: none;\r\n    }\r\n\r\n    $indeterminate-primary-translate-step-2: cubic-bezier(.5, 0, .701732, .495819);\r\n    $indeterminate-primary-translate-step-3: cubic-bezier(.302435, .381352, .55, .956352);\r\n\r\n    $indeterminate-primary-scale-step-2: cubic-bezier(.334731, .12482, .785844, 1);\r\n    $indeterminate-primary-scale-step-3: cubic-bezier(.06, .11, .6, 1);\r\n\r\n    $indeterminate-secondary-translate-step-1: cubic-bezier(.15, 0, .515058, .409685);\r\n    $indeterminate-secondary-translate-step-2: cubic-bezier(.31033, .284058, .8, .733712);\r\n    $indeterminate-secondary-translate-step-3: cubic-bezier(.4, .627035, .6, .902026);\r\n\r\n    $indeterminate-secondary-scale-step-1: cubic-bezier(.15, 0, .515058, .409685);\r\n    $indeterminate-secondary-scale-step-2: cubic-bezier(.31033, .284058, .8, .733712);\r\n    $indeterminate-secondary-scale-step-3: cubic-bezier(.4, .627035, .6, .902026);\r\n\r\n    @keyframes indeterminate-primary {\r\n        0% {\r\n            transform: translateX(0);\r\n        }\r\n\r\n        20% {\r\n            animation-timing-function: $indeterminate-primary-translate-step-2;\r\n            transform: translateX(0);\r\n        }\r\n\r\n        59.15% {\r\n            animation-timing-function: $indeterminate-primary-translate-step-3;\r\n            transform: translateX(83.67142%);\r\n        }\r\n\r\n        100% {\r\n            transform: translateX(200.611057%);\r\n        }\r\n    }\r\n\r\n    @keyframes indeterminate-primary-scale {\r\n        0% {\r\n            transform: scaleX(.08);\r\n        }\r\n\r\n        36.65% {\r\n            animation-timing-function: $indeterminate-primary-scale-step-2;\r\n            transform: scaleX(.08);\r\n        }\r\n\r\n        69.15% {\r\n            animation-timing-function: $indeterminate-primary-scale-step-2;\r\n            transform: scaleX(.661479);\r\n        }\r\n\r\n        100% {\r\n            transform: scaleX(.08);\r\n        }\r\n    }\r\n\r\n    @keyframes indeterminate-secondary {\r\n        0% {\r\n            animation-timing-function: $indeterminate-secondary-translate-step-1;\r\n            transform: translateX(0);\r\n        }\r\n\r\n        25% {\r\n            animation-timing-function: $indeterminate-secondary-translate-step-2;\r\n\r\n            transform: translateX(37.651913%);\r\n        }\r\n\r\n        48.35% {\r\n            animation-timing-function: $indeterminate-secondary-translate-step-3;\r\n            transform: translateX(84.386165%);\r\n        }\r\n\r\n        100% {\r\n            transform: translateX(160.277782%);\r\n        }\r\n    }\r\n\r\n    @keyframes indeterminate-secondary-scale {\r\n        0% {\r\n            animation-timing-function: $indeterminate-secondary-scale-step-1;\r\n            transform: scaleX(.08);\r\n        }\r\n\r\n        19.15% {\r\n            animation-timing-function: $indeterminate-secondary-scale-step-2;\r\n            transform: scaleX(.457104);\r\n        }\r\n\r\n        44.15% {\r\n            animation-timing-function: $indeterminate-secondary-scale-step-3;\r\n            transform: scaleX(.72796);\r\n        }\r\n\r\n        100% {\r\n            transform: scaleX(.08);\r\n        }\r\n    }\r\n}\r\n\r\n/// @param {Map} $schema [$light-material-schema] - The schema used as basis for styling the component.\r\n///\r\n/// @param {Color} $base-circle-color [null] - The base circle fill color.\r\n/// @param {Color | List<Color>} $progress-circle-color [null] - The progress circle fill color.\r\n/// @param {Color} $text-color [null] - The value text color.\r\n///\r\n/// @requires $light-material-schema\r\n///\r\n/// @example scss Change the circle progress color\r\n///   $my-progress-circular-theme: igx-progress-circular-theme(\r\n///     $progress-circle-color: purple\r\n///   );\r\n///   // Pass the theme to the igx-progress-circular component mixin\r\n///   @include igx-progress-circular($my-progress-circle-theme);\r\n@function progress-circular-theme(\r\n    $schema: $light-material-schema,\r\n\r\n    $base-circle-color: null,\r\n    $progress-circle-color: null,\r\n\r\n    $text-color: null\r\n) {\r\n    $name: 'igx-circular-bar';\r\n    $circular-bar-schema: ();\r\n\r\n    @if map.has-key($schema, 'circular-bar') {\r\n        $circular-bar-schema: map.get($schema, 'circular-bar');\r\n    } @else {\r\n        $circular-bar-schema: $schema;\r\n    }\r\n\r\n    $theme: digest-schema($circular-bar-schema);\r\n    $meta: map.get($theme, '_meta');\r\n\r\n    $progress-circle-color-start: map.get($theme, 'progress-circle-color');\r\n    $progress-circle-color-end: map.get($theme, 'progress-circle-color');\r\n\r\n    @if meta.type-of($progress-circle-color) == 'color' {\r\n        $progress-circle-color-start: $progress-circle-color;\r\n        $progress-circle-color-end: $progress-circle-color;\r\n    }\r\n\r\n    @if list.length($progress-circle-color) == 2 {\r\n        $progress-circle-color-start: list.nth($progress-circle-color, 1);\r\n        $progress-circle-color-end: list.nth($progress-circle-color, 2);\r\n    }\r\n\r\n    @return extend($theme, (\r\n        name: $name,\r\n        base-circle-color: $base-circle-color,\r\n        progress-circle-color-start: $progress-circle-color-start,\r\n        progress-circle-color-end: $progress-circle-color-end,\r\n        text-color: $text-color,\r\n        _meta: map.merge(if($meta, $meta, ()), (\r\n            variant: map.get($schema, '_meta', 'theme')\r\n        )),\r\n    ));\r\n}\r\n\r\n/// @param {Map} $theme - The theme used to style the component.\r\n@mixin progress-circular($theme) {\r\n    // Include rotate animation\r\n    @include rotate-center();\r\n\r\n    @include css-vars($theme);\r\n\r\n    $variant: map.get($theme, '_meta', 'variant');\r\n\r\n    $stroke-width: map.get((\r\n        material: rem(4px),\r\n        fluent: rem(4px),\r\n        bootstrap: rem(8px),\r\n        indigo-design: rem(6px),\r\n    ), $variant);\r\n\r\n    %circular-display {\r\n        display: inline-flex;\r\n        flex: 1 1 auto;\r\n        width: rem(32px);\r\n        height: rem(32px);\r\n        position: relative;\r\n\r\n        svg {\r\n            width: 100%;\r\n            height: 100%;\r\n            min-width: inherit;\r\n            min-height: inherit;\r\n            //transform-origin: 50% 50%;\r\n            transform: rotate(-90deg);\r\n        }\r\n    }\r\n\r\n    %circular-display--indeterminate {\r\n        @include animation(rotate-center 3s linear normal infinite);\r\n\r\n        [dir='rtl'] & {\r\n            animation-direction: reverse;\r\n        }\r\n    }\r\n\r\n    %circular-inner {\r\n        stroke-width: $stroke-width;\r\n        fill: transparent;\r\n        stroke: var-get($theme, 'base-circle-color');\r\n    }\r\n\r\n    %circular-outer {\r\n        fill: transparent;\r\n        stroke-width: $stroke-width;\r\n        stroke-dashoffset: 289;\r\n        stroke-dasharray: 289;\r\n\r\n        @if $variant == 'indigo-design' {\r\n            stroke-linecap: round;\r\n        }\r\n    }\r\n\r\n    %circular-outer--indeterminate {\r\n        stroke-dasharray: 289;\r\n        @include animation(indeterminate-accordion 1.5s cubic-bezier(0, .085, .68, .53) normal infinite);\r\n\r\n        [dir='rtl'] & {\r\n            animation-direction: reverse;\r\n        }\r\n    }\r\n\r\n    %circular-text {\r\n        position: absolute;\r\n        inset-block-start: 50%;\r\n        inset-inline-start: 50%;\r\n        transform: translate(-50%, -50%);\r\n        font-size: rem(16px);\r\n        line-height: 1;\r\n        text-align: center;\r\n        font-weight: 600;\r\n        fill: var-get($theme, 'text-color');\r\n    }\r\n\r\n    %circular-text--hidden {\r\n        visibility: hidden;\r\n    }\r\n\r\n    %circular-gradient-start {\r\n        stop-color: var-get($theme, 'progress-circle-color-start');\r\n    }\r\n\r\n    %circular-gradient-end {\r\n        stop-color: var-get($theme, 'progress-circle-color-end');\r\n    }\r\n\r\n    @include keyframes('indeterminate-accordion') {\r\n        from {\r\n            stroke-dashoffset: 578;\r\n            stroke-dasharray: 259;\r\n        }\r\n\r\n        to {\r\n            stroke-dashoffset: 120;\r\n        }\r\n    }\r\n}\r\n","@use 'sass:map';\r\n@use '../../base' as *;\r\n@use '../../themes/schemas' as *;\r\n\r\n/// @group themes\r\n/// @access public\r\n/// @param {Map} $schema [$light-material-schema] - The schema used as basis for styling the component.\r\n/// @param {Map} $elevations [null] - The elevations (shadows) map to be used.\r\n/// @param {Color} background [null] - The background color of the filtering row.\r\n/// @param {Color} header-background [null] - The background color of the query builder header.\r\n/// @param {Color} header-foreground [null] - The foreground color of the query builder header.\r\n/// @param {Map} background-and [null] - The background color of advanced filtering \"AND\" condition.\r\n/// @param {Map} background-and--focus [null] - The background color on focus/selected of advanced filtering \"AND\" condition.\r\n/// @param {Map} background-or [null] - The background color of advanced filtering \"OR\" condition.\r\n/// @param {Map} background-or--focus [null] - The background color on focus/selected of advanced filtering \"OR\" condition.\r\n/// @example scss Set custom query-builder colors\r\n///   $my-query-builder-theme: query-builder-theme($$background: red);\r\n///   // Pass the theme to the css-vars() mixin\r\n///   @include css-vars($my-query-builder-theme);\r\n@function query-builder-theme(\r\n    $schema: $light-material-schema,\r\n    $elevations: null,\r\n\r\n    $background: null,\r\n    $header-background: null,\r\n    $header-foreground: null,\r\n    $background-and: null,\r\n    $background-and--focus: null,\r\n    $background-or: null,\r\n    $background-or--focus: null,\r\n) {\r\n    $name: 'igx-query-builder';\r\n    $selector: 'igx-query-builder';\r\n    $query-builder-schema: ();\r\n\r\n    @if map.has-key($schema, 'query-builder') {\r\n        $query-builder-schema: map.get($schema, 'query-builder');\r\n    } @else {\r\n        $query-builder-schema: $schema;\r\n    }\r\n\r\n    $theme: digest-schema($query-builder-schema);\r\n    $meta: map.get($theme, '_meta');\r\n\r\n    @if not($header-foreground) and $header-background {\r\n        $header-foreground: text-contrast($header-background);\r\n    }\r\n\r\n    @return extend($theme, (\r\n        name: $name,\r\n        selector: $selector,\r\n\r\n        background: $background,\r\n        header-background: $header-background,\r\n        header-foreground: $header-foreground,\r\n        background-and: $background-and,\r\n        background-and--focus: $background-and--focus,\r\n        background-or: $background-or,\r\n        background-or--focus: $background-or--focus,\r\n        _meta: map.merge(if($meta, $meta, ()), (\r\n            variant: map.get($schema, '_meta', 'theme')\r\n        )),\r\n    ));\r\n}\r\n\r\n////\r\n/// @group themes\r\n/// @access private\r\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\r\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\r\n////\r\n\r\n/// @param {Map} $theme - The grid theme used to style the component.\r\n@mixin query-builder($theme) {\r\n    @include css-vars($theme);\r\n\r\n    $variant: map.get($theme, '_meta', 'variant');\r\n    $bootstrap-theme: $variant == 'bootstrap';\r\n    $not-bootstrap-theme: not($bootstrap-theme);\r\n\r\n    $vertical-space-comfortable: rem(16px);\r\n    $vertical-space-cosy: rem(12px);\r\n    $vertical-space-compact: rem(8px);\r\n    $horizontal-space-comfortable: rem(16px);\r\n    $horizontal-space-cosy: rem(12px);\r\n    $horizontal-space-compact: rem(8px);\r\n    $icon-size: rem(18px);\r\n\r\n    %advanced-filter {\r\n        width: auto;\r\n        min-width: rem(660px);\r\n        background-color: var-get($theme, 'background');\r\n        border-radius: border-radius(rem(4px));\r\n        box-shadow: elevation(12);\r\n    }\r\n\r\n    %advanced-filter__header {\r\n        display: flex;\r\n        align-items: center;\r\n        padding: $vertical-space-comfortable;\r\n        background-color: var-get($theme, 'header-background');\r\n        color: var-get($theme, 'header-foreground');\r\n        user-select: none;\r\n\r\n        h4,\r\n        .ig-typography__h6 {\r\n            margin-bottom: 0;\r\n        }\r\n    }\r\n\r\n    %advanced-filter__main {\r\n        display: block;\r\n        padding: rem(16px);\r\n        overflow: auto;\r\n        min-height: rem(214px);\r\n        max-height: rem(468px);\r\n\r\n        [igxButton] + [igxButton] {\r\n            margin-inline-start: rem(8px);\r\n        }\r\n    }\r\n\r\n    %advanced-filter__outlet {\r\n        igx-select-item > igx-icon {\r\n            width: var(--igx-icon-size, #{$icon-size});\r\n            height: var(--igx-icon-size, #{$icon-size});\r\n            font-size: var(--igx-icon-size, #{$icon-size});\r\n            margin-inline-end: rem(8px);\r\n        }\r\n    }\r\n\r\n    %filter-tree {\r\n        display: flex;\r\n\r\n        + %filter-tree,\r\n        + %filter-tree__expression-item,\r\n        + %filter-tree__inputs {\r\n            margin-top: $vertical-space-comfortable;\r\n        }\r\n    }\r\n\r\n    %filter-tree__line {\r\n        width: rem(8px);\r\n        min-width: rem(8px);\r\n        background-color: white;\r\n        margin-inline-end: $horizontal-space-comfortable;\r\n        outline-style: none;\r\n        border-radius: border-radius(rem(4px));\r\n        cursor: pointer;\r\n    }\r\n\r\n    %filter-tree__line--and {\r\n        background: var-get($theme, 'background-and');\r\n\r\n        &-selected {\r\n            background: var-get($theme, 'background-and--focus');\r\n        }\r\n\r\n        &:focus {\r\n            box-shadow: inset 0 0 0 rem(2px) var-get($theme, 'background-and--focus');\r\n        }\r\n    }\r\n\r\n    %filter-tree__line--or {\r\n        background: var-get($theme, 'background-or');\r\n\r\n        &-selected {\r\n            background-color: var-get($theme, 'background-or--focus');\r\n        }\r\n\r\n        &:focus {\r\n            box-shadow: inset 0 0 0 rem(2px) var-get($theme, 'background-or--focus');\r\n        }\r\n    }\r\n\r\n    %filter-tree__expression {\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: flex-start;\r\n    }\r\n\r\n    %filter-tree__expression-item {\r\n        display: flex;\r\n        align-items: center;\r\n\r\n        + %filter-tree,\r\n        + %filter-tree__inputs,\r\n        + %filter-tree__expression-item {\r\n            margin-top: $vertical-space-comfortable;\r\n        }\r\n\r\n        > igx-chip igx-prefix {\r\n            display: flex;\r\n        }\r\n    }\r\n\r\n    %filter-tree__expression-column {\r\n        padding: 0 rem(8px);\r\n    }\r\n\r\n    %filter-tree__expression-actions {\r\n        display: inline-flex;\r\n        margin: 0 rem(8px);\r\n\r\n        igx-icon {\r\n            cursor: pointer;\r\n            color: color(null, 'gray', 500);\r\n            outline-style: none;\r\n\r\n            &:hover,\r\n            &:focus {\r\n                color: color(null, 'gray', 800);\r\n            }\r\n        }\r\n\r\n        igx-icon + igx-icon {\r\n            margin-inline-start: rem(8px);\r\n        }\r\n    }\r\n\r\n    %filter-tree__expression-condition {\r\n        opacity: .7;\r\n    }\r\n\r\n    %filter-tree__buttons {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n        margin-top: $vertical-space-comfortable;\r\n\r\n        + %filter-tree,\r\n        + %filter-tree__expression-item,\r\n        + %filter-tree__inputs {\r\n            margin-top: $vertical-space-comfortable;\r\n        }\r\n    }\r\n\r\n    %filter-tree__inputs {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n\r\n        igx-select + igx-select,\r\n        igx-select + igx-input-group,\r\n        igx-select + igx-date-picker,\r\n        igx-select + igx-time-picker,\r\n        igx-input-group + igx-select {\r\n            margin-inline-start: rem(8px);\r\n        }\r\n\r\n        + %filter-tree,\r\n        + %filter-tree__expression-item {\r\n            margin-top: $vertical-space-comfortable;\r\n        }\r\n    }\r\n\r\n    %filter-tree__inputs-actions {\r\n        display: flex;\r\n        margin: 0 rem(8px);\r\n        align-items: center;\r\n\r\n        [igxButton] {\r\n            transition: none;\r\n        }\r\n\r\n        [igxButton] + [igxButton] {\r\n            margin-inline-start: rem(8px);\r\n        }\r\n    }\r\n\r\n    %filter-legend {\r\n        display: flex;\r\n        margin-inline-start: auto;\r\n        pointer-events: none;\r\n    }\r\n\r\n    %filter-legend__item {\r\n        position: relative;\r\n        display: inline-flex;\r\n        align-items: center;\r\n        font-size: rem(12px);\r\n\r\n        &::before {\r\n            content: '';\r\n            width: rem(24px);\r\n            height: rem(24px);\r\n            background: white;\r\n            border-radius: border-radius(rem(4px));\r\n            margin-inline-end: rem(8px);\r\n        }\r\n\r\n        + %filter-legend__item {\r\n            margin-inline-start: rem(24px);\r\n        }\r\n    }\r\n\r\n    %filter-legend__item--and::before {\r\n        background: var-get($theme, 'background-and');\r\n    }\r\n\r\n    %filter-legend__item--or::before {\r\n        background: var-get($theme, 'background-or');\r\n    }\r\n\r\n    %filter-con-menu {\r\n        position: relative;\r\n        display: flex;\r\n        flex-flow: column;\r\n        width: rem(196px);\r\n        background-color: var-get($theme, 'background');\r\n        padding: rem(16px);\r\n        margin-inline-start: rem(16px);\r\n        border-radius: border-radius(rem(4px));\r\n        border: rem(1px) solid color(null, 'gray', 200);\r\n\r\n        > [igxButton] + [igxButton],\r\n        igx-buttongroup + [igxButton],\r\n        [igxButton] + igx-buttongroup {\r\n            margin-top: $vertical-space-comfortable;\r\n        }\r\n\r\n        > [igxButton]%filter-con-menu__close-btn + [igxButton],\r\n        [igxButton]%filter-con-menu__close-btn + igx-buttongroup {\r\n            margin-top: 0;\r\n        }\r\n\r\n        [igxButton] > igx-icon + * {\r\n            margin-inline-start: rem(8px);\r\n        }\r\n\r\n        igx-buttongroup > * {\r\n            box-shadow: none;\r\n        }\r\n    }\r\n\r\n    %filter-con-menu__delete-btn {\r\n        color: color(null, 'error');\r\n        @if $bootstrap-theme {\r\n            border-color: color(null, 'error');\r\n        }\r\n\r\n        &:hover,\r\n        &:focus {\r\n            @if $bootstrap-theme {\r\n                background: color(null, 'error');\r\n                border-color: color(null, 'error');\r\n                color: color(null, 'gray', 100);\r\n            } @else {\r\n                color: color(null, 'error');\r\n            }\r\n        }\r\n    }\r\n\r\n    %filter-con-menu__close-btn {\r\n        position: absolute;\r\n        top: rem(-18px);\r\n        inset-inline-end: rem(-18px);\r\n        background-color: var-get($theme, 'background');\r\n        border: rem(1px) solid color(null, 'gray', 200);\r\n\r\n        &:hover,\r\n        &:focus {\r\n            @if $not-bootstrap-theme {\r\n                background-color: var-get($theme, 'background');\r\n            }\r\n        }\r\n    }\r\n\r\n    %filter-empty {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        height: rem(144px);\r\n    }\r\n\r\n    %filter-empty__title {\r\n        color: color(null, 'gray', 500);\r\n    }\r\n\r\n    %advanced-filter--cosy {\r\n        %advanced-filter__main {\r\n            min-height: rem(164px);\r\n            max-height: rem(394px);\r\n        }\r\n\r\n        %filter-empty {\r\n            height: rem(107px);\r\n        }\r\n\r\n        %advanced-filter__main,\r\n        %advanced-filter__header {\r\n            padding: $vertical-space-cosy rem(16px);\r\n        }\r\n\r\n        %filter-tree__line {\r\n            margin-inline-end: $horizontal-space-cosy;\r\n        }\r\n\r\n        %filter-tree {\r\n            + %filter-tree,\r\n            + %filter-tree__expression-item,\r\n            + %filter-tree__inputs {\r\n                margin-top: $vertical-space-cosy;\r\n            }\r\n        }\r\n\r\n        %filter-tree__expression-item {\r\n            + %filter-tree,\r\n            + %filter-tree__inputs,\r\n            + %filter-tree__expression-item {\r\n                margin-top: $vertical-space-cosy;\r\n            }\r\n        }\r\n\r\n        %filter-tree__buttons {\r\n            margin-top: $vertical-space-cosy;\r\n\r\n            + %filter-tree,\r\n            + %filter-tree__expression-item,\r\n            + %filter-tree__inputs {\r\n                margin-top: $vertical-space-cosy;\r\n            }\r\n        }\r\n\r\n        %filter-tree__inputs {\r\n            + %filter-tree,\r\n            + %filter-tree__expression-item {\r\n                margin-top: $vertical-space-cosy;\r\n            }\r\n        }\r\n    }\r\n\r\n    %advanced-filter--compact {\r\n        %advanced-filter__main {\r\n            min-height: rem(138px);\r\n            max-height: rem(305px);\r\n        }\r\n\r\n        %filter-empty {\r\n            height: rem(92px);\r\n        }\r\n\r\n        %advanced-filter__main,\r\n        %advanced-filter__header {\r\n            padding: $vertical-space-compact rem(16px);\r\n        }\r\n\r\n        %filter-tree__expression-actions igx-icon {\r\n            width: var(--igx-icon-size, #{$icon-size});\r\n            height: var(--igx-icon-size, #{$icon-size});\r\n            font-size: var(--igx-icon-size, #{$icon-size});\r\n        }\r\n\r\n        %filter-tree__line {\r\n            margin-inline-end: $horizontal-space-compact;\r\n        }\r\n\r\n        %filter-tree {\r\n            + %filter-tree,\r\n            + %filter-tree__expression-item,\r\n            + %filter-tree__inputs {\r\n                margin-top: $vertical-space-compact;\r\n            }\r\n        }\r\n\r\n        %filter-tree__expression-item {\r\n            + %filter-tree,\r\n            + %filter-tree__inputs,\r\n            + %filter-tree__expression-item {\r\n                margin-top: $vertical-space-compact;\r\n            }\r\n        }\r\n\r\n        %filter-tree__buttons {\r\n            margin-top: $vertical-space-compact;\r\n\r\n            + %filter-tree,\r\n            + %filter-tree__expression-item,\r\n            + %filter-tree__inputs {\r\n                margin-top: $vertical-space-compact;\r\n            }\r\n        }\r\n\r\n        %filter-tree__inputs {\r\n            + %filter-tree,\r\n            + %filter-tree__expression-item {\r\n                margin-top: $vertical-space-compact;\r\n            }\r\n        }\r\n    }\r\n\r\n    %advanced-filter--inline {\r\n        display: flex;\r\n        flex-direction: column;\r\n        width: 100%;\r\n        max-width: 100%;\r\n        height: inherit;\r\n        max-height: inherit;\r\n        min-width: rem(480px);\r\n        box-shadow: none;\r\n\r\n        %advanced-filter__main {\r\n            min-height: initial;\r\n            max-height: initial;\r\n            flex-grow: 1;\r\n        }\r\n    }\r\n\r\n    %filter-con-menu--cosy {\r\n        > [igxButton] + [igxButton],\r\n        igx-buttongroup + [igxButton],\r\n        [igxButton] + igx-buttongroup {\r\n            margin-top: $vertical-space-cosy;\r\n        }\r\n    }\r\n\r\n    %filter-con-menu--compact {\r\n        > [igxButton] + [igxButton],\r\n        igx-buttongroup + [igxButton],\r\n        [igxButton] + igx-buttongroup {\r\n            margin-top: $vertical-space-compact;\r\n        }\r\n    }\r\n}\r\n","@use 'sass:map';\r\n@use '../../base' as *;\r\n@use '../../themes/schemas' as *;\r\n\r\n////\r\n/// @group themes\r\n/// @access public\r\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\r\n////\r\n\r\n/// If only background color is specified, text/icon color will be assigned automatically to a contrasting color.\r\n/// @param {Map} $schema [$light-material-schema] - The schema used as basis for styling the component.\r\n/// @param {Color} $thumb-background [null] - The background color used for the thumb.\r\n/// @param {Color} $track-background [null] - The background color used for the track.\r\n/// @param {Number | String} $scrollbar-size [null] - The size of the track.\r\n/// @requires $light-material-schema\r\n/// @example scss Change the background and track colors\r\n///   $my-scrollbar-theme: scrollbar-theme($thumb-background: black, $track-background: gray);\r\n///   // Pass the theme to the css-vars() mixin\r\n///   @include css-vars($my-scrollbar-theme);\r\n@function scrollbar-theme(\r\n    $schema: $light-material-schema,\r\n    $scrollbar-size: null,\r\n    $thumb-background: null,\r\n    $track-background: null,\r\n) {\r\n    $name: 'ig-scrollbar';\r\n    $selector: '.ig-scrollbar';\r\n    $scrollbar-schema: ();\r\n\r\n    @if map.has-key($schema, 'scrollbar') {\r\n        $scrollbar-schema: map.get($schema, 'scrollbar');\r\n    } @else {\r\n        $scrollbar-schema: $schema;\r\n    }\r\n\r\n    $theme: digest-schema($scrollbar-schema);\r\n\r\n    @return extend($theme, (\r\n        name: $name,\r\n        selector: $selector,\r\n        thumb-background: $thumb-background,\r\n        track-background: $track-background,\r\n        scrollbar-size: $scrollbar-size\r\n    ));\r\n}\r\n/// @param {Map} $theme - The theme used to style the component.\r\n@mixin scrollbar($theme) {\r\n    @include css-vars($theme);\r\n\r\n    %scrollbar-display {\r\n        @if type-of(map.get($theme, 'scrollbar-size') == 'string') {\r\n            scrollbar-width: var-get($theme, 'scrollbar-size');\r\n        }\r\n\r\n        scrollbar-color: var-get($theme, 'thumb-background') var-get($theme, 'track-background');\r\n\r\n        ::-webkit-scrollbar {\r\n            width: var-get($theme, 'scrollbar-size');\r\n            height: var-get($theme, 'scrollbar-size');\r\n            background: var-get($theme, 'track-background');\r\n        }\r\n\r\n        ::-webkit-scrollbar-thumb {\r\n            background: var-get($theme, 'thumb-background');\r\n        }\r\n    }\r\n\r\n    @media (hover: none) {\r\n        %scrollbar-display ::-webkit-scrollbar {\r\n            width: auto;\r\n            height: auto;\r\n        }\r\n    }\r\n}\r\n","@use '../mixins' as *;\n\n////\n/// @package theming\n/// @group animations\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n////\n\n/// @requires {mixin} keyframes\n@mixin fade-in-bck {\n    @include keyframes(fade-in-bck) {\n        0% {\n            transform: translateZ(80px);\n            opacity: 0;\n        }\n\n        100% {\n            transform: translateZ(0);\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin fade-in-bl {\n    @include keyframes(fade-in-bl) {\n        0% {\n            transform: translateX(-50px) translateY(50px);\n            opacity: 0;\n        }\n\n        100% {\n            transform: translateX(0) translateY(0);\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin fade-in-bottom {\n    @include keyframes(fade-in-bottom) {\n        0% {\n            transform: translateY(50px);\n            opacity: 0;\n        }\n\n        100% {\n            transform: translateY(0);\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin fade-in-br {\n    @include keyframes(fade-in-br) {\n        0% {\n            transform: translateX(50px) translateY(50px);\n            opacity: 0;\n        }\n\n        100% {\n            transform: translateX(0) translateY(0);\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin fade-in-fwd {\n    @include keyframes(fade-in-fwd) {\n        0% {\n            transform: translateZ(-80px);\n            opacity: 0;\n        }\n\n        100% {\n            transform: translateZ(0);\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin fade-in-left {\n    @include keyframes(fade-in-left) {\n        0% {\n            transform: translateX(-50px);\n            opacity: 0;\n        }\n\n        100% {\n            transform: translateX(0);\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin fade-in-right {\n    @include keyframes(fade-in-right) {\n        0% {\n            transform: translateX(50px);\n            opacity: 0;\n        }\n\n        100% {\n            transform: translateX(0);\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin fade-in-tl {\n    @include keyframes(fade-in-tl) {\n        0% {\n            transform: translateX(-50px) translateY(-50px);\n            opacity: 0;\n        }\n\n        100% {\n            transform: translateX(0) translateY(0);\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin fade-in-top {\n    @include keyframes(fade-in-top) {\n        0% {\n            transform: translateY(-50px);\n            opacity: 0;\n        }\n\n        100% {\n            transform: translateY(0);\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin fade-in-tr {\n    @include keyframes(fade-in-tr) {\n        0% {\n            transform: translateX(50px) translateY(-50px);\n            opacity: 0;\n        }\n\n        100% {\n            transform: translateX(0) translateY(0);\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin fade-in {\n    @include keyframes(fade-in) {\n        0% {\n            opacity: 0;\n        }\n\n        100% {\n            opacity: 1;\n        }\n    }\n}\n","@use 'sass:map';\r\n@use '../../base' as *;\r\n@use '../../themes/schemas' as *;\r\n\r\n////\r\n/// @group themes\r\n/// @access private\r\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\r\n////\r\n\r\n/// Returns a map containing all style properties related to the theming the watermark directive.\r\n/// @param {Map} $schema [$light-material-schema] - The schema used as basis for styling the component.\r\n/// @param {Color} $base-color [null] - The base color for all elements of the watermark.\r\n/// @param {Color} $image-color [null] - The color used for the stamp image.\r\n/// @param {Number} $image-opacity [null] - The opacity of the stamp image.\r\n/// @param {Color} $link-background [null] - The background color used for the link.\r\n/// @param {Color} $color [null] - The color used for the link text.\r\n/// @param {Color} $border-color [null] - The border color used for the  link.\r\n/// @param {List} $border-radius [null] - The border radius used for the link.\r\n///\r\n/// @example scss Change the watermark link background\r\n///   $my-watermark-theme: watermark-theme($link-background: magenta);\r\n///   // Pass the theme to the css-vars() mixin\r\n///   @include css-vars($my-watermark-theme);\r\n/// @requires $light-material-schema\r\n@function watermark-theme(\r\n    $schema: $light-material-schema,\r\n    $base-color: null,\r\n    $image-color: null,\r\n    $image-opacity: null,\r\n    $link-background: null,\r\n    $color: null,\r\n    $border-color: null,\r\n    $border-radius: null,\r\n) {\r\n    $name: 'igx-watermark';\r\n    $watermark-schema: ();\r\n\r\n    @if map.has-key($schema, 'watermark') {\r\n        $watermark-schema: map.get($schema, 'watermark');\r\n    } @else {\r\n        $watermark-schema: $schema;\r\n    }\r\n\r\n    $theme: digest-schema($watermark-schema);\r\n\r\n    @if not($color) and $link-background {\r\n        $color: text-contrast($link-background);\r\n    }\r\n\r\n    @if not($border-radius) {\r\n        $border-radius: border-radius(map.get($theme, 'border-radius')...);\r\n    }\r\n\r\n    @return extend($theme, (\r\n        name: $name,\r\n        selector: 'igc-trial-watermark',\r\n        base-color: $base-color,\r\n        image-color: $image-color,\r\n        image-opacity: $image-opacity,\r\n        link-background: $link-background,\r\n        color: $color,\r\n        border-color: $border-color,\r\n        border-radius: $border-radius,\r\n    ));\r\n}\r\n\r\n/// @param {Map} $theme - The theme used to style the component.\r\n@mixin watermark($theme) {\r\n    @include css-vars($theme);\r\n\r\n    igc-trial-watermark::part(link) {\r\n        font-family: var(--ig-font-family);\r\n    }\r\n}\r\n"]}