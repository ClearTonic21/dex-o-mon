import { InjectionToken } from '@angular/core';
/**
 * Injection token for accessing the grid transaction object.
 * This allows injecting the grid transaction object into components or services.
 */
export const IgxGridTransaction = /*@__PURE__*/ new InjectionToken('IgxGridTransaction');
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHlwZXMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9pZ25pdGV1aS1hbmd1bGFyL3NyYy9saWIvZ3JpZHMvY29tbW9uL3R5cGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFpRy9DOzs7R0FHRztBQUNILE1BQU0sQ0FBQyxNQUFNLGtCQUFrQixHQUFHLGFBQWEsQ0FBQSxJQUFJLGNBQWMsQ0FBUyxvQkFBb0IsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0aW9uVG9rZW4gfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuLyoqXG4gKiBSZXByZXNlbnRzIGEgcmFuZ2Ugc2VsZWN0aW9uIGJldHdlZW4gY2VydGFpbiByb3dzIGFuZCBjb2x1bW5zIG9mIHRoZSBncmlkLlxuICogUmFuZ2Ugc2VsZWN0aW9uIGNhbiBiZSBtYWRlIGVpdGhlciB0aHJvdWdoIGRyYWcgc2VsZWN0aW9uIG9yIHRocm91Z2gga2V5Ym9hcmQgc2VsZWN0aW9uLlxuICovXG5leHBvcnQgaW50ZXJmYWNlIEdyaWRTZWxlY3Rpb25SYW5nZSB7XG4gICAgLyoqIFRoZSBpbmRleCBvZiB0aGUgc3RhcnRpbmcgcm93IG9mIHRoZSBzZWxlY3Rpb24gcmFuZ2UuICovXG4gICAgcm93U3RhcnQ6IG51bWJlcjtcbiAgICAgLyoqIFRoZSBpbmRleCBvZiB0aGUgZW5kaW5nIHJvdyBvZiB0aGUgc2VsZWN0aW9uIHJhbmdlLiAqL1xuICAgIHJvd0VuZDogbnVtYmVyO1xuICAgIC8qKlxuICAgICAqIFRoZSBpZGVudGlmaWVyIG9yIGluZGV4IG9mIHRoZSBzdGFydGluZyBjb2x1bW4gb2YgdGhlIHNlbGVjdGlvbiByYW5nZS5cbiAgICAgKiBJdCBjYW4gYmUgZWl0aGVyIGEgc3RyaW5nIHJlcHJlc2VudGluZyB0aGUgY29sdW1uJ3MgZmllbGQgbmFtZSBvciBhIG51bWVyaWMgaW5kZXguXG4gICAgICovXG4gICAgY29sdW1uU3RhcnQ6IHN0cmluZyB8IG51bWJlcjtcbiAgICAvKipcbiAgICAgKiBUaGUgaWRlbnRpZmllciBvciBpbmRleCBvZiB0aGUgZW5kaW5nIGNvbHVtbiBvZiB0aGUgc2VsZWN0aW9uIHJhbmdlLlxuICAgICAqIEl0IGNhbiBiZSBlaXRoZXIgYSBzdHJpbmcgcmVwcmVzZW50aW5nIHRoZSBjb2x1bW4ncyBmaWVsZCBuYW1lIG9yIGEgbnVtZXJpYyBpbmRleC5cbiAgICAgKi9cbiAgICBjb2x1bW5FbmQ6IHN0cmluZyB8IG51bWJlcjtcbn1cblxuLyoqXG4gKiBSZXByZXNlbnRzIGEgc2luZ2xlIHNlbGVjdGVkIGNlbGwgb3Igbm9kZSBpbiBhIGdyaWQuXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgSVNlbGVjdGlvbk5vZGUge1xuICAgIC8qKlxuICAgICAqIFRoZSBpbmRleCBvZiB0aGUgc2VsZWN0ZWQgcm93LlxuICAgICAqL1xuICAgIHJvdzogbnVtYmVyO1xuICAgIC8qKlxuICAgICAqIFRoZSBpbmRleCBvZiB0aGUgc2VsZWN0ZWQgY29sdW1uLlxuICAgICAqL1xuICAgIGNvbHVtbjogbnVtYmVyO1xuICAgIC8qKlxuICAgICAqIChPcHRpb25hbClcbiAgICAgKiBBZGRpdGlvbmFsIGxheW91dCBpbmZvcm1hdGlvbiBmb3IgbXVsdGktcm93IHNlbGVjdGlvbiBub2Rlcy5cbiAgICAgKi9cbiAgICBsYXlvdXQ/OiBJTXVsdGlSb3dMYXlvdXROb2RlO1xuICAgIC8qKlxuICAgICAqIChPcHRpb25hbClcbiAgICAgKiBJbmRpY2F0ZXMgaWYgdGhlIHNlbGVjdGVkIG5vZGUgaXMgYSBzdW1tYXJ5IHJvdy5cbiAgICAgKiBUaGlzIHByb3BlcnR5IGlzIHRydWUgaWYgdGhlIHNlbGVjdGVkIHJvdyBpcyBhIHN1bW1hcnkgcm93OyBvdGhlcndpc2UsIGl0IGlzIGZhbHNlLlxuICAgICAqL1xuICAgIGlzU3VtbWFyeVJvdz86IGJvb2xlYW47XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgSU11bHRpUm93TGF5b3V0Tm9kZSB7XG4gICAgcm93U3RhcnQ6IG51bWJlcjtcbiAgICBjb2xTdGFydDogbnVtYmVyO1xuICAgIHJvd0VuZDogbnVtYmVyO1xuICAgIGNvbEVuZDogbnVtYmVyO1xuICAgIGNvbHVtblZpc2libGVJbmRleDogbnVtYmVyO1xufVxuXG4vKipcbiAqIFJlcHJlc2VudHMgdGhlIHN0YXRlIG9mIHRoZSBrZXlib2FyZCB3aGVuIHNlbGVjdGluZy5cbiAqL1xuZXhwb3J0IGludGVyZmFjZSBJU2VsZWN0aW9uS2V5Ym9hcmRTdGF0ZSB7XG4gICAgLyoqIFRoZSBzZWxlY3RlZCBub2RlIGluIHRoZSBncmlkLCBpZiBhbnkuIENhbiBiZSBudWxsIGlmIG5vIG5vZGUgaXMgc2VsZWN0ZWQuICovXG4gICAgbm9kZTogbnVsbCB8IElTZWxlY3Rpb25Ob2RlO1xuICAgIC8qKiBJbmRpY2F0ZXMgd2hldGhlciB0aGUgU2hpZnQga2V5IGlzIGN1cnJlbnRseSBwcmVzc2VkIGR1cmluZyB0aGUgc2VsZWN0aW9uLiAqL1xuICAgIHNoaWZ0OiBib29sZWFuO1xuICAgIC8qKiBUaGUgcmFuZ2Ugb2YgdGhlIHNlbGVjdGVkIGNlbGxzIGluIHRoZSBncmlkLiBDYW4gYmUgbnVsbCB3aGVuIHJlc2V0dGluZyB0aGUgc2VsZWN0aW9uLiAqL1xuICAgIHJhbmdlOiBHcmlkU2VsZWN0aW9uUmFuZ2U7XG4gICAgLyoqIEluZGljYXRlcyB3aGV0aGVyIHRoZSBzZWxlY3Rpb24gaXMgY3VycmVudGx5IGFjdGl2ZSAoYmVpbmcgcGVyZm9ybWVkKS4gYEZhbHNlYCB3aGVuIHJlc2V0dGluZyB0aGUgc2VsZWN0aW9uLiAgKi9cbiAgICBhY3RpdmU6IGJvb2xlYW47XG59XG5cbi8qKlxuICogUmVwcmVzZW50cyB0aGUgc3RhdGUgb2YgdGhlIGdyaWQgc2VsZWN0aW9uIHVzaW5nIHBvaW50ZXIgaW50ZXJhY3Rpb25zIChtb3VzZSkuXG4gKiBFeHRlbmRzIElTZWxlY3Rpb25LZXlib2FyZFN0YXRlIHRvIGluY2x1ZGUgcG9pbnRlci1zcGVjaWZpYyBwcm9wZXJ0aWVzLlxuICovXG5leHBvcnQgaW50ZXJmYWNlIElTZWxlY3Rpb25Qb2ludGVyU3RhdGUgZXh0ZW5kcyBJU2VsZWN0aW9uS2V5Ym9hcmRTdGF0ZSB7XG4gICAgLyoqIEluZGljYXRlcyB3aGV0aGVyIHRoZSBDdHJsIGtleSBpcyBjdXJyZW50bHkgcHJlc3NlZCBkdXJpbmcgdGhlIHNlbGVjdGlvbi4gKi9cbiAgICBjdHJsOiBib29sZWFuO1xuICAgIC8qKiBJbmRpY2F0ZXMgd2hldGhlciB0aGUgcHJpbWFyeSBwb2ludGVyIGJ1dHRvbiBpcyBwcmVzc2VkIGR1cmluZyB0aGUgc2VsZWN0aW9uIChjbGlja2VkKS4gKi9cbiAgICBwcmltYXJ5QnV0dG9uOiBib29sZWFuO1xufVxuXG4vKipcbiAqIFJlcHJlc2VudHMgdGhlIHN0YXRlIG9mIHRoZSBjb2x1bW5zIGluIHRoZSBncmlkLlxuICovXG5leHBvcnQgaW50ZXJmYWNlIElDb2x1bW5TZWxlY3Rpb25TdGF0ZSB7XG4gICAgIC8qKiBSZXByZXNlbnRzIHRoZSBmaWVsZCBuYW1lIG9mIHRoZSBzZWxlY3RlZCBjb2x1bW4sIGlmIGFueS4gQ2FuIGJlIG51bGwgaWYgbm8gY29sdW1uIGlzIHNlbGVjdGVkLiAqL1xuICAgIGZpZWxkOiBudWxsIHwgc3RyaW5nO1xuICAgIC8qKiBBbiBhcnJheSBvZiBzdHJpbmdzIHJlcHJlc2VudGluZyB0aGUgcmFuZ2VzIG9mIHNlbGVjdGVkIGNvbHVtbnMgaW4gdGhlIGdyaWQuICovXG4gICAgcmFuZ2U6IHN0cmluZ1tdO1xufVxuXG4vKipcbiAqIFJlcHJlc2VudHMgdGhlIG92ZXJhbGwgc3RhdGUgb2YgZ3JpZCBzZWxlY3Rpb24sIGNvbWJpbmluZyBib3RoIGtleWJvYXJkIGFuZCBwb2ludGVyIGludGVyYWN0aW9uIHN0YXRlcy5cbiAqIEl0IGNhbiBiZSBlaXRoZXIgYW4gSVNlbGVjdGlvbktleWJvYXJkU3RhdGUgb3IgYW4gSVNlbGVjdGlvblBvaW50ZXJTdGF0ZS5cbiAqL1xuZXhwb3J0IHR5cGUgU2VsZWN0aW9uU3RhdGUgPSBJU2VsZWN0aW9uS2V5Ym9hcmRTdGF0ZSB8IElTZWxlY3Rpb25Qb2ludGVyU3RhdGU7XG5cbi8qKlxuICogSW5qZWN0aW9uIHRva2VuIGZvciBhY2Nlc3NpbmcgdGhlIGdyaWQgdHJhbnNhY3Rpb24gb2JqZWN0LlxuICogVGhpcyBhbGxvd3MgaW5qZWN0aW5nIHRoZSBncmlkIHRyYW5zYWN0aW9uIG9iamVjdCBpbnRvIGNvbXBvbmVudHMgb3Igc2VydmljZXMuXG4gKi9cbmV4cG9ydCBjb25zdCBJZ3hHcmlkVHJhbnNhY3Rpb24gPSAvKkBfX1BVUkVfXyovbmV3IEluamVjdGlvblRva2VuPHN0cmluZz4oJ0lneEdyaWRUcmFuc2FjdGlvbicpO1xuIl19